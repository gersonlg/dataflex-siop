/TELA_SISTEMA RESIDENT
зд CN-SIFPM ддддд Sistema Integrado de Finan┤as Pёblicas Municipais ддддд ____ ©
Ё______________________________________________________________________________Ё
цдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё __/__/____  ________________________________________________________  CONAM  Ё
фмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╣
/TELA_SEGURANCA RESIDENT
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё                                                                      Ё
Ё                                                                      Ё
Ё               PROBLEMAS COM A INSTALACAO DO SISTEMA.                 Ё
Ё                                                                      Ё
Ё         CONSULTE O SETOR DE SUPORTE DE SISTEMAS DA CONAM.            Ё
Ё                                                                      Ё
Ё______________________________________________________________________Ё
Ё                                                                      Ё
Ё                                                                      Ё
юдддддддддддддддд Pressione Qualquer Tecla para SAIR дддддддддддддддддды
/TELA_WEBSAFE_MENSAGEM RESIDENT
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё                                                                      Ё
Ё                                                                      Ё
Ё______________________________________________________________________Ё
Ё                                                                      Ё
Ё______________________________________________________________________Ё
Ё                                                                      Ё
Ё______________________________________________________________________Ё
Ё                                                                      Ё
Ё                                                                      Ё
Ё                                                                      Ё
Ё                                                                      Ё
юддддддддддддддддд__________________________________ддддддддддддддддддды
/TELA_WEBSAFE_AUTENTICAR RESIDENT
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё                                                                      Ё
Ё                                                                      Ё
Ё                                                                      Ё
Ё   INFORME O CODIGO  ->  ______  NO SITE https://token.conam.com.br/  Ё
Ё                                                                      Ё
Ё                                                                      Ё
Ё                                                                      Ё
Ё     DIGITE O TOKEN DE ACESSO PARA VALIDAR SUA LICENCA  ->  ______    Ё
Ё                                                                      Ё
Ё                                                                      Ё
Ё                                                                      Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
/RODAPE_MENSAGEM_LIB
юддддддддддддддддддддддддддд Novas Mensagens ___. ддддддддддддддддддддддддддддды
/IMPRESSORA RESIDENT
зддддддддддддддддддддддддддддддддддд©
Ё  INFORMA A IMPRESSORA DE SA║DA :  Ё
цддддддддддддддддддддддддддддддддддд╢
Ё          1 - Matricial            Ё
Ё          2 - Laser                Ё
Ё          3 - Cancela Impress└o    Ё
юддддддддддддддддддддддддддддддддддды
/FIM RESIDENT
цдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё                                                                              Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
/IMPRIME_NOTA RESIDENT
____________________________________________________________________________________________________________________________________________________________________________________________________________________________
/IMPRIME_NOTA_EXPLICATIVA RESIDENT
 ______________________________________________________________________________________________________________________________________________________
 ______________________________________________________________________________________________________________________________________________________
 ______________________________________________________________________________________________________________________________________________________
 ______________________________________________________________________________________________________________________________________________________
/*
//----- CONAM.LIB ----- BIBLIOTECA DE COMANDOS --  14:11 11/09/95

STRING  ST_TECLA 1 ST@GROUP

//--configuracoes do mensageria
STRING  ST_MODULO_MENSAGERIA
STRING  ST_CLIENTE_MENSAGERIA
STRING  ST_INSTALACAO_MENSAGERIA
STRING  ST_ENTIDADE_MENSAGERIA
STRING  ST_PATH_MENSAGERIA 255
STRING  ST_LER_ENV_MENSAGERIA 255
STRING  ST_LINHA_ENV

//--chamada-mensagem-websafe
STRING  ST_MENSAGEM_WEBSAFE 255
STRING  ST_MODULO_WEBSAFE
STRING  ST_NOME_USUARIO_WEBSAFE
STRING  ST_CHAMADA_WEBSAFE 255
STRING  ST_IDENTIFICADOR_CHAMADA_WEBSAFE
STRING  ST_ARQUIVO_WEBSAFE 255
STRING  ST_CODIGO_USUARIO_WEBSAFE
INTEGER IT_USUARIO_WEBSAFE

SET_OPTION NO_CALC

INTEGER IT_COR_MOLDURA IT_COR_TARJA IT_COR_TITULO //VARIAVEIS QUE PASSAM CORES
                                                  //AOS PROGRAMAS

INTEGER IT@PUBLICA // VARIAVEL CRIADA PARA SABER SE RELATORIO DEVE OU NAO SER
                   // PUBLICADO NO CONTAS PUBLICAS

INDICATE @PUBLICA! FALSE

MOVE 0 TO IT@PUBLICA

OPEN ACESSOS
OPEN MENUUSER
OPEN MENUCOMP
OPEN MENUTITU
OPEN MENUPROG
OPEN PARGERAL
OPEN ENCERRA
OPEN AUDESP
OPEN TBAUDESP
OPEN CONFIGS
OPEN ENTIDADE

#IFDEF ST@PREFEITURA
#ELSE
  STRING ST@PREFEITURA
#ENDIF
#IFDEF ST@USUARIO
#ELSE
  STRING ST@USUARIO 5
#ENDIF
#IFDEF ST@USR@TTY
#ELSE
  STRING ST@USR@TTY
#ENDIF
#IFDEF ST@MATR@LASER
#ELSE
  STRING ST@MATR@LASER 1
#ENDIF
#IFDEF ST@COD@ENTIDADE
#ELSE
  STRING ST@COD@ENTIDADE 2
#ENDIF
#IFDEF ST@ARQUIVO@WEBSAFE
#ELSE
   STRING ST@ARQUIVO@WEBSAFE
#ENDIF
#IFDEF ST@RETORNO@API
#ELSE
   STRING ST@RETORNO@API
#ENDIF
#IFDEF IT@QTDE@ENTIDADES
#ELSE
  INTEGER IT@QTDE@ENTIDADES
#ENDIF
#IFDEF IT@QTDE@REGISTROS@PARGERAL
#ELSE
  INTEGER IT@QTDE@REGISTROS@PARGERAL
#ENDIF
#IFDEF ST@MULTI@ENTIDADE
#ELSE
  STRING ST@MULTI@ENTIDADE
#ENDIF
#IFDEF ST@MES@IMPLANTACAO
#ELSE
 STRING ST@MES@IMPLANTACAO
#ENDIF

//--
//--parametros sfpm multi-entidade e multi-exercicio
//--
#IFDEF ST@CODIGO@ENTIDADE
#ELSE
  STRING ST@CODIGO@ENTIDADE 2
#ENDIF
#IFDEF ST@EXERCICIO@FINANCEIRO
#ELSE
  STRING ST@EXERCICIO@FINANCEIRO 4
#ENDIF
#IFDEF ST@EXERCICIO@FINANCEIRO@ANTERIOR
#ELSE
  STRING ST@EXERCICIO@FINANCEIRO@ANTERIOR 4
#ENDIF
#IFDEF ST@EXERCICIO@FINANCEIRO@POSTERIOR
#ELSE
  STRING ST@EXERCICIO@FINANCEIRO@POSTERIOR 4
#ENDIF

#IFDEF ST@SAIDA@IP
#ELSE
  STRING ST@SAIDA@IP
#ENDIF

#IFDEF ST@COMANDO@IP
#ELSE
  STRING ST@COMANDO@IP 255
#ENDIF

#IFDEF ST@VERSAO
#ELSE
  STRING ST@VERSAO
#ENDIF

#IFDEF ST@IP@GLOBAL
#ELSE
   STRING ST@IP@GLOBAL 100
#ENDIF

#IFDEF ST@LINHA1
#ELSE
  STRING ST@LINHA1
#ENDIF

#IFDEF ST@ACESSO@API
#ELSE
  STRING ST@ACESSO@API
  MOVE '' TO ST@ACESSO@API
#ENDIF

//------alteracoes efetuadas em 02/07/98 para o main novo
STRING ST@OPCAO ST@PROGRAMA

//--
//--rotina para verificar se cliente ja esta com os campos preenchidos
//--
STRING ST@VERSAO@SIAFIC

#COMMAND VERIFICA_VERSAO_SIAFIC
 MOVE 'VERSAO_01' TO ST@VERSAO@SIAFIC
 
 CLEAR MENUUSER
 FIND GT MENUUSER BY RECNUM
 [ FOUND] BEGIN
           IF MENUUSER.COD_ENTIDADE NE '' MOVE 'VERSAO_02' TO ST@VERSAO@SIAFIC
           ELSE                           MOVE 'VERSAO_01' TO ST@VERSAO@SIAFIC
          END
 [~FOUND] BEGIN
           MOVE 'VERSAO_02' TO ST@VERSAO@SIAFIC
           
           //--para funcionar na base git dsv
           CLEAR PARGERAL
           MOVE '' TO PARGERAL.COD_ENTIDADE
           FIND GT PARGERAL BY INDEX.2
           [ FOUND] INDICATE FOUND AS PARGERAL.COD_ENTIDADE EQ ''
           [ FOUND] MOVE 'VERSAO_01' TO ST@VERSAO@SIAFIC
           [~FOUND] MOVE 'VERSAO_02' TO ST@VERSAO@SIAFIC
          END
 CLEAR MENUUSER
#ENDCOMMAND
//--
//--
//--

//-- finalmente todos na mesma versao (junho - 2022)
MOVE 'VERSAO_02' TO ST@VERSAO@SIAFIC

//-------------------------------------------------------------------------------------------
CMDLINE ST@PREFEITURA
TRIM ST@PREFEITURA TO ST@PREFEITURA

CMDLINE ST@USUARIO
TRIM ST@USUARIO TO ST@USUARIO

CMDLINE ST@OPCAO
TRIM ST@OPCAO TO ST@OPCAO

CMDLINE ST@PROGRAMA                                             //-----para assinaturas nos .rpt
TRIM ST@PROGRAMA TO ST@PROGRAMA

//-- finalmente todos na mesma versao (junho - 2022)
VERIFICA_VERSAO_SIAFIC

MOVE 'VERSAO_02' TO ST@VERSAO@SIAFIC

IF ST@VERSAO@SIAFIC EQ 'VERSAO_02' BEGIN
                                    CMDLINE ST@CODIGO@ENTIDADE                                   //-----login multi-entidade
                                    TRIM ST@CODIGO@ENTIDADE TO ST@CODIGO@ENTIDADE
                                    //
                                    CMDLINE ST@EXERCICIO@FINANCEIRO                              //-----login multi-entidade
                                    TRIM ST@EXERCICIO@FINANCEIRO TO ST@EXERCICIO@FINANCEIRO
                                   END

IF ST@VERSAO@SIAFIC EQ 'VERSAO_01' BEGIN
                                    //-- vazio por enquanto
                                    MOVE '' TO ST@CODIGO@ENTIDADE
                                    MOVE '' TO ST@EXERCICIO@FINANCEIRO
                                    MOVE '' TO ST@EXERCICIO@FINANCEIRO@ANTERIOR
                                    MOVE '' TO ST@EXERCICIO@FINANCEIRO@POSTERIOR
                                   END

IF ((ST@EXERCICIO@FINANCEIRO NE '') AND (ST@EXERCICIO@FINANCEIRO NE 'XXXX')) BEGIN
                                                                              CALC (ST@EXERCICIO@FINANCEIRO - 1) TO ST@EXERCICIO@FINANCEIRO@ANTERIOR
                                                                              CALC (ST@EXERCICIO@FINANCEIRO + 1) TO ST@EXERCICIO@FINANCEIRO@POSTERIOR
                                                                             END

//--

// string st_a st_b
// CMDLINE st_a
// cmdline st_b
// 
// CLEARXY 0 0
// SHOWLN 'CONAM.LIB  '
// SHOWLN 'prefeitura ' ST@PREFEITURA
// SHOWLN 'operador   ' ST@USUARIO
// SHOWLN 'opcao      ' ST@OPCAO
// SHOWLN 'programa   ' ST@PROGRAMA
// SHOWLN 'entidade   ' ST@CODIGO@ENTIDADE
// SHOWLN 'exercicio  ' ST@EXERCICIO@FINANCEIRO
// SHOWLN 'versao     ' ST@VERSAO@SIAFIC
// showln st_a
// showln st_b
// PAUSE .


//-------------------------------------------------------------------------------------------

REPEAT
 REPLACE '@' IN ST@PREFEITURA WITH ' '
UNTIL [~ FOUND]

AUTOPAGE RODAPE_MENSAGEM_LIB
NAME JN_QUANTIDADE_MENSAGEM_LIB

CLEAR MENUUSER
MOVE ST@USUARIO TO MENUUSER.CODIGO
FIND EQ MENUUSER BY INDEX.1
[ FOUND] BEGIN
          MOVE MENUUSER.COR_MOLDURA  TO IT_COR_MOLDURA
          MOVE MENUUSER.COR_TARJA    TO IT_COR_TARJA
          MOVE MENUUSER.COR_TITULO   TO IT_COR_TITULO
         END

IF ST@VERSAO@SIAFIC EQ 'VERSAO_02' BEGIN
                                    CLEAR PARGERAL
                                    MOVE ST@EXERCICIO@FINANCEIRO TO PARGERAL.EXERCICIO
                                    MOVE ST@CODIGO@ENTIDADE      TO PARGERAL.COD_ENTIDADE
                                    FIND EQ PARGERAL BY INDEX.1
                                   END

//------INDICA SE ┌ AUDESP
#IFDEF ST@TIPO@FONTE
#ELSE
  STRING ST@TIPO@FONTE 1
#ENDIF

INDICATE @AUDESP! AS PARGERAL.AUDESP EQ 'S'
[~@AUDESP!] MOVE 'B' TO ST@TIPO@FONTE
[ @AUDESP!] MOVE 'A' TO ST@TIPO@FONTE

MOVE PARGERAL.COD_ENTIDADE TO ST@COD@ENTIDADE

INDICATE     @SICOM! AS ((PARGERAL.ESTADO EQ 'MG') AND (PARGERAL.EXERCICIO GE '2012'))
INDICATE @AUDESP_SP! AS   PARGERAL.ESTADO EQ 'SP'

[ @SICOM!] BEGIN
            //--utilizar fonte de recurso do tce-mg
            IF PARGERAL.EXERCICIO GE '2018' BEGIN
                                             MOVE 'S' TO ST@TIPO@FONTE
                                            END
           END
//--

//------INDICATE SE TEM COMPRAS
INDICATE @COMPRAS! AS PARGERAL.SIAM EQ 'S'

//------INDICATE SE TEM CONTRATO
INDICATE @CONTRATO! AS PARGERAL.CONTRATO EQ 'S'

//------INDICATE SE TEM PATRIMONIO
INDICATE @PATRIMONIO! AS PARGERAL.PATRIMONIO EQ 'S'
INDICATE @PATRI_NOVO! FALSE
INDICATE @PATRI_OLD!  FALSE
[ @PATRIMONIO!] BEGIN
 INDICATE @PATRI_NOVO! AS PARGERAL.EXERCICIO GE '2030' //--integrado
 INDICATE @PATRI_OLD!  AS PARGERAL.EXERCICIO LE '2029' //--integrado Meia Boca
 END

//------INDICATE SE TEM SIAP
INDICATE @INTEGRA_FOLHA! FALSE
INDICATE @INTEGRA_FOLHA! AS (((MID(PARGERAL.SIAP,1,2)) EQ 'S') AND (PARGERAL.EXERCICIO GE '2013')) //--integrado

//------INDICATE SE e PREVIDENCIA
INDICATE @PREVIDENCIA! AS PARGERAL.PREVIDENCIA EQ 'S'

//------INDICATE SE SEPARA PERMISSOES POR SETOR
INDICATE @SEPARA_SETOR! AS (MID(PARGERAL.AUXILIAR,1,4)) EQ 'S'

//------INDICATE CODIGO DE APLICACAO COM 7 DIGITOS
INDICATE @CAPLNOVO! AS PARGERAL.EXERCICIO GE '2009'

//------INDICATE PM SOROCABA
INDICATE @PM_SOROCABA! AS ((PARGERAL.COD_SIAFI EQ 7145) AND (PARGERAL.COD_ENTIDADE EQ '01'))

INDICATE @AJUSTE_IMPLANTACAO! AS (MID(PARGERAL.AUXILIAR,2,6)) NE ''
INDICATE        @IMPLANTACAO! AS (MID(PARGERAL.AUXILIAR,2,6)) NE ''

[ @AJUSTE_IMPLANTACAO!] MOVE (MID(PARGERAL.AUXILIAR,2,6)) TO ST@MES@IMPLANTACAO

//--- CMDLINE NA CHAVE PARA NAO RODAR POR FORA AQUI !!!!!
//----ABREREL --- ABERTURA DE RELATORIOS


// ----- LOWERCASE - troca letras maiusculas por minusculas

#COMMAND LOWERCASE

#IFDEF  ST@LETRA@MAI
#ELSE
  STRING  ST@LETRA@MAI 1 ST@LETRA@MIN 1
  INTEGER IT@LOWERCASE   IT@LOWERCASE@MIN
#ENDIF

FOR IT@LOWERCASE FROM 65 TO 90
  REPEAT
    CHARACTER IT@LOWERCASE     TO ST@LETRA@MAI
    CALC (IT@LOWERCASE + 32)   TO IT@LOWERCASE@MIN
    CHARACTER IT@LOWERCASE@MIN TO ST@LETRA@MIN
    REPLACE ST@LETRA@MAI IN !1 WITH ST@LETRA@MIN
  UNTIL [~FOUND]
  INDICATE FOUND TRUE
LOOP

#ENDCOMMAND


//--
//--colocar o ip na descricao do acessos
//--
MOVE ST@USUARIO TO ST@SAIDA@IP
LOWERCASE ST@SAIDA@IP
APPEND ST@SAIDA@IP "ip.txt"
//--criar SH
GET_CURRENT_DIRECTORY TO ST@COMANDO@IP
APPEND ST@COMANDO@IP '/' (LOWERCASE(TRIM(ST@USUARIO))) '_ip.sh'
DIRECT_OUTPUT ST@COMANDO@IP
WRITELN "echo $SSH_CLIENT | awk '{print $1}' > " ST@SAIDA@IP
CLOSE_OUTPUT
//--executar SH
MOVE '. ./' TO ST@COMANDO@IP
APPEND ST@COMANDO@IP (LOWERCASE(TRIM(ST@USUARIO))) '_ip.sh'
RUNPROGRAM WAIT ST@COMANDO@IP
//--apagar SH
GET_CURRENT_DIRECTORY TO ST@COMANDO@IP
APPEND ST@COMANDO@IP '/' (LOWERCASE(TRIM(ST@USUARIO))) '_ip.sh'
ERASEFILE ST@COMANDO@IP
//--
//--final colocar o ip na descricao
//--

#COMMAND BUSCA_TBAUDESP
 INDICATE @OK! TRUE

 CLEAR AUDESP
 MOVE !1 TO AUDESP.DESCRICAO
 FIND EQ AUDESP BY INDEX.2
 [~FOUND] INDICATE @OK! FALSE
 [ FOUND] BEGIN
           CLEAR TBAUDESP
           MOVE AUDESP.CODIGO TO TBAUDESP.COD_AUDESP
           MOVE !2            TO TBAUDESP.CODIGO
           FIND EQ TBAUDESP BY INDEX.1
           [~FOUND] INDICATE @OK! FALSE
           [ FOUND] MOVE TBAUDESP.DESCRICAO TO !3
          END
#ENDCOMMAND

#COMMAND ABREREL

#IFDEF ST@NOME
#ELSE
   STRING ST@NOME
#ENDIF
#IFDEF ST@HORA
#ELSE
   STRING ST@HORA 2
#ENDIF
#IFDEF ST@MINUTO
#ELSE
   STRING ST@MINUTO 2
#ENDIF
#IFDEF ST@SEGUNDO
#ELSE
   STRING ST@SEGUNDO 2
#ENDIF
#IFDEF ST@NUMERO
#ELSE
   STRING ST@NUMERO 
#ENDIF
#IFDEF ST@TEMPO
#ELSE
   STRING ST@TEMPO
#ENDIF
#IFDEF DT@DATA
#ELSE
   DATE DT@DATA
#ENDIF
#IFDEF ST@ARQUIVO@SEQUENCIA
#ELSE
 STRING ST@ARQUIVO@SEQUENCIA
#ENDIF
#IFDEF ST@IMPRESSORA
#ELSE
 STRING ST@IMPRESSORA
#ENDIF
#IFDEF ST@IMP
#ELSE
 STRING ST@IMP
#ENDIF
#IFDEF ST@AUX
#ELSE
 STRING ST@AUX
#ENDIF

//----- NOMEREL ---- CENTRALIZA NOME DA PREFEITURA NO RELATORIO (PARTE DO ABREREL)

#IFDEF IT@AUX
#ELSE
   INTEGER IT@AUX
#ENDIF
#IFDEF ST_NOME_CENTRAL
#ELSE
   STRING ST_NOME_CENTRAL 60
#ENDIF
#IFDEF ST@ARQUIVO
#ELSE
   STRING ST@ARQUIVO
#ENDIF
#IFDEF ST@ARQUIVO@SEQUENCIA
#ELSE
   STRING ST@ARQUIVO@SEQUENCIA
#ENDIF
#IFDEF IT@COMP1
#ELSE
   INTEGER IT@COMP1
#ENDIF
#IFDEF ST@TECLA@PUBLICA
#ELSE
   STRING ST@TECLA@PUBLICA 1
#ENDIF   
#IFDEF ST@CODIGO@PADRAO@PRN
#ELSE
   STRING ST@CODIGO@PADRAO@PRN 
#ENDIF 
#IFDEF ST@FILED@LENGTH
#ELSE
   STRING ST@FILED@LENGTH 2
#ENDIF

MOVE ''              TO ST_NOME_CENTRAL
LENGTH ST@PREFEITURA TO IT@AUX
MOVE ((60-IT@AUX)/2) TO IT@AUX
PAD ST_NOME_CENTRAL  TO ST_NOME_CENTRAL IT@AUX
APPEND ST_NOME_CENTRAL ST@PREFEITURA
//-----
OPEN ARQ_PRN

// ( verify dfconfig )
IF (OBTER_CONFIGURACAO('MODULO_GERRELAT_WEB',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO)) NE '' BEGIN
 MOVE 62 TO PAGEEND // sem gerrelatWeb
END
ELSE BEGIN
 MOVE 58 TO PAGEEND // com gerrelatWeb
END

BEEP

SCREENMODE IT_COR_TITULO ON
GOTOXY 22 02
SHOW ' Deseja enviar a sa║da para (G)erenciamento, (I)mpressora ou (A)bandonar  ? '
SCREENMODE IT_COR_TARJA ON

INKEYCHECK ST_TECLA IN 'GgIiAa'

IF ST_TECLA IN 'Aa' ABORT

//--publicacao no Contas Publicas
MOVE 0 TO IT@PUBLICA

CLEAR MENUUSER
MOVE ST@USUARIO TO MENUUSER.CODIGO
FIND EQ MENUUSER BY INDEX.1

//--- novo tamanho do arq_prn.codigo 
MOVEALL '' TO ST@FILED@LENGTH ST@CODIGO@PADRAO@PRN
// GET_ATTRIBUTE DF_FIELD_LENGTH OF 208 3 TO ST@FILED@LENGTH
MOVE '5' TO ST@FILED@LENGTH
MOVE (OBTER_CODIGO_PRN(ST@FILED@LENGTH,PARGERAL.EXERCICIO)) TO ST@CODIGO@PADRAO@PRN

[ @PUBLICA!] BEGIN
              IF MENUUSER.GERA_CP EQ 'S' BEGIN
                                          BEEP

                                          SCREENMODE IT_COR_TITULO ON
                                          GOTOXY 22 02
                                          SHOW '             Deseja publicar relatorio no contas publicas ?! (S/N)          '
                                          SCREENMODE IT_COR_TARJA ON

                                          INKEYCHECK ST@TECLA@PUBLICA IN 'SsNn'
                                          
                                          IF ST@TECLA@PUBLICA IN 'Ss' MOVE 1 TO IT@PUBLICA
                                         END
             END
//--

INDICATE GERRELAT! AS ST_TECLA IN 'Gg'
[~ GERRELAT!] BEGIN
               VERSAO

               [~LINUX!] BEGIN
                          IF MENUUSER.TIPO_IMP EQ 'A' ESCIMP
                          IF MENUUSER.TIPO_IMP EQ 'L' MOVE '2' TO ST@MATR@LASER
                          IF MENUUSER.TIPO_IMP EQ ''  MOVE '1' TO ST@MATR@LASER
                          IF ST@MATR@LASER EQ '2' BEGIN
                                                   MOVE ST@USUARIO TO ST@ARQUIVO@SEQUENCIA
                                                   APPEND ST@ARQUIVO@SEQUENCIA '.PRN'
                                                   DIRECT_OUTPUT ST@ARQUIVO@SEQUENCIA

                                                   //-com negrito (s2B//
                                                   //IF !2 EQ '80'    WRITE 'E&l26A&l0O&l2E&l8C(s12H(s2B'
                                                   //IF !2 EQ '80C'   WRITE 'E&l26A&l0O&l2E&l8C(s16H(s2B'
                                                   //IF !2 EQ '80C+'  WRITE 'E&l26A&l0O&l2E&l8C(s20H(s2B'
                                                   //IF !2 EQ '132'   WRITE 'E&l26A&l1O&l2E&l5C(s12H(s2B'
                                                   //IF !2 EQ '132C'  WRITE 'E&l26A&l1O&l2E&l5C(s16H(s2B'
                                                   //IF !2 EQ '132C+' WRITE 'E&l26A&l1O&l2E&l5C(s20H(s2B'

                                                   //-sem negrito (s2B//
                                                   IF !2 EQ '080'   WRITE 'E&l26A&l0O&l2E&l8C(s12H&l1X'
                                                   IF !2 EQ '080C'  WRITE 'E&l26A&l0O&l2E&l8C(s16H&l1X'
                                                   IF !2 EQ '080C+' WRITE 'E&l26A&l0O&l2E&l8C(s20H&l1X'
                                                   IF !2 EQ '080L'  WRITE 'E&l26A&l0O&l2E&l8C(s12H&l1X'
                                                   IF !2 EQ '080P'  WRITE 'E&l26A&l0O&l2E&l5C(s25H&l1X'
                                                   IF !2 EQ '132'   WRITE 'E&l26A&l1O&l2E&l5C(s12H&l1X'
                                                   IF !2 EQ '132P'  WRITE 'E&l26A&l1O&l2E&l5C(s26H&l1X'
                                                   IF !2 EQ '132C'  WRITE 'E&l26A&l1O&l2E&l5C(s16H&l1X'
                                                   IF !2 EQ '132C+' WRITE 'E&l26A&l1O&l2E&l5C(s20H&l1X'
                                                  END
                          ELSE DIRECT_OUTPUT MENUUSER.PORTA_MATRICIAL
                          GOTOXY 22 02
                          SHOW '     Enviando sa║da para Impressora. Aguarde t┌rmino da impress└o ...       '
                          SCREENMODE IT_COR_TARJA ON
                         END
               [ LINUX!] BEGIN
                          MOVE '=' TO ST@IMPRESSORA
                          TRIM MENUUSER.IMPRESSORA TO ST@IMP
                          APPEND ST@IMPRESSORA ST@IMP
                          LOWERCASE ST@IMPRESSORA TO ST@IMPRESSORA

                          MOVE '' TO ST@MATR@LASER
                          LEFT MENUUSER.IMPRESSORA TO ST@MATR@LASER 1
                          UPPERCASE ST@MATR@LASER

                          MOVE ST@USUARIO TO ST@ARQUIVO@SEQUENCIA
                          APPEND ST@ARQUIVO@SEQUENCIA '.PRN'
                          LOWERCASE ST@ARQUIVO@SEQUENCIA TO ST@ARQUIVO@SEQUENCIA
                          DIRECT_OUTPUT ST@ARQUIVO@SEQUENCIA
                          
                          IF ST@MATR@LASER EQ 'L' BEGIN
                                                   //-sem negrito (s2B//
                                                   IF !2 EQ '080'   WRITE 'E&l26A&l0O&l2E&l8C(s12H&l1X'
                                                   IF !2 EQ '080C'  WRITE 'E&l26A&l0O&l2E&l8C(s16H&l1X'
                                                   IF !2 EQ '080C+' WRITE 'E&l26A&l0O&l2E&l8C(s20H&l1X'
                                                   IF !2 EQ '080L'  WRITE 'E&l26A&l0O&l2E&l8C(s12H&l1X'
                                                   IF !2 EQ '080P'  WRITE 'E&l26A&l0O&l2E&l5C(s25H&l1X'
                                                   IF !2 EQ '132'   WRITE 'E&l26A&l1O&l2E&l5C(s12H&l1X'
                                                   IF !2 EQ '132P'  WRITE 'E&l26A&l1O&l2E&l5C(s26H&l1X'
                                                   IF !2 EQ '132C'  WRITE 'E&l26A&l1O&l2E&l5C(s16H&l1X'
                                                   IF !2 EQ '132C+' WRITE 'E&l26A&l1O&l2E&l5C(s20H&l1X'

                                                   MOVE '' TO ST@AUX
                                                   CHARACTER 27 TO ST@AUX
                                                   APPEND ST@AUX (CHARACTER(38)) (CHARACTER(107)) (CHARACTER(50)) (CHARACTER(71))
                                                   WRITELN ST@AUX
                                                  END

                          GOTOXY 22 02
                          SHOW '     Enviando sa║da para Impressora. Aguarde t┌rmino da impress└o ...       '
                          SCREENMODE IT_COR_TARJA ON
                         END
              END

[  GERRELAT!] BEGIN
               GOTOXY 22 02
               SHOW '      Enviando sa║da para Gerenciador. Aguarde t┌rmino da gera┤└o  ...      '
               SCREENMODE IT_COR_TARJA ON
               INDICATE ERR FALSE
               ON ERROR GOSUB CHECA_GRAVACAO
               REREAD
                MOVE 1 TO IT@COMP1
                CLEAR ARQ_PRN
                MOVE ST@CODIGO@ENTIDADE      TO ARQ_PRN.COD_ENTIDADE
                MOVE ST@EXERCICIO@FINANCEIRO TO ARQ_PRN.EXERCICIO
                MOVE ST@CODIGO@PADRAO@PRN    TO ARQ_PRN.CODIGO
                FIND LT ARQ_PRN BY INDEX.1
                [ FOUND] INDICATE FOUND AS ARQ_PRN.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
                [ FOUND] INDICATE FOUND AS ARQ_PRN.EXERCICIO    EQ ST@EXERCICIO@FINANCEIRO
                [ FOUND] CALC (ARQ_PRN.CODIGO + 1) TO IT@COMP1
                MOVE IT@COMP1  TO ST@NUMERO
                TRIM ST@NUMERO TO ST@NUMERO
                SYSDATA DT@DATA ST@HORA ST@MINUTO ST@SEGUNDO
                [~@NOVO_PRN!] COMZEROS ST@NUMERO  5
                [ @NOVO_PRN!] COMZEROS ST@NUMERO 10
                
                MOVE '' TO ST@NOME
                APPEND ST@NOME 'ARQ' ST@CODIGO@ENTIDADE ST@EXERCICIO@FINANCEIRO ST@NUMERO '.PRN'

                //----- GRAVAREL --- ( PARTE DO ABREREL ) ---------

                CLEAR ARQ_PRN
                MOVE ST@CODIGO@ENTIDADE        TO ARQ_PRN.COD_ENTIDADE
                MOVE ST@EXERCICIO@FINANCEIRO   TO ARQ_PRN.EXERCICIO
                MOVE ST@NUMERO                 TO ARQ_PRN.CODIGO
                MOVE !1                        TO ARQ_PRN.DESCRICAO
                MOVE !2                        TO ARQ_PRN.COLUNAS
                MOVE 1                         TO ARQ_PRN.QUANT_COPIAS
                MOVE ST@USUARIO                TO ARQ_PRN.USUARIO
                MOVE '' TO ST@TEMPO
                APPEND ST@TEMPO DT@DATA '-' ST@HORA ':' ST@MINUTO ':' ST@SEGUNDO
                MOVE ST@TEMPO                  TO ARQ_PRN.TEMPO
                SAVERECORD ARQ_PRN
               UNLOCK
               ON ERROR OFF
               
               OUTFILE_RPT ST@NOME

//                OUTFILE ST@NOME
//               DIRECT_OUTPUT ST@NOME
              END
#ENDCOMMAND

//---- ADVERTE --- ENVIA MENSAGENS DO PROGRAMA SEM UTILIZAR O BOX.DAT PARA
//---- IMAGEM LINHA_23.1  --- ( PGMS DE MANUTENCAO, ETC... )
#COMMAND ADVERTE
 #IFDEF ST@NOME@ADVERTE
 #ELSE
    STRING ST@NOME@ADVERTE 12
 #ENDIF

 SCREENMODE IT_COR_TITULO ON
 KEYPROC OFF

 IF ST@USUARIO NE '' TRIM ST@USUARIO TO ST@NOME@ADVERTE
 ELSE                MOVE 'FIRST'    TO ST@NOME@ADVERTE
 APPEND ST@NOME@ADVERTE '.ADV'
 
 DIRECT_OUTPUT ST@NOME@ADVERTE
 WRITE !1
 CLOSE_OUTPUT
 
 SCREENMODE IT_COR_TARJA ON
 PAGE FIM
 REPLACE '.ADV' IN ST@NOME@ADVERTE WITH ''
 TRIM ST@NOME@ADVERTE TO ST@NOME@ADVERTE
 ERROR 0 ST@NOME@ADVERTE
 APPEND ST@NOME@ADVERTE '.ADV'
 ERASEFILE ST@NOME@ADVERTE
 
 KEYPROC ON
 SCREENMODE IT_COR_TARJA ON
#ENDCOMMAND

#COMMAND AJUDA
 #IFDEF ST@DESTINO
 #ELSE
  STRING ST@DESTINO
 #ENDIF

 MOVE 'SYSHELP 1 ' TO ST@DESTINO

 IF !0 EQ 0 APPEND ST@DESTINO ST@USUARIO ' 1 ' ST@PROGRAMA ' ' ST@CODIGO@ENTIDADE ' ' ST@EXERCICIO@FINANCEIRO ' ' ST@PROGRAMA
 ELSE       APPEND ST@DESTINO ST@USUARIO ' 1 ' ST@PROGRAMA ' ' ST@CODIGO@ENTIDADE ' ' ST@EXERCICIO@FINANCEIRO ' ' !1

 CHAIN WAIT ST@DESTINO EXPORT_FILES
 ENTAGAIN
 MOVE 0 TO CURRENT_IMAGE
#ENDCOMMAND

//----- BEEP ----- GERA SOM PARA ADVERTENCIA AO OPERADOR ------------
#COMMAND BEEP
// SOUND 2000
// PAUSE '' WAIT 100
// SOUND 1290
// PAUSE '' WAIT 120
// SOUND 0
#ENDCOMMAND
//--------------------------> Comando BREAKLN <-------------------------\\
//                                                                      \\
// Sintaxe : BREAKLN String Origem LEN Tamanho TO Destino1 Destino2 ... \\
//                                                                      \\
// Onde    : String Origem = Variavel que deseja dividir.               \\
//         : Tamanho       = Tamanho de cada divisao.                   \\
//         : Destino1...   = Variaveis que receberao a divisao.         \\
//                                                                      \\
//----------------------------------------------------------------------\\
#COMMAND BREAKLN LGNDIE#OBU "LEN" GSD#OBLU "TO" CGNIE#OBLR
        #IFDEF VS$AUX1
        #ELSE
          STRING VS$AUX1 255
          INTEGER VI$TAM1 VI$TAM2
        #ENDIF

        MOVE !1 TO VS$AUX1
        BREAK$LN !3 !4 !5 !6 !7 !8 !9
#ENDCOMMAND

#COMMAND BREAK$LN GSD#OBLU "TO" CGNIE#OBLR
        IF (LENGTH(VS$AUX1)) LE !1 BEGIN
                                    MOVE VS$AUX1 TO !3
                                    MOVE "" TO VS$AUX1
                                   END
        ELSE BEGIN
              POS_CHAR " " IN VS$AUX1 BEFORE !1 TO VI$TAM1
              POS_CHAR " " IN VS$AUX1 AFTER  !1 TO VI$TAM2

              IF VI$TAM1 EQ !1 LEFT VS$AUX1 TO !3 !1
              ELSE IF VI$TAM2 EQ (!1+1) LEFT VS$AUX1 TO !3 !1
              ELSE LEFT VS$AUX1 TO !3 VI$TAM1
             END
        #IF (!0>3)
                REPLACE !3 IN VS$AUX1 WITH ""
                trim vs$aux1 to vs$aux1
                BREAK$LN !1 !2 !4 !5 !6 !7 !8 !9
        #ENDIF
        INDICATE ERR AS VS$AUX1 NE ""
#ENDCOMMAND

//--------------------------> Escolha de Impressora - EscImp ----------\\
#COMMAND ESCIMP
  PAGE IMPRESSORA
  INKEYCHECK ST@MATR@LASER IN '123'
  IF ST@MATR@LASER IN '3' ABORT
#ENDCOMMAND

//--------------------------> Comando EXTEN <---------------------------\\
//                                                                      \\
// Sintaxe : EXTEN Numero TO String                                     \\
//                                                                      \\
// Onde    : Numero        = Numero a ser convertido para extenso       \\
//         : String        = Variavel que recebera o extenso.           \\
//                                                                      \\
//----------------------------------------------------------------------\\
#COMMAND TRADUZ
        MID    !2                        TO VS$$AUXILIAR 13 (!1*13+1)
        TRIM   VS$$AUXILIAR              TO VS$$AUXILIAR
        IF  VS$$AUXILIAR NE "" APPEND VS$$AUXILIAR " "
        APPEND VS$$EXTENSO VS$$AUXILIAR
        MOVE   ""                        TO VS$$AUXILIAR
#ENDCOMMAND

#COMMAND EXTEN #LGD "TO" #LGCDNIEC .
        #IFDEF VS$$EXTENSO
        #ELSE
                #REPLACE VS$$UNIDADE "             UM           DOIS         TRES         QUATRO       CINCO        SEIS         SETE         OITO         NOVE         "
                #REPLACE VS$$DEZENAX "             DEZ          ONZE         DOZE         TREZE        QUATORZE     QUINZE       DEZESSEIS    DEZESSETE    DEZOITO      DEZENOVE     "
                #REPLACE VS$$DEZENAY "             VINTE        TRINTA       QUARENTA     CINQUENTA    SESSENTA     SETENTA      OITENTA      NOVENTA      "
                #REPLACE VS$$CENTENA "             CENTO        DUZENTOS     TREZENTOS    QUATROCENTOS QUINHENTOS   SEISCENTOS   SETECENTOS   OITOCENTOS   NOVECENTOS   "
                #REPLACE VS$$MILHAR  "SEXTILHAO    QUINQUILHAO  QUADRILHAO   TRILHAO      BILHAO       MILHAO       MIL          "
                #REPLACE VS$$MILHARS "SEXTILHOES   QUINQUILHOES QUADRILHOES  TRILHOES     BILHOES      MILHOES      MIL          "

                STRING   VS$$EXTENSO  255
                STRING   VS$$INTEIRO
                STRING   VS$$DECIMAL
                STRING   VS$$PEDACO
                STRING   VS$$AUXILIAR
                INTEGER  VI$$POSICAO
                INTEGER  VI$$POSIT
        #ENDIF
        MOVE   !1                      TO VS$$EXTENSO
        POS    "," IN VS$$EXTENSO      TO VI$$POSICAO
        [ FOUND] LEFT VS$$EXTENSO      TO VS$$INTEIRO   (VI$$POSICAO-1)
        [ FOUND] MID  VS$$EXTENSO      TO VS$$DECIMAL 2 (VI$$POSICAO +1)
        [~FOUND] MOVE VS$$EXTENSO      TO VS$$INTEIRO
        [~FOUND] MOVE "00"             TO VS$$DECIMAL
        MOVE   ""                      TO VS$$EXTENSO
        INSERT "0000000000000000000000000" IN VS$$INTEIRO AT 1
        RIGHT  VS$$INTEIRO             TO VS$$INTEIRO 24
        TRIM   VS$$DECIMAL             TO VS$$DECIMAL
        APPEND VS$$DECIMAL "00"
        LEFT   VS$$DECIMAL             TO VS$$DECIMAL 2
        FOR VI$$POSICAO FROM 1 TO 22 STEP 3
            MID VS$$INTEIRO TO VS$$PEDACO 3 VI$$POSICAO
            IF  VS$$PEDACO NE "000" BEGIN
                IF  VS$$EXTENSO NE ""  BEGIN
                    TRIM   VS$$EXTENSO TO VS$$EXTENSO
                    APPEND VS$$EXTENSO ", "
                END
                IF  VS$$PEDACO EQ "001" APPEND VS$$EXTENSO "UM "
                ELSE BEGIN
                    IF  VS$$PEDACO EQ "100" APPEND VS$$EXTENSO "CEM "
                    ELSE BEGIN
                        LEFT   VS$$PEDACO                TO VI$$POSIT 1
                        TRADUZ VI$$POSIT VS$$CENTENA
                        RIGHT  VS$$PEDACO                TO VI$$POSIT 2
                        IF  VI$$POSIT LT 20 BEGIN
                            IF  VI$$POSIT LT 10 BEGIN
                                IF  VI$$POSIT NE 0 IF  VS$$EXTENSO NE "" APPEND VS$$EXTENSO "E "
                                TRADUZ VI$$POSIT VS$$UNIDADE
                            END
                            ELSE BEGIN
                                MOVE   (VI$$POSIT-9)           TO VI$$POSIT
                                IF  VS$$EXTENSO NE "" APPEND VS$$EXTENSO "E "
                                TRADUZ VI$$POSIT VS$$DEZENAX
                            END
                        END
                        ELSE BEGIN
                            MOVE  (INTEGER(VI$$POSIT/10))  TO VI$$POSIT
                            IF  VS$$EXTENSO NE "" APPEND VS$$EXTENSO "E "
                            MOVE  (VI$$POSIT-1)            TO VI$$POSIT
                            TRADUZ VI$$POSIT VS$$DEZENAY
                            RIGHT  VS$$PEDACO              TO VI$$POSIT 1
                            IF  VI$$POSIT NE 0 IF  VS$$EXTENSO NE "" APPEND VS$$EXTENSO "E "
                            TRADUZ VI$$POSIT VS$$UNIDADE
                        END
                    END
                END
                IF  VI$$POSICAO LE 19 BEGIN
                    MOVE  (VI$$POSICAO-1/3)      TO  VI$$POSIT
                    IF  VS$$PEDACO NE "001" TRADUZ VI$$POSIT VS$$MILHARS
                    ELSE                    TRADUZ VI$$POSIT VS$$MILHAR
                END
            END
        LOOP
        IF  (REAL(VS$$INTEIRO)) GT 0 BEGIN
            IF  (REAL(VS$$INTEIRO)) GT 1   APPEND VS$$EXTENSO "REAIS "
            ELSE                           APPEND VS$$EXTENSO "REAL "
        END
        IF  VS$$DECIMAL NE "00" BEGIN
            MOVE VS$$DECIMAL         TO VI$$POSIT
            IF  VI$$POSIT LT 20 BEGIN
                IF  VI$$POSIT LT 10 BEGIN
                    IF  VI$$POSIT NE 0 IF  VS$$EXTENSO NE "" APPEND VS$$EXTENSO "E "
                    TRADUZ VI$$POSIT VS$$UNIDADE
                END
                ELSE BEGIN
                    MOVE   (VI$$POSIT-9)           TO VI$$POSIT
                    IF  VS$$EXTENSO NE "" APPEND VS$$EXTENSO "E "
                    TRADUZ VI$$POSIT VS$$DEZENAX
                END
            END
            ELSE BEGIN
                MOVE  (INTEGER(VI$$POSIT/10))  TO VI$$POSIT
                IF  VI$$POSIT NE 0 IF  VS$$EXTENSO NE "" APPEND VS$$EXTENSO "E "  //
                MOVE  (VI$$POSIT-1)            TO VI$$POSIT
                TRADUZ VI$$POSIT VS$$DEZENAY
                RIGHT  VS$$DECIMAL             TO VI$$POSIT 1
                IF  VI$$POSIT NE 0 IF  VS$$EXTENSO NE "" APPEND VS$$EXTENSO "E "
                TRADUZ VI$$POSIT VS$$UNIDADE
            END
            IF  VS$$DECIMAL GT 1 APPEND VS$$EXTENSO  "CENTAVOS"
            ELSE                 APPEND VS$$EXTENSO  "CENTAVO"
        END
        MOVE VS$$EXTENSO   TO !3
#ENDCOMMAND

//-----------------------------------
#COMMAND EXTENSO
#IFDEF ST@ESTENSO
#ELSE
  STRING ST@ESTENSO 255
#ENDIF
#IFDEF ST@EXT_1
#ELSE
  STRING ST@EXT_1   255
#ENDIF
#IFDEF ST@EXT_2
#ELSE
  STRING ST@EXT_2   255
#ENDIF
#IFDEF ST@EAUX
#ELSE
  STRING ST@EAUX    255
#ENDIF
#IFDEF ST@EAUX1
#ELSE
  STRING ST@EAUX1   255
#ENDIF
#IFDEF ST@EAUX2
#ELSE
  STRING ST@EAUX2   255
#ENDIF
#IFDEF ST@EAUX3
#ELSE
  STRING ST@EAUX3   255
#ENDIF
#IFDEF ST@EXT_REAL
#ELSE
  NUMBER ST@EXT_REAL
#ENDIF
#IFDEF ST@TAM_LINHA
#ELSE
  STRING ST@TAM_LINHA
#ENDIF
#IFDEF IT@I
#ELSE
  INTEGER IT@I
#ENDIF
#IFDEF IT@TAMANHO
#ELSE
   INTEGER IT@TAMANHO
#ENDIF
#IFDEF IT@CONTADOR
#ELSE
    INTEGER IT@CONTADOR
#ENDIF
MOVE !1 TO ST@EXT_REAL
MOVE !2 TO ST@TAM_LINHA

GOSUB LB_INICIA_EXTENSO

GOSUB LB_CONVERT
MID ST@ESTENSO TO ST@EAUX1 ST@TAM_LINHA 1
MID ST@ESTENSO TO ST@EAUX2 ST@TAM_LINHA (ST@TAM_LINHA + 1)

LENGTH ST@EAUX1 TO IT@TAMANHO
MID    ST@EAUX2 TO ST@EAUX 1 1

                 INDICATE QUEBRA_LINHA! AS IT@TAMANHO GE ST@TAM_LINHA
[ QUEBRA_LINHA!] INDICATE QUEBRA_LINHA! AS ST@EAUX NE ' '
[~QUEBRA_LINHA!] BEGIN
                 MOVE ST@EAUX1 TO ST@EXT_1
                 MOVE ST@EAUX2 TO ST@EXT_2
                END
[ QUEBRA_LINHA!] BEGIN
                 MOVE ST@TAM_LINHA TO IT@CONTADOR
                 REPEAT
                   MID ST@EAUX1 TO ST@EAUX 1 IT@CONTADOR
                   INDICATE FIM! AS ST@EAUX EQ ' '
                   [~FIM!] INDICATE FIM! AS IT@CONTADOR LT 1
                   DECREMENT IT@CONTADOR
                 UNTIL [ FIM!]

                 MID ST@EAUX1 TO ST@EXT_1 IT@CONTADOR 1

                 MOVE (ST@TAM_LINHA - IT@CONTADOR) TO IT@TAMANHO
                 INCREMENT IT@CONTADOR
                 MID ST@EAUX1 TO ST@EAUX3 IT@TAMANHO IT@CONTADOR

                 MOVE '' TO ST@EXT_2
                 APPEND ST@EXT_2 ST@EAUX3 ST@EAUX2
                 MID ST@EXT_2 TO ST@EAUX 1 1
                 INDICATE FIM! AS ST@EAUX EQ ' '
                 [ FIM!] MID ST@EXT_2 TO ST@EXT_2 (ST@TAM_LINHA-1) 2
                END
TRIM ST@EXT_1 TO ST@EXT_1
TRIM ST@EXT_2 TO ST@EXT_2
IF ST@EXT_2 EQ '' BEGIN
                   APPEND ST@EXT_1 ' '
                   LENGTH ST@EXT_1 TO IT@I
                   FOR IT@I FROM IT@I TO ST@TAM_LINHA
                       APPEND ST@EXT_1 '*'
                   LOOP
                  END

APPEND ST@EXT_2 ' '
LENGTH ST@EXT_2 TO IT@I

FOR IT@I FROM IT@I TO ST@TAM_LINHA
 APPEND ST@EXT_2 '*'
LOOP

MOVE ST@EXT_1  TO !3
MOVE ST@EXT_2  TO !4

GOTO SAIDA

LB_INICIA_EXTENSO:
INTEGER IT@EXT_VALTEMP IT@EXT_INT
STRING ST@EXT_VALOR 20
STRING ST@EXT_CENTAVOS 2
STRING ST@EXT_TEMP 20

AUTOPAGE EXT_PALAVRAS
DISPLAY 'Um'
DISPLAY 'Dois'
DISPLAY 'Tres'
DISPLAY 'Quatro'
DISPLAY 'Cinco'
DISPLAY 'Seis'
DISPLAY 'Sete'
DISPLAY 'Oito'
DISPLAY 'Nove'
DISPLAY 'Dez'
DISPLAY 'Onze'
DISPLAY 'Doze'
DISPLAY 'Treze'
DISPLAY 'Quatorze'
DISPLAY 'Quinze'
DISPLAY 'Dezesseis'
DISPLAY 'Dezessete'
DISPLAY 'Dezoito'
DISPLAY 'Dezenove'
DISPLAY 'Vinte'
DISPLAY 'Trinta'
DISPLAY 'Quarenta'
DISPLAY 'Cinquenta'
DISPLAY 'Sessenta'
DISPLAY 'Setenta'
DISPLAY 'Oitenta'
DISPLAY 'Noventa'
DISPLAY 'Cento'
DISPLAY 'Duzentos'
DISPLAY 'Trezentos'
DISPLAY 'Quatrocentos'
DISPLAY 'Quinhentos'
DISPLAY 'Seiscentos'
DISPLAY 'Setecentos'
DISPLAY 'Oitocentos'
DISPLAY 'Novecentos'

AUTOPAGE EXT_MILHARES
DISPLAY 'Trilhoes'
DISPLAY 'Trilhao'
DISPLAY 'Bilhoes'
DISPLAY 'Bilhao'
DISPLAY 'Milhoes'
DISPLAY 'Milhao'
DISPLAY 'Mil'
DISPLAY 'Mil'
DISPLAY 'Reais'
DISPLAY 'Real'
RETURN

LB_CONVERT:
MOVE ST@EXT_REAL TO ST@EXT_VALOR

RIGHT ST@EXT_VALOR TO ST@EXT_TEMP 3
POS ',' IN ST@EXT_TEMP TO IT@EXT_VALTEMP
IF IT@EXT_VALTEMP EQ 0 APPEND ST@EXT_VALOR '.00'  // 123
IF IT@EXT_VALTEMP EQ 2 APPEND ST@EXT_VALOR '0'    // 123.5
IF IT@EXT_VALTEMP EQ 3 APPEND ST@EXT_VALOR '00'   // 123.

LENGTH ST@EXT_VALOR TO IT@EXT_VALTEMP

MOVE '' TO ST@EXT_CENTAVOS
MID ST@EXT_VALOR TO ST@EXT_CENTAVOS 2 (IT@EXT_VALTEMP - 1)

MOVE '' TO ST@EXT_TEMP
PAD ST@EXT_TEMP TO ST@EXT_TEMP (18-IT@EXT_VALTEMP)
INSERT ST@EXT_TEMP IN ST@EXT_VALOR AT 1

MOVE ((IT@EXT_VALTEMP-1)/3) TO IT@EXT_VALTEMP
MOVE  (5-IT@EXT_VALTEMP) TO IT@EXT_INT
MOVE '' TO ST@ESTENSO

FOR IT@EXT_INT FROM IT@EXT_INT TO 4

  MID ST@EXT_VALOR TO IT@EXT_VALTEMP 3 (IT@EXT_INT*3+1)
  IF IT@EXT_VALTEMP EQ 0 GOTO LB_POE_MILHAR
  IF ST@ESTENSO GT '' APPEND ST@ESTENSO ', '
  IF IT@EXT_VALTEMP EQ 100 BEGIN
                            APPEND ST@ESTENSO 'Cem'
                            GOTO LB_POE_MILHAR
                           END
  IF IT@EXT_VALTEMP GT 100 BEGIN
                            MOVE (IT@EXT_VALTEMP / 100 + 26) TO WINDOWINDEX
                            MOVE EXT_PALAVRAS.1& TO ST@EXT_TEMP
                            APPEND ST@ESTENSO ST@EXT_TEMP
                            MOVE (IT@EXT_VALTEMP - (100 * (WINDOWINDEX - 26))) TO IT@EXT_VALTEMP
                            IF IT@EXT_VALTEMP GT 0 APPEND ST@ESTENSO ' e '
                            ELSE GOTO LB_POE_MILHAR
                           END
  IF IT@EXT_VALTEMP LE 19 BEGIN
                           MOVE (IT@EXT_VALTEMP-1) TO WINDOWINDEX
                           MOVE EXT_PALAVRAS.1& TO ST@EXT_TEMP
                           APPEND ST@ESTENSO ST@EXT_TEMP
                           GOTO LB_POE_MILHAR
                          END

  MOVE (IT@EXT_VALTEMP / 10) TO IT@EXT_VALTEMP
  MOVE (IT@EXT_VALTEMP+17) TO WINDOWINDEX
  MOVE EXT_PALAVRAS.1& TO ST@EXT_TEMP
  APPEND ST@ESTENSO ST@EXT_TEMP
  MID ST@EXT_VALOR TO IT@EXT_VALTEMP 1 (IT@EXT_INT*3+3)
  IF IT@EXT_VALTEMP GT 0 APPEND ST@ESTENSO ' e '
  ELSE GOTO LB_POE_MILHAR

  MOVE (IT@EXT_VALTEMP-1) TO WINDOWINDEX
  MOVE EXT_PALAVRAS.1& TO ST@EXT_TEMP
  APPEND ST@ESTENSO ST@EXT_TEMP

  LB_POE_MILHAR:
  GOSUB LB_COLOCAMILHAR
LOOP

MOVE '' TO ST@EXT_TEMP
IF ST@EXT_REAL GT 1 MOVE ' e ' TO ST@EXT_TEMP
IF ST@EXT_CENTAVOS EQ '01' BEGIN
   APPEND ST@ESTENSO ST@EXT_TEMP 'Um centavo'
   RETURN
END
IF ST@EXT_CENTAVOS IN '01:02:03:04:05:06:07:08:09:10:11:12:13:14:15:16:17:18:19' BEGIN
   MOVE (ST@EXT_CENTAVOS - 1) TO WINDOWINDEX
   APPEND ST@ESTENSO ST@EXT_TEMP EXT_PALAVRAS.1& ' centavos'
   RETURN
END
IF NOT ST@EXT_CENTAVOS IN '00:01:02:03:04:05:06:07:08:09:10:11:12:13:14:15:16:17:18:19' BEGIN
   MOVE ((ST@EXT_CENTAVOS / 10) + 17) TO WINDOWINDEX
   APPEND ST@ESTENSO ST@EXT_TEMP EXT_PALAVRAS.1&
   MOVE (ST@EXT_CENTAVOS / 10) TO IT@EXT_VALTEMP
   MOVE (ST@EXT_CENTAVOS - (10*IT@EXT_VALTEMP) - 1) TO WINDOWINDEX
   IF (WINDOWINDEX + 1) NE 0 APPEND ST@ESTENSO ' e ' EXT_PALAVRAS.1& ' centavos'
   ELSE APPEND ST@ESTENSO ' centavos'
END
RETURN

LB_COLOCAMILHAR:
 MOVE (IT@EXT_INT*2) TO WINDOWINDEX
 MID ST@EXT_VALOR TO IT@EXT_VALTEMP 3 (IT@EXT_INT*3+1)
 IF IT@EXT_VALTEMP EQ 0 BEGIN
                         IF IT@EXT_INT NE 4 RETURN
                         IF ST@EXT_REAL GT 1 APPEND ST@ESTENSO ' ' EXT_MILHARES.1&
                        END
 IF IT@EXT_VALTEMP GT 1 BEGIN
                         APPEND ST@ESTENSO ' ' EXT_MILHARES.1&
                         RETURN
                        END
 IF IT@EXT_VALTEMP EQ 1 APPEND ST@ESTENSO ' ' EXT_MILHARES.2&
RETURN

SAIDA:
#ENDCOMMAND

//-----------------------> Comando POS_CHAR <-------------------------------\\
//                                                                          \\
// Sintaxe : POS_CHAR SubString IN String BEFORE/AFTER Posicao TO Destino   \\
//                                                                          \\
// Onde    : SubString  = Caracter ou Palavra a ser pesquisada.             \\
//         : String     = Variavel on se encontra o caracter ou palavra.    \\
//         : Posicao    = Posicao inicial de Pesquisa.                      \\
//         : Destino    = Variavel que ira receber a posicao em que se      \\
//                        encontra o caracter ou palavra.                   \\
//                                                                          \\
//--------------------------------------------------------------------------\\
#COMMAND POS_CHAR LG#OBU "IN" LG#OBU "BEFORE""AFTER" LSDG#OBU "TO" CLSDG#OBUR .
    #IFDEF VS$PRT1
    #ELSE
        STRING VS$PRT1 255 VS$PRT2 255 VS$PRT3
        INTEGER VI$INT1 VI$INT2
    #ENDIF
    MOVE !3 TO VS$PRT2
    LEFT VS$PRT2 TO VS$PRT1 !5
    REPLACE
     VS$PRT1 IN VS$PRT2 WITH ""

    #IFSAME !4 BEFORE
        LENGTH !1 TO VI$INT1
        WHILE VS$PRT1 NE ""
                RIGHT VS$PRT1 TO VS$PRT3 VI$INT1
                INDICATE END$SEARCH AS !1 EQ VS$PRT3
                [~END$SEARCH] LEFT VS$PRT1 TO VS$PRT1 ((LENGTH(VS$PRT1))-1)
        [~END$SEARCH] END
        [ END$SEARCH] MOVE ((LENGTH(VS$PRT1))-VI$INT1+1) TO !7
        [~END$SEARCH] MOVE 0                         TO !7
    #ELSE
        indicate was$found as [found]
        pos !1 in vs$prt2 to vi$int2
        [ found] move (vi$int2 + (length(vs$prt1))) to !7
        [~FOUND] MOVE 0                             TO !7
        indicate found as [was$found]
    #ENDIF
#ENDCOMMAND


//----- CABEC--------------------- CENTRALIZAR CABECALHOS, TITULOS, ETC...
// SINTAXE : CABEC 'TITULO A MOSTRAR' <LOCAL ONDE MOSTRAR>

#COMMAND CABEC
#IFDEF    ST@AUX@JANELA
#ELSE
   STRING ST@AUX@JANELA 255
#ENDIF
#IFDEF     IT@TAM@JANELA
#ELSE
   INTEGER IT@TAM@JANELA
#ENDIF

CHARACTER 0 TO ST@AUX@JANELA
FOR IT@TAM@JANELA FROM 1 TO 255
  APPEND !2 ST@AUX@JANELA
LOOP

LENGTH !2 TO IT@TAM@JANELA
MOVE (CENTER(!1,IT@TAM@JANELA)) TO !2
#ENDCOMMAND

//----- CHECA_CGC  E CHECA_CPF

#COMMAND CHECA_CGC RUD#OGNI .
#IFDEF   ST@CHECA@DIGITO
#ELSE
 STRING  ST@CHECA@DIGITO
 STRING  ST@CHECA@TOTAL 2
 INTEGER IT@PILHA
 INTEGER IT@COUNTER
 INTEGER IT@TOTAL
#ENDIF
#IFDEF   IT@NUMERO
#ELSE
 INTEGER IT@NUMERO
#ENDIF
#IFDEF   ST@CGC
#ELSE
 STRING  ST@CGC 80
#ENDIF
#IFDEF   IT@TAMANHO
#ELSE
 INTEGER IT@TAMANHO
#ENDIF

INDICATE ERR FALSE
!A [] $086 !1 ST@CGC
MOVE (LENGTH(!1)) TO IT@TAMANHO
IF IT@TAMANHO GT 14 BEGIN
                     REPEAT
                      REMOVE "." FROM ST@CGC
                     UNTIL [~ FOUND]
                     REPEAT
                      REMOVE "-" FROM ST@CGC
                     UNTIL [~ FOUND]
                     REPEAT
                      REMOVE "/" FROM ST@CGC
                     UNTIL [~ FOUND]
                    END
MOVE 0 TO IT@TAMANHO
MOVE 0 TO IT@PILHA
MOVE 0 TO IT@COUNTER
MOVE 0 TO IT@TOTAL
MOVE 0 TO IT@NUMERO
MOVE "" TO ST@CHECA@DIGITO
MOVE "" TO ST@CHECA@TOTAL

!A [] $086 |CI0 IT@TAMANHO
!A [] $086 |CS"" ST@CHECA@DIGITO
!A [] $086 |CS"" ST@CHECA@TOTAL
FOR IT@PILHA FROM 5 TO 6
 FOR IT@COUNTER FROM IT@PILHA TO 2 DOWN 1
  !A [] $083 IT@TAMANHO |CI0
  MID ST@CGC TO IT@NUMERO 1 IT@TAMANHO
  MOVE ((IT@NUMERO * IT@COUNTER)+IT@TOTAL) TO IT@TOTAL
 LOOP
 FOR IT@COUNTER FROM 9 TO 2 DOWN 1
  !A [] $083 IT@TAMANHO |CI0
  MID ST@CGC TO IT@NUMERO 1 IT@TAMANHO
  MOVE ((IT@NUMERO * IT@COUNTER)+IT@TOTAL) TO IT@TOTAL
 LOOP
 MOD 11 FROM (IT@TOTAL*10) TO IT@TOTAL
 IF IT@TOTAL GT 9 MOVE 0   TO IT@TOTAL
 !A [] $086 IT@TOTAL ST@CHECA@TOTAL
 !A [] $243 ST@CHECA@DIGITO ST@CHECA@TOTAL
 !A [] $086 |CS"" ST@CHECA@TOTAL
 !A [] $086 |CI0 IT@TAMANHO
 !A [] $086 |CI0 IT@TOTAL
LOOP
!A [] $082 |CN2 STRLEN
!A [] $242 ST@CGC  ST@CHECA@TOTAL
INDICATE ~ |127 AS ST@CHECA@TOTAL EQ ST@CHECA@DIGITO
#ENDCOMMAND

#COMMAND CHECA_CPF RUD#OGNI .
#IFDEF   ST@CHECA@DIGITO
#ELSE
 STRING  ST@CHECA@DIGITO
 STRING  ST@CHECA@TOTAL 2
 INTEGER IT@PILHA
 INTEGER IT@COUNTER
 INTEGER IT@TOTAL
#ENDIF
#IFDEF   IT@NUMERO
#ELSE
 INTEGER IT@NUMERO
#ENDIF
#IFDEF   IT@TAMANHO
#ELSE
 INTEGER IT@TAMANHO
#ENDIF

#IFDEF   ST@CPF
#ELSE
 STRING  ST@CPF
#ENDIF

INDICATE ERR FALSE
!A [] $086 !1 ST@CPF
MOVE (LENGTH(!1)) TO IT@TAMANHO
IF IT@TAMANHO GT 11 BEGIN
                     REPEAT
                      REMOVE "." FROM ST@CPF
                     UNTIL [~ FOUND]
                     REPEAT
                      REMOVE "-" FROM ST@CPF
                     UNTIL [~ FOUND]
                     REPEAT
                      REMOVE "/" FROM ST@CPF
                     UNTIL [~ FOUND]
                    END

MOVE 0 TO IT@TAMANHO
MOVE 0 TO IT@PILHA
MOVE 0 TO IT@COUNTER
MOVE 0 TO IT@TOTAL
MOVE 0 TO IT@NUMERO
MOVE "" TO ST@CHECA@DIGITO
MOVE "" TO ST@CHECA@TOTAL

FOR IT@PILHA FROM 10 TO 11
 FOR IT@COUNTER FROM IT@PILHA TO 2 DOWN 1
  !A [] $083 IT@TAMANHO |CI0
  MID ST@CPF TO IT@NUMERO 1 IT@TAMANHO
  MOVE ((IT@NUMERO*IT@COUNTER)+IT@TOTAL) TO IT@TOTAL
 LOOP
 MOD 11 FROM (IT@TOTAL*10) TO IT@TOTAL
 IF IT@TOTAL GT 9 MOVE 0   TO IT@TOTAL
 !A [] $086 IT@TOTAL ST@CHECA@TOTAL
 !A [] $243 ST@CHECA@DIGITO ST@CHECA@TOTAL
 !A [] $086 |CS"" ST@CHECA@TOTAL
 !A [] $086 |CI0 IT@TAMANHO
 !A [] $086 |CI0 IT@TOTAL
LOOP

!A [] $082 |CN2 STRLEN
!A [] $242 ST@CPF ST@CHECA@TOTAL
INDICATE NOT |127 AS ST@CHECA@TOTAL EQ ST@CHECA@DIGITO
#ENDCOMMAND

//----- CONFIRMACAO --------CONFIRMA DADOS <S/N>
//SINTAXE : CONFIRMACAO 'NOME DA ACAO DO PROGRAMA'
//                      (ou seja, inclusao, alteracao , etc...)

#COMMAND CONFIRMACAO

 KEYPROC OFF

 #IFDEF ST@CONFIRMA
 #ELSE
  STRING ST@CONFIRMA
 #ENDIF

 SCREENMODE IT_COR_TITULO ON
 MOVE '' TO ST@CONFIRMA

 APPEND ST@CONFIRMA 'CONFIRMA ' !1 ' ? <S/N>'
 CABEC ST@CONFIRMA CONFIRMA.1
 SCREENMODE IT_COR_TARJA ON
 PAGE CONFIRMA
 INKEYCHECK ST_TECLA IN 'sSnN'
 KEYPROC ON
 IF !1 EQ 'RETORNO' BEGIN
                     IF ST_TECLA IN 'sS' ABORT
                     ENTAGAIN
                     RETURN
                    END
 ELSE IF ST_TECLA IN 'nN' GOTO INICIO
#ENDCOMMAND

#COMMAND CONSULTA
INDICATE PESQUISA FALSE
CHAIN WAIT !1 EXPORT_FILES
MOVE 0 TO CURRENT_IMAGE
PAGE !2
IF !3 NE ""  BEGIN
                TRIM !3 TO !4
                INDICATE PESQUISA TRUE
             END
#IF !0=6
   IF !5 NE "" TRIM !5 TO !6
#ENDIF
#ENDCOMMAND

//----- DESATIVA --- DESLIGA KEYPROCS

#COMMAND DESATIVA
KEYPROC KEY.HELP
KEYPROC KEY.FIELD
KEYPROC KEY.SFIND
KEYPROC KEY.PRINT
KEYPROC KEY.CALCULATE
KEYPROC KEY.DELETE
KEYPROC KEY.USER
KEYPROC KEY.USER2
KEYPROC KEY.CLEAR
KEYPROC KEY.SAVE
KEYPROC KEY.FIND
KEYPROC KEY.NEXT
KEYPROC KEY.PREVIOUS
ENTAGAIN
RETURN
#ENDCOMMAND

//----- DISPENSA

#COMMAND DISPENSA
 MENSAGEM !1
 GOTO INICIO
#ENDCOMMAND

// ENCHE TELA

#COMMAND ENCHE_TELA
 #IFDEF IT@WINDOW
  #ELSE
  INTEGER IT@WINDOW IT@MAXIMO IT@TAMANHO@TELA IT@POSICAO
  STRING  ST@BUFFER 240
  MOVE 1 TO IT@POSICAO
 #ENDIF

 MOVE WINDOWINDEX TO IT@WINDOW

 //---  ACHA_MAIOR
 MOVE 0 TO IT@MAXIMO
 FOR WINDOWINDEX FROM 0  TO IT@LINHAS
  MOVE JN_BUFFER_TITULO& TO ST@LINHA
  //--- MAIOR_ST
  MOVE '' TO ST@BUFFER
  RTRIM ST@LINHA ST@BUFFER
  LENGTH ST@BUFFER TO IT@TAMANHO@TELA
  IF IT@TAMANHO@TELA GT IT@MAXIMO MOVE IT@TAMANHO@TELA TO IT@MAXIMO
 LOOP

 FOR WINDOWINDEX FROM 0 TO IT@LINHAS
 //---  MOSTRA JN_BUFFER_TITULO& JN_TITULO&
  APPEND JN_BUFFER_TITULO& '                                                                                                                    '
  MID JN_BUFFER_TITULO& TO JN_TITULO& 77 IT@POSICAO
 LOOP
 MOVE IT@WINDOW TO WINDOWINDEX
#ENDCOMMAND

//--para quando precisar de 2 linhas de titulo sobre as linhas de consulta
#COMMAND ENCHE_TELA_DIFERENTE
 #IFDEF IT@WINDOW
  #ELSE
  INTEGER IT@WINDOW IT@MAXIMO IT@TAMANHO@TELA IT@POSICAO
  STRING  ST@BUFFER 240
  MOVE 1 TO IT@POSICAO
 #ENDIF

 MOVE WINDOWINDEX TO IT@WINDOW

 //---  ACHA_MAIOR
 MOVE 0 TO IT@MAXIMO
 FOR WINDOWINDEX FROM 0  TO (IT@LINHAS + 1)
  MOVE JN_BUFFER_TITULO& TO ST@LINHA
  //--- MAIOR_ST
  MOVE '' TO ST@BUFFER
  RTRIM ST@LINHA ST@BUFFER
  LENGTH ST@BUFFER TO IT@TAMANHO@TELA
  IF IT@TAMANHO@TELA GT IT@MAXIMO MOVE IT@TAMANHO@TELA TO IT@MAXIMO
 LOOP

 FOR WINDOWINDEX FROM 0 TO (IT@LINHAS + 1)
 //---  MOSTRA JN_BUFFER_TITULO& JN_TITULO&
  APPEND JN_BUFFER_TITULO& '                                                                                                                    '
  MID JN_BUFFER_TITULO& TO JN_TITULO& 77 IT@POSICAO
 LOOP
 MOVE IT@WINDOW TO WINDOWINDEX
#ENDCOMMAND

//----- ENCRIPTA <SENHA A CRIPTOGRAFAR> <VARIAVEL,JANELA,CAMPO NUMERICO (20 POSICOES)>

#COMMAND ENCRIPTA
#IFDEF ST@$ENHA
#ELSE
 STRING  ST@$ENHA 20 ST@LETRA$ENHA 1
 INTEGER IT@$ENHA IT@CONTADOR$ENHA IT@VALOR$ENHA IT@SOMA$ENHA
#ENDIF

 MOVE 0 TO IT@SOMA$ENHA
 MOVE 0 TO IT@VALOR$ENHA
 MOVE 0 TO IT@$ENHA
 MOVE 0 TO !3

 TRIM !1 TO ST@$ENHA
 APPEND ST@$ENHA !2
 LENGTH ST@$ENHA TO IT@$ENHA

 FOR IT@CONTADOR$ENHA FROM 1 TO IT@$ENHA
  MID ST@$ENHA TO ST@LETRA$ENHA 1 IT@CONTADOR$ENHA
  ASCII ST@LETRA$ENHA TO IT@VALOR$ENHA
  CALC ( IT@VALOR$ENHA + IT@CONTADOR$ENHA  ) TO IT@VALOR$ENHA
  CALC ((IT@VALOR$ENHA + IT@$ENHA) * (IT@VALOR$ENHA - IT@$ENHA)) TO IT@SOMA$ENHA
  CALC ((IT@SOMA$ENHA / IT@$ENHA) * IT@VALOR$ENHA) TO IT@SOMA$ENHA
  CALC (IT@SOMA$ENHA + !3) TO !3
 LOOP
#ENDCOMMAND

//----- ENCRIPTA <SENHA A CRIPTOGRAFAR> <VARIAVEL,JANELA,CAMPO NUMERICO (5 POSICOES)>

#COMMAND ENCRIPTA_ANTIGO
#IFDEF ST@$ENHA
#ELSE
 STRING  ST@$ENHA 20 ST@LETRA$ENHA 1
 INTEGER IT@$ENHA IT@CONTADOR$ENHA IT@VALOR$ENHA IT@SOMA$ENHA
#ENDIF

 MOVE 0 TO IT@SOMA$ENHA
 MOVE 0 TO IT@VALOR$ENHA
 MOVE 0 TO IT@$ENHA
 MOVE 0 TO !2

 TRIM !1 TO ST@$ENHA
 LENGTH ST@$ENHA TO IT@$ENHA

 FOR IT@CONTADOR$ENHA FROM 1 TO IT@$ENHA
  MID ST@$ENHA TO ST@LETRA$ENHA 1 IT@CONTADOR$ENHA
  ASCII ST@LETRA$ENHA TO IT@VALOR$ENHA
  CALC ( IT@VALOR$ENHA + IT@CONTADOR$ENHA  ) TO IT@VALOR$ENHA
  CALC ((IT@VALOR$ENHA + IT@$ENHA) * (IT@VALOR$ENHA - IT@$ENHA)) TO IT@SOMA$ENHA
  CALC ((IT@SOMA$ENHA / IT@$ENHA) * IT@VALOR$ENHA) TO IT@SOMA$ENHA
  CALC (IT@SOMA$ENHA + !2) TO !2
 LOOP
#ENDCOMMAND

//----------------------------------- GRAVA_ENTRADA

//----- GRAVA_ENTRADA

#COMMAND GRAVA_ENTRADA
#IFDEF        ST@HORA
#ELSE
   STRING ST@HORA 8
#ENDIF
#IFDEF        ST@MINUTO
#ELSE
   STRING ST@MINUTO 2
#ENDIF
#IFDEF        ST@SEGUNDO
#ELSE
   STRING ST@SEGUNDO 2
#ENDIF
#IFDEF        ST@ENTRADA
#ELSE
   STRING ST@ENTRADA 8
#ENDIF
#IFDEF        DT@DATA
#ELSE
   DATE   DT@DATA
#ENDIF

SYSDATE4 DT@DATA ST@HORA ST@MINUTO ST@SEGUNDO
COMZEROS ST@HORA    2
COMZEROS ST@MINUTO  2
COMZEROS ST@SEGUNDO 2

APPEND ST@HORA ":" ST@MINUTO ":" ST@SEGUNDO

CLEAR MENUACES
MOVE ST@CODIGO@ENTIDADE      TO MENUACES.COD_ENTIDADE
MOVE ST@EXERCICIO@FINANCEIRO TO MENUACES.EXERCICIO
INDICATE KEYPROC! AS !1 NE ' '
[  KEYPROC!] MOVE !1                  TO MENUACES.NOME
[~ KEYPROC!] BEGIN
              MOVE ST_NOME_MENU       TO MENUACES.NOME
              MOVE IT_OPCAO           TO MENUACES.N_OPCAO
              MOVE ST_DESTINO         TO MENUACES.PROGRAMA
             END
MOVE MENUUSER.CODIGO    TO MENUACES.COD_USUARIO
MOVE DT@DATA            TO MENUACES.DATA
MOVE ST@HORA            TO MENUACES.ENTRADA
SAVERECORD MENUACES
UNLOCK
ON ERROR OFF
#ENDCOMMAND

//----- GRAVA_SAIDA

#COMMAND GRAVA_SAIDA
SYSDATE DT@DATA ST@HORA ST@MINUTO ST@SEGUNDO
COMZEROS ST@HORA    2
COMZEROS ST@MINUTO  2
COMZEROS ST@SEGUNDO 2

APPEND ST@HORA ":" ST@MINUTO ":" ST@SEGUNDO

INDICATE ERR FALSE
ON ERROR GOSUB CHECA_GRAVACAO
REREAD MENUACES
MOVE ST@HORA          TO MENUACES.SAIDA
SAVERECORD MENUACES
UNLOCK
ON ERROR OFF
#ENDCOMMAND

//----- GRAVAINCLUSAO -- GRAVA INCLUSAO NO ACESSOS

#COMMAND GRAVAINCLUSAO
#IFDEF        ST@HORA
#ELSE
   STRING ST@HORA 8
#ENDIF
#IFDEF        ST@MINUTO
#ELSE
   STRING ST@MINUTO 2
#ENDIF
#IFDEF        ST@SEGUNDO
#ELSE
   STRING ST@SEGUNDO 2
#ENDIF
#IFDEF        ST@DESC
#ELSE
   STRING ST@DESC 255
#ENDIF
#IFDEF        DT@DATA
#ELSE
   DATE   DT@DATA
#ENDIF
#IFDEF        ST@LINHA
#ELSE
   STRING ST@LINHA
#ENDIF
#IFDEF        ST@LIDOS
#ELSE
   STRING ST@LIDOS
#ENDIF

MOVE '' TO ST@DESC
IF !3 EQ 'I' MOVE 'INCLUSAO : '     TO ST@DESC
IF !3 EQ 'A' MOVE 'ALTERACAO: '     TO ST@DESC
IF !3 EQ 'E' MOVE 'EXCLUSAO : '     TO ST@DESC
IF !3 EQ 'M' MOVE 'MOVIMENTACAO : ' TO ST@DESC
IF !3 EQ 'C' MOVE 'CANCELAMENTO : ' TO ST@DESC

//--colocar o ip na descricao
DIRECT_INPUT CHANNEL 9 ST@SAIDA@IP
READLN CHANNEL 9 ST@LINHA
APPEND ST@DESC !2 ' IP ' ST@LINHA
CLOSE_INPUT CHANNEL 9
//--final colocar o ip na descricao

SYSDATA DT@DATA ST@HORA ST@MINUTO ST@SEGUNDO

COMZEROS ST@HORA    2
COMZEROS ST@MINUTO  2
COMZEROS ST@SEGUNDO 2

APPEND ST@HORA ":" ST@MINUTO ":" ST@SEGUNDO

CLEAR ACESSOS
MOVE ST@CODIGO@ENTIDADE      TO ACESSOS.COD_ENTIDADE
MOVE ST@EXERCICIO@FINANCEIRO TO ACESSOS.EXERCICIO
MOVE ST@USUARIO              TO ACESSOS.USUARIO  // MENUUSER.CODIGO
MOVE DT@DATA                 TO ACESSOS.DATA
MOVE ST@HORA                 TO ACESSOS.HORA
MOVE !1                      TO ACESSOS.ARQUIVO
MOVE ST@DESC                 TO ACESSOS.DESCRICAO
SAVERECORD ACESSOS
CLEAR ACESSOS

INDICATE FOUND TRUE
#ENDCOMMAND


// COMANDOS PARA O MODULO DE SEGURAN─A
// ---- RESOLVE NOME PREFEITURA PARA CHAIN
//

FUNCTION RESOLVE_NOME_PREFEITURA GLOBAL STRING ST@NOME@PREF RETURNS STRING
   LOCAL STRING ST@NOME@PREF@RESOLVIDO
   
   MOVE (REPLACES('┐',ST@NOME@PREF,'a'))           TO ST@NOME@PREF@RESOLVIDO
   MOVE (REPLACES('└',ST@NOME@PREF@RESOLVIDO,'a')) TO ST@NOME@PREF@RESOLVIDO
   MOVE (REPLACES('═',ST@NOME@PREF@RESOLVIDO,'a')) TO ST@NOME@PREF@RESOLVIDO
   MOVE (REPLACES('┤',ST@NOME@PREF@RESOLVIDO,'c')) TO ST@NOME@PREF@RESOLVIDO
   MOVE (REPLACES('ё',ST@NOME@PREF@RESOLVIDO,'u')) TO ST@NOME@PREF@RESOLVIDO
   MOVE (REPLACES('╒',ST@NOME@PREF@RESOLVIDO,'o')) TO ST@NOME@PREF@RESOLVIDO
   MOVE (REPLACES('║',ST@NOME@PREF@RESOLVIDO,'i')) TO ST@NOME@PREF@RESOLVIDO
   MOVE (REPLACES('┌',ST@NOME@PREF@RESOLVIDO,'e')) TO ST@NOME@PREF@RESOLVIDO
   MOVE (REPLACES('┬',ST@NOME@PREF@RESOLVIDO,'e')) TO ST@NOME@PREF@RESOLVIDO
   MOVE (REPLACES('■',ST@NOME@PREF@RESOLVIDO,'o')) TO ST@NOME@PREF@RESOLVIDO
   MOVE (REPLACES('⌠',ST@NOME@PREF@RESOLVIDO,'o')) TO ST@NOME@PREF@RESOLVIDO
   MOVE (REPLACES(' ',ST@NOME@PREF@RESOLVIDO,'@')) TO ST@NOME@PREF@RESOLVIDO

   FUNCTION_RETURN ST@NOME@PREF@RESOLVIDO
END_FUNCTION

//
// ---- MATAR PROCESSO
//

#COMMAND MATA_PROCESSO
  #IFDEF ST@DESTINO@MATA@PROCESSO
  #ELSE
     STRING ST@DESTINO@MATA@PROCESSO
  #ENDIF

  MOVE 'kill -9 ' TO ST@DESTINO@MATA@PROCESSO
  APPEND ST@DESTINO@MATA@PROCESSO !1

  RUNPROGRAM WAIT ST@DESTINO@MATA@PROCESSO
#ENDCOMMAND

//
// ---- VERIFICA SE NO PROCESSO ATIVO NO SERVIDOR
//
#COMMAND LIMPA_PROCESSO_ATIVO_SERVIDOR
   #IFDEF ST@DESTINO@LIMPA
   #ELSE
      STRING ST@DESTINO@LIMPA 255
   #ENDIF
   #IFDEF ST@RESULTADO
   #ELSE
      STRING ST@RESULTADO 255
   #ENDIF
   #IFDEF ST@TERMINAL@ATUAL
   #ELSE
      STRING ST@TERMINAL@ATUAL
   #ENDIF
   #IFDEF ST@COMANDO
   #ELSE
      STRING ST@COMANDO 255
   #ENDIF
   #IFDEF ST@TERMINAIS@ATIVOS
   #ELSE
      STRING ST@TERMINAIS@ATIVOS 255
   #ENDIF
   #IFDEF ST@LINHA@TERMINAL
   #ELSE
      STRING ST@LINHA@TERMINAL
   #ENDIF
   
   //--cria lista com os terminais ativos para o usuario do linux exemplo -> (sfpm2020)
   GET_CURRENT_DIRECTORY TO ST@TERMINAIS@ATIVOS
   APPEND ST@TERMINAIS@ATIVOS '/' ST@USUARIO '_terminais_ativos.txt'
   MOVE 'ps -e -o uname,tty | grep' TO ST@COMANDO
   
   //--no cliente
   APPEND ST@COMANDO ' sfpm' PARGERAL.EXERCICIO ' > '  ST@USUARIO '_terminais_ativos.txt'
   
   //--para testes local (usr "gerson" no linux) 
//    APPEND ST@COMANDO ' gerson > '  ST@USUARIO '_terminais_ativos.txt'
   
   RUNPROGRAM WAIT ST@COMANDO
   //--
   
   MOVE (TERMINALATUAL('')) TO ST@TERMINAL@ATUAL
   
   CLEAR USERPID
   MOVE ST@CODIGO@ENTIDADE      TO USERPID.COD_ENTIDADE
   MOVE ST@EXERCICIO@FINANCEIRO TO USERPID.EXERCICIO
   MOVE ST@USUARIO              TO USERPID.CODIGO_USUARIO
   REPEAT
    FIND GT USERPID BY INDEX.1
    [ FOUND] INDICATE FOUND AS USERPID.COD_ENTIDADE   EQ ST@CODIGO@ENTIDADE
    [ FOUND] INDICATE FOUND AS USERPID.EXERCICIO      EQ ST@EXERCICIO@FINANCEIRO
    [ FOUND] INDICATE FOUND AS USERPID.CODIGO_USUARIO EQ ST@USUARIO
    [ FOUND] BEGIN
          IF USERPID.TERMINAL EQ ST@TERMINAL@ATUAL BEGIN
             INDICATE ERR FALSE
             ON ERROR GOSUB CHECA_GRAVACAO
             REREAD USERPID
             MOVE '' TO USERPID.PROGRAMA
             SAVERECORD USERPID
             UNLOCK
             ON ERROR OFF
          END
        
//--
//--le lista de terminais - se nao encontrar ativo - deleta o urserpid
//--
//           clearxy 0 0
//           showln ST@COMANDO
//           showln ST@TERMINAIS@ATIVOS
//           pause .
          
          DIRECT_INPUT ST@TERMINAIS@ATIVOS
          [~SEQEOF] BEGIN
                     INDICATE @APAGA! TRUE
                     
                     REPEAT
                      READLN ST@LINHA@TERMINAL
                      IF 'pts' IN ST@LINHA@TERMINAL BEGIN
                                                     MOVE (MID(ST@LINHA@TERMINAL,255,((POS('/',ST@LINHA@TERMINAL))+1))) TO ST@RESULTADO
                                                     TRIM ST@RESULTADO TO ST@RESULTADO
                                                    END
                      
                      IF USERPID.TERMINAL EQ ST@RESULTADO INDICATE @APAGA! FALSE
                     UNTIL [ SEQEOF]
                     
                     [ @APAGA!] BEGIN
                                 INDICATE ERR FALSE
                                 ON ERROR GOSUB CHECA_GRAVACAO
                                 REREAD USERPID
                                 DELETE USERPID
                                 UNLOCK
                                 ON ERROR OFF
                                 
                                 CLEAR USERPID
                                 MOVE ST@CODIGO@ENTIDADE      TO USERPID.COD_ENTIDADE
                                 MOVE ST@EXERCICIO@FINANCEIRO TO USERPID.EXERCICIO
                                 MOVE ST@USUARIO              TO USERPID.CODIGO_USUARIO
                                END
                    END
          INDICATE FOUND TRUE 
       END
   UNTIL [~FOUND]
   
   ERASEFILE ST@TERMINAIS@ATIVOS
   
   INDICATE FOUND TRUE
#ENDCOMMAND

//
// ---- VERIFICA SE NO PROCESSO ATIVO, E O MESMO PROGRAMA EM USO
//

FUNCTION VERIFICA_PROCESSO_ATIVO_TABELA GLOBAL STRING ST@PROGRAMA@EM@USO RETURNS STRING
   LOCAL STRING ST@RESULTADO
   
   MOVE 'NAO EXISTE' TO ST@RESULTADO
   
   CLEAR USERPID
   MOVE ST@CODIGO@ENTIDADE      TO USERPID.COD_ENTIDADE
   MOVE ST@EXERCICIO@FINANCEIRO TO USERPID.EXERCICIO
   MOVE ST@USUARIO              TO USERPID.CODIGO_USUARIO
   REPEAT
    FIND GT USERPID BY INDEX.1
     [ FOUND] INDICATE FOUND AS USERPID.COD_ENTIDADE   EQ ST@CODIGO@ENTIDADE
     [ FOUND] INDICATE FOUND AS USERPID.EXERCICIO      EQ ST@EXERCICIO@FINANCEIRO
     [ FOUND] INDICATE FOUND AS USERPID.CODIGO_USUARIO EQ ST@USUARIO
     [ FOUND] IF USERPID.PROGRAMA EQ ST@PROGRAMA@EM@USO BEGIN
       MOVE 'EXISTE' TO ST@RESULTADO
       INDICATE FOUND FALSE
     END
   UNTIL [~FOUND]
   
   INDICATE FOUND TRUE
   
   FUNCTION_RETURN ST@RESULTADO
END_FUNCTION

//
// ---- OBTER O USUARIO NO LINUX DE LOGIN
//

#COMMAND OBTERUSUARIOLINUX
   #IFDEF ST@DESTINO@OBTERUSUARIOLINUX
   #ELSE
      STRING ST@DESTINO@OBTERUSUARIOLINUX
   #ENDIF
   #IFDEF ST@NOME@ARQUIVO@OBTERUSUARIOLINUX   
   #ELSE
      STRING ST@NOME@ARQUIVO@OBTERUSUARIOLINUX
   #ENDIF
   
   OPEN USERPID
   MOVE USERPID.RECNUM TO ST@NOME@ARQUIVO@OBTERUSUARIOLINUX
   APPEND ST@NOME@ARQUIVO@OBTERUSUARIOLINUX (TRIM(ST@USUARIO)) '.txt'
   
   MOVE 'whoami > ' TO ST@DESTINO@OBTERUSUARIOLINUX
   APPEND ST@DESTINO@OBTERUSUARIOLINUX ST@NOME@ARQUIVO@OBTERUSUARIOLINUX
   
   RUNPROGRAM WAIT ST@DESTINO@OBTERUSUARIOLINUX
   
   DIRECT_INPUT ST@NOME@ARQUIVO@OBTERUSUARIOLINUX
   READLN !1
#ENDCOMMAND

//
// ---- OBTER TERMINAL DE PROCESSO NO LINUX ATUAL
//

FUNCTION TERMINALATUAL GLOBAL STRING ST@NADA RETURNS STRING
   LOCAL STRING ST@TERMINAL@ATUAL
   LOCAL STRING ST@DESTINO@TERMINAL@ATUAL
   LOCAL STRING ST@NOME@ARQUIVO@SAIDA@TERMINAL@ATUAL
   LOCAL STRING ST@USUARIO@LINUX
   
   OBTERUSUARIOLINUX ST@USUARIO@LINUX
   
   MOVE (LOWERCASE(ST@USUARIO@LINUX)) TO ST@NOME@ARQUIVO@SAIDA@TERMINAL@ATUAL
   APPEND ST@NOME@ARQUIVO@SAIDA@TERMINAL@ATUAL (TRIM(ST@USUARIO)) '.txt'

   MOVE 'tty > ' TO ST@DESTINO@TERMINAL@ATUAL
   APPEND ST@DESTINO@TERMINAL@ATUAL ST@NOME@ARQUIVO@SAIDA@TERMINAL@ATUAL
   
   RUNPROGRAM WAIT ST@DESTINO@TERMINAL@ATUAL

   DIRECT_INPUT ST@NOME@ARQUIVO@SAIDA@TERMINAL@ATUAL
   READLN ST@TERMINAL@ATUAL
   
   MOVE (MID(ST@TERMINAL@ATUAL,10,6)) TO ST@TERMINAL@ATUAL

   FUNCTION_RETURN ST@TERMINAL@ATUAL
END_FUNCTION

//
// ---- OBTER ID DE PROCESSO NO LINUX ATUAL
//

FUNCTION PIDATUAL GLOBAL STRING ST@NADA RETURNS INTEGER
   LOCAL STRING ST@PID@ATUAL
   LOCAL STRING ST@DESTINO@PID@ATUAL
   LOCAL INTEGER IT@PID@ATUAL
   LOCAL STRING ST@USUARIO@LINUX
   
   OBTERUSUARIOLINUX ST@USUARIO@LINUX
   
   MOVE 'ps -eo pid,command | grep "sshd: ' TO ST@DESTINO@PID@ATUAL
   APPEND ST@DESTINO@PID@ATUAL ST@USUARIO@LINUX '@' (TERMINALATUAL('')) '" | awk '
   APPEND ST@DESTINO@PID@ATUAL "'{print $1}' > " (TRIM(ST@USUARIO)) ".txt"
   
   RUNPROGRAM WAIT ST@DESTINO@PID@ATUAL
   
   MOVE (TRIM(ST@USUARIO)) TO ST@DESTINO@PID@ATUAL
   APPEND ST@DESTINO@PID@ATUAL '.TXT'
   DIRECT_INPUT ST@DESTINO@PID@ATUAL
   READLN ST@PID@ATUAL
   
   //--controlando sem pid por enquanto
   MOVE '' TO ST@PID@ATUAL
   
   MOVE ST@PID@ATUAL TO IT@PID@ATUAL
   
   FUNCTION_RETURN IT@PID@ATUAL
END_FUNCTION

//
// ---- OBTER IP TERMINAL
//

FUNCTION IP_TERMINAL GLOBAL STRING ST@NADA RETURNS STRING
   LOCAL STRING ST@IP@ATUAL
   LOCAL STRING ST@NOME@ARQUIVO@SAIDA@IP@TEMINAL
   LOCAL STRING ST@USUARIO@LINUX
   LOCAL STRING ST@COMANDO@SH
   
   OBTERUSUARIOLINUX ST@USUARIO@LINUX
   
   MOVE (LOWERCASE(ST@USUARIO@LINUX)) TO ST@NOME@ARQUIVO@SAIDA@IP@TEMINAL
   APPEND ST@NOME@ARQUIVO@SAIDA@IP@TEMINAL (LOWERCASE(TRIM(ST@USUARIO))) '.txt'
   
   //--criar SH
   GET_CURRENT_DIRECTORY TO ST@COMANDO@SH
   APPEND ST@COMANDO@SH '/' (LOWERCASE(TRIM(ST@USUARIO))) '_ip_terminal.sh'
   DIRECT_OUTPUT ST@COMANDO@SH
   WRITELN 'hostname -I  > ' ST@NOME@ARQUIVO@SAIDA@IP@TEMINAL
   CLOSE_OUTPUT
 
   //--executar SH
   MOVE '. ./' TO ST@COMANDO@SH
   APPEND ST@COMANDO@SH (LOWERCASE(TRIM(ST@USUARIO))) '_ip_terminal.sh'
   RUNPROGRAM WAIT ST@COMANDO@SH

   //--apagar SH
   GET_CURRENT_DIRECTORY TO ST@COMANDO@SH
   APPEND ST@COMANDO@SH '/' (LOWERCASE(TRIM(ST@USUARIO))) '_ip_terminal.sh'
   ERASEFILE ST@COMANDO@SH
   
   DIRECT_INPUT ST@NOME@ARQUIVO@SAIDA@IP@TEMINAL
   READLN ST@IP@ATUAL
   
   MOVE (MID(ST@IP@ATUAL,13,1)) TO ST@IP@ATUAL
   
   FUNCTION_RETURN (TRIM(ST@IP@ATUAL))
END_FUNCTION


//
// ---- DESCRIPTOGRAFA O NOME DA PREFEITURA
//

FUNCTION DECRIPTA_NOME_PREFEITURA GLOBAL STRING ST@CABECALHO RETURNS STRING
   LOCAL STRING ST@NOME@PREF
   LOCAL STRING ST@LETRA
   LOCAL INTEGER IT@TAMANHO
   LOCAL INTEGER IT@CONTADOR

LENGTH ST@CABECALHO TO IT@TAMANHO

MOVE '' TO ST@NOME@PREF

FOR IT@CONTADOR FROM 1 TO IT@TAMANHO
  MID ST@CABECALHO TO ST@LETRA 1 IT@CONTADOR
  INDICATE MUD! FALSE 
  IF IT@CONTADOR LT 20 BEGIN
     [~MUD!] IF ST@LETRA EQ 's' BEGIN
                                  MOVE  'l' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'o' BEGIN
                                  MOVE  'i' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'r' BEGIN
                                  MOVE  'n' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 't' BEGIN
                                  MOVE  'd' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'e' BEGIN
                                  MOVE  'a' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'm' BEGIN
                                  MOVE  'u' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'c' BEGIN
                                  MOVE  'p' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'l' BEGIN
                                  MOVE  's' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'i' BEGIN
                                  MOVE  'o' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'n' BEGIN
                                  MOVE  'r' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'd' BEGIN
                                  MOVE  't' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'a' begin
                                  MOVE  'e' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'u' BEGIN
                                  MOVE  'm' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'p' BEGIN
                                  MOVE  'c' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
//------- MAIUSCULAS
     [~MUD!] IF ST@LETRA EQ 'S' BEGIN
                                  MOVE  'L' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'O' BEGIN
                                  MOVE  'I' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'R' BEGIN
                                  MOVE  'N' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'T' BEGIN
                                  MOVE  'D' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'E' BEGIN
                                  MOVE  'A' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'M' BEGIN
                                  MOVE  'U' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'C' BEGIN
                                  MOVE  'P' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'L' BEGIN
                                  MOVE  'S' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'I' BEGIN
                                  MOVE  'O' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'N' BEGIN
                                  MOVE  'R' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'D' BEGIN
                                  MOVE  'T' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'A' begin
                                  MOVE  'E' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'U' BEGIN
                                  MOVE  'M' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'P' BEGIN
                                  MOVE  'C' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ '6' BEGIN
                                  MOVE  ' ' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
  END // ABAIXO
  ELSE BEGIN // IF IT_CONTADOR GE 20
     [~MUD!] IF ST@LETRA EQ 'c' BEGIN
                                  MOVE  'l' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'm' BEGIN
                                  MOVE  'i' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                 END
     [~MUD!] IF ST@LETRA EQ 'e' BEGIN
                                  MOVE  'n' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 't' BEGIN
                                  MOVE  'd' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'r' BEGIN
                                  MOVE  'a' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'o' BEGIN
                                  MOVE  'u' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 's' BEGIN
                                  MOVE  'p' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'p' BEGIN
                                  MOVE  's' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'u' BEGIN
                                  MOVE  'o' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'a' BEGIN
                                  MOVE  'r' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'd' BEGIN
                                  MOVE  't' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'n' BEGIN
                                  MOVE  'e' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'i' BEGIN
                                  MOVE  'm' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'l' BEGIN
                                  MOVE  'c' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
//------- MAIUSCULAS
     [~MUD!] IF ST@LETRA EQ 'C' BEGIN
                                  MOVE  'L' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'M' BEGIN
                                  MOVE  'I' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'E' BEGIN
                                  MOVE  'N' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'T' BEGIN
                                  MOVE  'D' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'R' BEGIN
                                  MOVE  'A' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'O' BEGIN
                                  MOVE  'U' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'S' BEGIN
                                  MOVE  'P' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'P' BEGIN
                                  MOVE  'S' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'U' BEGIN
                                  MOVE  'O' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'A' BEGIN
                                  MOVE  'R' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'D' BEGIN
                                  MOVE  'T' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'N' BEGIN
                                  MOVE  'E' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'I' BEGIN
                                  MOVE  'M' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ 'L' BEGIN
                                  MOVE  'C' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
     [~MUD!] IF ST@LETRA EQ '0' BEGIN
                                  MOVE  ' ' TO ST@LETRA
                                  INDICATE MUD! TRUE
                                END
  END // ACIMA 20
   //---
  [~MUD!] IF ST@LETRA EQ '▒' BEGIN
                              MOVE  '┐' TO ST@LETRA
                              INDICATE MUD! TRUE
                             END
  [~MUD!] IF ST@LETRA EQ '⌡' BEGIN
                              MOVE  '└' TO ST@LETRA
                              INDICATE MUD! TRUE
                             END
  [~MUD!] IF ST@LETRA EQ '°' BEGIN
                              MOVE  '═' TO ST@LETRA
                              INDICATE MUD! TRUE
                             END
  [~MUD!] IF ST@LETRA EQ '²' BEGIN
                              MOVE  '┤' TO ST@LETRA
                              INDICATE MUD! TRUE
                             END
  [~MUD!] IF ST@LETRA EQ '·' BEGIN
                              MOVE  'ё' TO ST@LETRA
                              INDICATE MUD! TRUE
                             END
  [~MUD!] IF ST@LETRA EQ '÷' BEGIN
                              MOVE  '╒' TO ST@LETRA
                              INDICATE MUD! TRUE
                             END
  [~MUD!] IF ST@LETRA EQ '╚' BEGIN
                              MOVE  '║' TO ST@LETRA
                              INDICATE MUD! TRUE
                             END
  [~MUD!] IF ST@LETRA EQ '╝' BEGIN
                              MOVE  '┌' TO ST@LETRA
                              INDICATE MUD! TRUE
                             END
  [~MUD!] IF ST@LETRA EQ 'а' BEGIN
                               MOVE  '┬' TO ST@LETRA
                               INDICATE MUD! TRUE
                             END
  [~MUD!] IF ST@LETRA EQ 'А' BEGIN
                               MOVE  '■' TO ST@LETRA
                               INDICATE MUD! TRUE
                             END
  [~MUD!] IF ST@LETRA EQ 'Д' BEGIN
                               MOVE  '⌠' TO ST@LETRA
                               INDICATE MUD! TRUE
                             END
  APPEND ST@NOME@PREF ST@LETRA
LOOP

FUNCTION_RETURN ST@NOME@PREF
//---

END_FUNCTION

//--
#COMMAND OBTER_TAMANHO_ARQUIVO_PRN
 #IFDEF     ST@AUX@TAMANHO@PRN
 #ELSE
    STRING  ST@AUX@TAMANHO@PRN
 #ENDIF
 #IFDEF     ST@NUMERO@PRN
 #ELSE
    STRING  ST@NUMERO@PRN
 #ENDIF
 #IFDEF     ST@LINHA@PRN
 #ELSE
    STRING  ST@LINHA@PRN
 #ENDIF
 #IFDEF     IT@TAMANHO@PRN
 #ELSE
    INTEGER IT@TAMANHO@PRN
 #ENDIF
 
 MOVE !1 TO ST@NUMERO@PRN
 MOVE 0  TO IT@TAMANHO@PRN

 //--criar SH com comando para obter quantidade de colunas do PRN
 GET_CURRENT_DIRECTORY TO ST@AUX@TAMANHO@PRN
 APPEND ST@AUX@TAMANHO@PRN '/' (TRIM(ST@USUARIO)) 'web.sh'
 DIRECT_OUTPUT ST@AUX@TAMANHO@PRN
 WRITELN 'wc -L arq' ST@CODIGO@ENTIDADE ST@EXERCICIO@FINANCEIRO ST@NUMERO@PRN '.prn >> tamanho' ST@NUMERO@PRN '.tam'
 CLOSE_OUTPUT
 
 //--executar SH
 MOVE '. ./' TO ST@AUX@TAMANHO@PRN
 APPEND ST@AUX@TAMANHO@PRN (TRIM(ST@USUARIO)) 'web.sh'
 RUNPROGRAM WAIT ST@AUX@TAMANHO@PRN

 //--apagar SH
 GET_CURRENT_DIRECTORY TO ST@AUX@TAMANHO@PRN
 APPEND ST@AUX@TAMANHO@PRN '/' (TRIM(ST@USUARIO)) 'web.sh'
 ERASEFILE ST@AUX@TAMANHO@PRN
 
 //--ler arquivo.tam obter qtd de colunas do relatorio
 MOVE 'tamanho' TO ST@AUX@TAMANHO@PRN
 APPEND ST@AUX@TAMANHO@PRN ST@NUMERO@PRN '.tam'
 DIRECT_INPUT ST@AUX@TAMANHO@PRN
 READLN ST@LINHA@PRN
 TRIM ST@LINHA@PRN TO ST@LINHA@PRN
 IF (LEFT(ST@LINHA@PRN,1)) NE 0 BEGIN
                                 MOVE (TRIM(LEFT(ST@LINHA@PRN, 3))) TO IT@TAMANHO@PRN
                                END
 CLOSE_INPUT ST@AUX@TAMANHO@PRN
 ERASEFILE ST@AUX@TAMANHO@PRN
 
 OPEN COLUNREL
 CLEAR COLUNREL
 MOVE IT@TAMANHO@PRN TO COLUNREL.QTD_COLUNAS
 FIND GE COLUNREL BY INDEX.1
 [~FOUND] CLEAR COLUNREL
 
 #IF (!0 = 2)
  MOVE IT@TAMANHO@PRN TO !2
 #ENDIF
#ENDCOMMAND
//--

//----- GRAVAPAG
#COMMAND GRAVAPAG
#IFDEF    IT@MODIFICA@TAMANHO
#ELSE
   STRING IT@MODIFICA@TAMANHO
#ENDIF

MOVE 0 TO IT@MODIFICA@TAMANHO

IF RECCOUNT LT 1 BEGIN
                  #IF (!0 > 0)
                   IF !1 NE '' LIMPA_PRN !1
                   ELSE        LIMPA_PRN
                  #ENDIF
                  
                  #IF (!0 = 0)
                   LIMPA_PRN
                  #ENDIF
                 END

#IF (!0 = 2)
 MOVE !2 TO IT@MODIFICA@TAMANHO
#ENDIF

[ GERRELAT!] BEGIN
               #IFDEF    ST@PAGINAS
               #ELSE
                  STRING ST@PAGINAS
               #ENDIF
               #IFDEF    ST@MODULO
               #ELSE
                  STRING ST@MODULO
               #ENDIF
               #IFDEF    ST@FOLHA
               #ELSE
                  STRING ST@FOLHA
               #ENDIF
               #IFDEF    ST@TAMANHO
               #ELSE
                  STRING ST@TAMANHO
               #ENDIF
               #IFDEF    ST@ARQUIVO
               #ELSE
                  STRING ST@ARQUIVO
               #ENDIF
               #IFDEF    ST@RODAR@POR@FORA
               #ELSE
                  STRING ST@RODAR@POR@FORA 255
               #ENDIF
               #IFDEF    ST@MODULO@WEB
               #ELSE
                  STRING ST@MODULO@WEB     255
               #ENDIF
               #IFDEF    ST@LINHA
               #ELSE
                  STRING ST@LINHA
               #ENDIF
               #IFDEF    IT@TAMANHO
               #ELSE
                 INTEGER IT@TAMANHO
               #ENDIF
               #IFDEF    ST@ARQUIVO@HASH
               #ELSE
                 STRING  ST@ARQUIVO@HASH
               #ENDIF
               
               MOVEALL '' TO ST@MODULO@WEB ST@LINHA
               MOVE (OBTER_CONFIGURACAO('APIGERRELAT',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO)) TO ST@MODULO@WEB
               INDICATE GERRELAT_WEB! AS (LEFT(ST@MODULO@WEB,3)) EQ 'php' 

               MOVE 0 TO IT@TAMANHO
               
               [ GERRELAT_WEB!] BEGIN
                                 CLEAR ARQ_PRN
                                 MOVE ST@CODIGO@ENTIDADE      TO ARQ_PRN.COD_ENTIDADE
                                 MOVE ST@EXERCICIO@FINANCEIRO TO ARQ_PRN.EXERCICIO
                                 MOVE ST@NUMERO               TO ARQ_PRN.CODIGO
                                 FIND EQ ARQ_PRN BY INDEX.1
                                 
                                 OBTER_TAMANHO_ARQUIVO_PRN ST@NUMERO IT@TAMANHO
                                 
                                 GET_CURRENT_DIRECTORY TO ST@MODULO
                                 APPEND ST@MODULO '/'
                                 LOWERCASE ST@MODULO
                                 
                                 CALC (IT@TAMANHO + IT@MODIFICA@TAMANHO) TO IT@TAMANHO
                                 
                                 MOVE (OBTER_CONFIGURACAO('APIGERRELAT',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO)) TO ST@RODAR@POR@FORA
                                 
                                 MOVE (TRIM(ST@USUARIO)) TO ST@ARQUIVO@HASH
                                 APPEND ST@ARQUIVO@HASH '_' ST@CODIGO@ENTIDADE ST@EXERCICIO@FINANCEIRO ARQ_PRN.CODIGO '_hash.txt'
                                 LOWERCASE ST@ARQUIVO@HASH
                                
                                 APPEND ST@RODAR@POR@FORA ' relatorio:imprimir '
                                 APPEND ST@RODAR@POR@FORA (obter_configuracao('modulo_gerrelat_web',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO)) ' ' ST@EXERCICIO@FINANCEIRO ' ' ARQ_PRN.USUARIO
                                 APPEND ST@RODAR@POR@FORA " '" (TRIM(ARQ_PRN.DESCRICAO)) "' " ST@MODULO 'arq' ST@CODIGO@ENTIDADE ST@EXERCICIO@FINANCEIRO ARQ_PRN.CODIGO '.prn ' (TRIM(COLUNREL.ORIENTACAO)) ' ' IT@TAMANHO ' ' ST@CODIGO@ENTIDADE ' > ' ST@ARQUIVO@HASH
                                 
                                 CLOSE COLUNREL
                                 
                                 RUNPROGRAM WAIT ST@RODAR@POR@FORA
                                 DIRECT_INPUT    ST@ARQUIVO@HASH
                                 READLN ST@LINHA
                                 ERASEFILE       ST@ARQUIVO@HASH
                                 
                                 // clearxy 0 0
                                 // showln pargeral.COD_ENTIDADE ' ' pargeral.exercicio
                                 // showln st@rodar@por@fora
                                 // showln ST@ARQUIVO@HASH
                                 // showln ST@LINHA
                                 // pause .
                                END
               
               INDICATE ERR FALSE
               ON ERROR GOSUB CHECA_GRAVACAO
               REREAD
               CLEAR ARQ_PRN
               MOVE ST@CODIGO@ENTIDADE      TO ARQ_PRN.COD_ENTIDADE
               MOVE ST@EXERCICIO@FINANCEIRO TO ARQ_PRN.EXERCICIO
               MOVE ST@NUMERO               TO ARQ_PRN.CODIGO
               FIND EQ ARQ_PRN BY INDEX.1
               MOVE (PAGECOUNT-1)                     TO ST@PAGINAS
               MOVE ST@PAGINAS                        TO ARQ_PRN.PAGINAS
               [ GERRELAT_WEB!] MOVE (TRIM(ST@LINHA)) TO ARQ_PRN.HASH
               SAVERECORD ARQ_PRN
               UNLOCK
               ON ERROR OFF
             END
[~GERRELAT!] BEGIN
              VERSAO
              [~LINUX!] BEGIN
                         IF ST@MATR@LASER EQ '2' BEGIN
                                                  SCREENMODE 31 ON
                                                  CLOSE_OUTPUT
                                                  MOVE 'TYPE ' TO ST@JUNCAO
                                                  APPEND ST@JUNCAO ST@USUARIO '.PRN > ' MENUUSER.PORTA_LASER
                                                  GOTOXY 0 0
                                                  SHOWLN ST@JUNCAO
                                                  RUNPROGRAM WAIT ST@JUNCAO
                                                  MOVE ST@USUARIO TO ST@JUNCAO
                                                  APPEND ST@JUNCAO '.PRN'
                                                  ERASEFILE ST@JUNCAO
                                                 END

                         ELSE BEGIN
                               OUTFILE
                              END
                        END
              [ LINUX!] BEGIN
                         #IFDEF ST@IMP
                         #ELSE
                          STRING ST@IMP
                         #ENDIF

                         CLEAR MENUUSER
                         MOVE ST@USUARIO TO MENUUSER.CODIGO
                         FIND EQ MENUUSER BY INDEX.1

                         MOVE 'imprimedir.sh ' TO ST@JUNCAO
                         APPEND ST@JUNCAO ST@IMP ' ' (LOWERCASE(ST@USUARIO)) '.prn'
                         CLOSE_OUTPUT
                         LOWERCASE ST@JUNCAO

                         RUNPROGRAM WAIT ST@JUNCAO

                         MOVE ST@USUARIO TO ST@JUNCAO
                         APPEND ST@JUNCAO '.PRN'
                         LOWERCASE ST@JUNCAO
                         ERASEFILE ST@JUNCAO
                        END
             END
#ENDCOMMAND

#COMMAND APAGA_ARQUIVO_WEB
   #IFDEF    ST@RODAR@POR@FORA
   #ELSE
      STRING ST@RODAR@POR@FORA 255
   #ENDIF

   MOVE (OBTER_CONFIGURACAO('APIGERRELAT',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO)) TO ST@RODAR@POR@FORA
   
   APPEND ST@RODAR@POR@FORA ' relatorio:excluir '
   APPEND ST@RODAR@POR@FORA ARQ_PRN.HASH
   APPEND ST@RODAR@POR@FORA ' &>> /dev/null'
   
   RUNPROGRAM WAIT ST@RODAR@POR@FORA
#ENDCOMMAND

//----- INKEYCHECK -- TESTA ENTRADA TECLADO (S/N)

#COMMAND INKEYCHECK
GOTOXY 25 0
KEYPROC OFF
REPEAT
  INKEY !1
UNTIL !1 !2 !3
KEYPROC ON
#ENDCOMMAND

//----- LIMPA PRN

#COMMAND LIMPA_PRN
#IFDEF    ST@JUNCAO
#ELSE
   STRING ST@JUNCAO
#ENDIF

INDICATE @SAIR! AS ( !0 = 0 )

OPEN ARQ_PRN

INDICATE ERR FALSE
ON ERROR GOSUB CHECA_GRAVACAO
REREAD

CLEAR ARQ_PRN
MOVE ST@CODIGO@ENTIDADE      TO ARQ_PRN.COD_ENTIDADE
MOVE ST@EXERCICIO@FINANCEIRO TO ARQ_PRN.EXERCICIO
MOVE ST@NUMERO               TO ARQ_PRN.CODIGO
FIND EQ ARQ_PRN BY INDEX.1
[ FOUND] BEGIN
          DELETE ARQ_PRN
          CLEAR  ARQ_PRN
          
          MOVE '' TO ST@JUNCAO
          APPEND ST@JUNCAO 'ARQ' ST@CODIGO@ENTIDADE ST@EXERCICIO@FINANCEIRO ST@NUMERO '.PRN'
          CLOSE_OUTPUT
         END

UNLOCK
ON ERROR OFF

ERASEFILE ST@JUNCAO

[ @SAIR!] ABORT
#ENDCOMMAND

//----- MENSAGEM -- POSICIONA MENSAGEM DE ERRO LINHA 23

#COMMAND MENSAGEM
INDICATE F! FALSE
[ FOUND] INDICATE F! TRUE
GOTOXY 25 0
SCREENMODE IT_COR_MOLDURA ON
PAGE FIM
ERROR ( 12288 + !1 )
SCREENMODE IT_COR_TARJA ON
INDICATE FOUND FALSE
[ F!] INDICATE FOUND TRUE
#ENDCOMMAND

//--------------------------------- MONTH ----------------------------------

#COMMAND MONTH
IF !1 EQ  1 MOVE  "JANEIRO/"   TO !2
IF !1 EQ  2 MOVE  "FEVEREIRO/" TO !2
IF !1 EQ  3 MOVE  "MARCO/"     TO !2
IF !1 EQ  4 MOVE  "ABRIL/"     TO !2
IF !1 EQ  5 MOVE  "MAIO/"      TO !2
IF !1 EQ  6 MOVE  "JUNHO/"     TO !2
IF !1 EQ  7 MOVE  "JULHO/"     TO !2
IF !1 EQ  8 MOVE  "AGOSTO/"    TO !2
IF !1 EQ  9 MOVE  "SETEMBRO/"  TO !2
IF !1 EQ 10 MOVE  "OUTUBRO/"   TO !2
IF !1 EQ 11 MOVE  "NOVEMBRO/"  TO !2
IF !1 EQ 12 MOVE  "DEZEMBRO/"  TO !2

IF !1 EQ 13 MOVE  "MES-13/"    TO !2
IF !1 EQ 14 MOVE  "MES-14/"    TO !2
#ENDCOMMAND

//--------------------------------- MESA ----------------------------------

#COMMAND MESA
IF !1 EQ  1 MOVE  "JANEIRO"   TO !2
IF !1 EQ  2 MOVE  "FEVEREIRO" TO !2
IF !1 EQ  3 MOVE  "MARCO"     TO !2
IF !1 EQ  4 MOVE  "ABRIL"     TO !2
IF !1 EQ  5 MOVE  "MAIO"      TO !2
IF !1 EQ  6 MOVE  "JUNHO"     TO !2
IF !1 EQ  7 MOVE  "JULHO"     TO !2
IF !1 EQ  8 MOVE  "AGOSTO"    TO !2
IF !1 EQ  9 MOVE  "SETEMBRO"  TO !2
IF !1 EQ 10 MOVE  "OUTUBRO"   TO !2
IF !1 EQ 11 MOVE  "NOVEMBRO"  TO !2
IF !1 EQ 12 MOVE  "DEZEMBRO"  TO !2

IF !1 EQ 13 MOVE  "MES-13/"   TO !2
IF !1 EQ 14 MOVE  "MES-14/"   TO !2
#ENDCOMMAND

#COMMAND MOVEMES

#IFDEF   ST@DATA
#ELSE
   STRING ST@DATA
#ENDIF

#IFDEF   ST@MES
#ELSE
   STRING ST@MES
#ENDIF

MOVE !1 TO ST@DATA

MID ST@DATA TO ST@MES 2 4
MOVE ST@MES TO !2
#ENDCOMMAND

//--- MOVEALL - MOVE ARG PARA AS OUTRAS (VARIAVEIS / JANELAS)

#COMMAND MOVEALL
 MOVE !1 !2 !3
 #IF (!0>3)
  MOVEALL !1 !2 !4 !5 !6 !7 !8 !9
 #ENDIF
#ENDCOMMAND

//----- NOME_PREF ---- CENTRALIZA NOME DA PREFEITURA NA TARJA

#COMMAND NOME_PREF
CABEC ST@PREFEITURA JN_TARJA
#ENDCOMMAND

//----- NUMERICO
//----- SINTAXE : NUMERICO <JANELA> <TAMANHO_DA_JANELA>
//----- VERIFICA SE JANELA E' NUMERICA

#COMMAND NUMERICO
#IFDEF    ST@BYTE
#ELSE
   STRING ST@BYTE 1
#ENDIF
#IFDEF     IT@CONTADOR
#ELSE
   INTEGER IT@CONTADOR
#ENDIF
#IFDEF     IT@PONTO
#ELSE
   INTEGER IT@PONTO
#ENDIF

MOVE 0 TO IT@CONTADOR
MOVE 0 TO IT@PONTO

IF !1 NE '' BEGIN
             REPEAT
              REMOVE ' ' FROM !1
             UNTIL [~ FOUND]
             FOR IT@CONTADOR FROM 1 TO !2
              MID !1 TO ST@BYTE 1 IT@CONTADOR
              INDICATE @NUMERICO! AS ST@BYTE IN '.0123456789'
              IF ST@BYTE EQ '' INDICATE @NUMERICO! TRUE
              IF ST@BYTE EQ '.' INCREMENT IT@PONTO
              IF IT@PONTO GT 1 INDICATE @NUMERICO! FALSE

              [~ @NUMERICO!] BEGIN
                              ADVERTE 'ESTE CAMPO DEVE SER NUM┌RICO'
                              CLEARFORM !1
                              MOVE !2 TO IT@CONTADOR
                             END
             LOOP
            END
#ENDCOMMAND

#COMMAND PONTUA_ECONOMICA_ANTIGA
#IFDEF IT@TAM@EC
#ELSE
 INTEGER IT@TAM@EC
#ENDIF
#IFDEF ST@EC
#ELSE
 STRING ST@EC
#ENDIF
#IFDEF ST@EC@1
#ELSE
 STRING ST@EC@1
#ENDIF
#IFDEF ST@EC@2
#ELSE
 STRING ST@EC@2
#ENDIF
#IFDEF ST@EC@3
#ELSE
 STRING ST@EC@3
#ENDIF
#IFDEF ST@EC@4
#ELSE
 STRING ST@EC@4
#ENDIF
#IFDEF ST@EC@5
#ELSE
 STRING ST@EC@5
#ENDIF

REPEAT
   REPLACE '.' IN !1 WITH ''
UNTIL [~FOUND]
TRIM !1 TO ST@EC

IF (LENGTH(ST@EC)) EQ 1 APPEND ST@EC '00000'
IF (LENGTH(ST@EC)) EQ 2 APPEND ST@EC '0000'
IF (LENGTH(ST@EC)) EQ 3 APPEND ST@EC '000'
IF (LENGTH(ST@EC)) EQ 4 APPEND ST@EC '00'
IF (LENGTH(ST@EC)) EQ 5 APPEND ST@EC '0'

MID ST@EC TO ST@EC@1 1 1
MID ST@EC TO ST@EC@2 1 2
MID ST@EC TO ST@EC@3 1 3
MID ST@EC TO ST@EC@4 1 4
MID ST@EC TO ST@EC@5 2 5
MOVE '' TO ST@EC
APPEND ST@EC ST@EC@1 '.' ST@EC@2 '.' ST@EC@3 '.' ST@EC@4 '.' ST@EC@5
MOVE ST@EC TO !1
#ENDCOMMAND

#COMMAND PONTUA_ECONOMICA
#IFDEF IT@TAM@EC
#ELSE
 INTEGER IT@TAM@EC
#ENDIF
#IFDEF ST@EC
#ELSE
 STRING ST@EC
#ENDIF
#IFDEF ST@EC@1
#ELSE
 STRING ST@EC@1
#ENDIF
#IFDEF ST@EC@2
#ELSE
 STRING ST@EC@2
#ENDIF
#IFDEF ST@EC@3
#ELSE
 STRING ST@EC@3
#ENDIF
#IFDEF ST@EC@4
#ELSE
 STRING ST@EC@4
#ENDIF
#IFDEF ST@EC@5
#ELSE
 STRING ST@EC@5
#ENDIF

REPEAT
 REMOVE '.' FROM !1
UNTIL [~FOUND]

TRIM !1 TO ST@EC

#IF (!0=1)
 IF (LENGTH(ST@EC)) EQ 1 APPEND ST@EC '0000000'
 IF (LENGTH(ST@EC)) EQ 2 APPEND ST@EC '000000'
 IF (LENGTH(ST@EC)) EQ 3 APPEND ST@EC '00000'
 IF (LENGTH(ST@EC)) EQ 4 APPEND ST@EC '0000'
 IF (LENGTH(ST@EC)) EQ 5 APPEND ST@EC '000'
 IF (LENGTH(ST@EC)) EQ 6 APPEND ST@EC '00'
 IF (LENGTH(ST@EC)) EQ 7 APPEND ST@EC '0'
#ELSE (!0=2)
 IF (!2='I') BEGIN
              IF (LENGTH(ST@EC)) EQ 1 APPEND ST@EC '0000000'
              IF (LENGTH(ST@EC)) EQ 2 APPEND ST@EC '000000'
              IF (LENGTH(ST@EC)) EQ 3 APPEND ST@EC '00000'
              IF (LENGTH(ST@EC)) EQ 4 APPEND ST@EC '0000'
              IF (LENGTH(ST@EC)) EQ 5 APPEND ST@EC '000'
              IF (LENGTH(ST@EC)) EQ 6 APPEND ST@EC '00'
              IF (LENGTH(ST@EC)) EQ 7 APPEND ST@EC '0'
             END
 ELSE BEGIN
       IF (LENGTH(ST@EC)) EQ 1 APPEND ST@EC '9999999'
       IF (LENGTH(ST@EC)) EQ 2 APPEND ST@EC '999999'
       IF (LENGTH(ST@EC)) EQ 3 APPEND ST@EC '99999'
       IF (LENGTH(ST@EC)) EQ 4 APPEND ST@EC '9999'
       IF (LENGTH(ST@EC)) EQ 5 APPEND ST@EC '999'
       IF (LENGTH(ST@EC)) EQ 6 APPEND ST@EC '99'
       IF (LENGTH(ST@EC)) EQ 7 APPEND ST@EC '9'
      END
#ENDIF

MID ST@EC TO ST@EC@1 1 1
MID ST@EC TO ST@EC@2 1 2
MID ST@EC TO ST@EC@3 2 3
MID ST@EC TO ST@EC@4 2 5
MID ST@EC TO ST@EC@5 2 7
MOVE '' TO ST@EC
APPEND ST@EC ST@EC@1 '.' ST@EC@2 '.' ST@EC@3 '.' ST@EC@4 '.' ST@EC@5
MOVE ST@EC TO !1
#ENDCOMMAND

#COMMAND PONTUA_ORGAO
#IFDEF IT@TAM@OG
#ELSE
 INTEGER IT@TAM@OG
#ENDIF
#IFDEF ST@OG
#ELSE
 STRING ST@OG
#ENDIF
#IFDEF ST@OG@1
#ELSE
 STRING ST@OG@1
#ENDIF
#IFDEF ST@OG@2
#ELSE
 STRING ST@OG@2
#ENDIF
#IFDEF ST@OG@3
#ELSE
 STRING ST@OG@3
#ENDIF

REPEAT
   REPLACE '.' IN !1 WITH ''
UNTIL [~FOUND]

TRIM !1 TO ST@OG

IF (LENGTH(ST@OG)) EQ 1 APPEND ST@OG '00000'
IF (LENGTH(ST@OG)) EQ 2 APPEND ST@OG '0000'
IF (LENGTH(ST@OG)) EQ 3 APPEND ST@OG '000'
IF (LENGTH(ST@OG)) EQ 4 APPEND ST@OG '00'
IF (LENGTH(ST@OG)) EQ 5 APPEND ST@OG '0'

MID ST@OG TO ST@OG@1 2 1
MID ST@OG TO ST@OG@2 2 3
MID ST@OG TO ST@OG@3 2 5
MOVE '' TO ST@OG
APPEND ST@OG ST@OG@1 '.' ST@OG@2 '.' ST@OG@3
MOVE ST@OG TO !1

#ENDCOMMAND

//----- REPORTXEND --- REPORTEND CUSTOMIZADA

#COMMAND REPORTXEND                      // end of REPORT
  MAKEDEF$ RPT.HEADER RPT.SELECTION RPT.BODY RPT.TOTAL RPT.FOOTER RPT.FOOTER_COMPLETE
  #SET X$ 0
  BREAK$T3
  // RETURN
  !A [] $43 |CI0
  #IFDEF RPT.KEYPRESS
  #ELSE
    RPT.KEYPRESS:
    REPEAT             // CLEAR KEYBOARD BUFFER
    KEYCHECK LOOP
    // STRING AKEY$ 1
    #IFDEF AKEY$
    #ELSE
      #STR V$ 1
      #REPLACE AKEY$ |VS!v
    #ENDIF

    SCREENMODE IT_COR_TARJA ON
    GOTOXY 22 02
    !A [] $142 |CS'                    GOSTARIA REALMENTE DE SAIR ? < S/N >                    '
    //GOTOXY 25 0

    KEYPROC OFF
    !A [] $147 AKEY$
//        !A [] $141 AKEY$
    INDCT$AS SELECT AS AKEY$ IN 'Ss'
    KEYPROC ON
    [  SELECT] BEGIN
                [  GERRELAT!] LIMPA_PRN
                [~ GERRELAT!] FORMFEED
                ABORT
               END

    [~ SELECT] BEGIN
                SCREENMODE IT_COR_MOLDURA ON
                GOTOXY 21 0
                !A [] $142 |CS'цдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢'
                !A [] $142 |CS'Ё                                                                              Ё'
                !A [] $142 |CS'юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды'
                SCREENMODE IT_COR_TARJA ON
[~ GERRELAT!] BEGIN
               GOTOXY 22 02
               SHOW '     Enviando sa║da para Impressora. Aguarde t┌rmino da impress└o ...       '
              END

[  GERRELAT!] BEGIN
               GOTOXY 22 02
               SHOW '      Enviando sa║da para Gerenciador. Aguarde t┌rmino da gera┤└o  ...      '
               SCREENMODE IT_COR_TARJA ON
              END
                RETURN RPT.LOOP
               END
               RETURN END$OF$REPORT  // Necessary to pop stack
  #ENDIF
  END$OF$REPORT:
  IF RECCOUNT LT 1 BEGIN
                    SCREENMODE IT_COR_TITULO ON
                    GOTOXY 22 02
                    BEEP
                    SHOW ' RELAT╒RIO N▌O IMPRESSO ! REGISTRO N▌O ENCONTRADO . TECLE <ENTER> PARA SAIR '
                    //GOTOXY 25 0
                    INKEY ST_TECLA
                   END
#ENDCOMMAND

//--- RTRIM - REMOVE ESPACOS EM BRANCO DA DIREITA DA STRING

#COMMAND RTRIM
 #IFDEF IT@TRIM
  #ELSE
  INTEGER IT@TRIM IT@CONTA@TRIM
  STRING  ST@TRIM 1
 #ENDIF
 MOVE 0 TO IT@TRIM
 REPEAT
  INCREMENT IT@TRIM
  MOVE '' TO ST@TRIM
  INDICATE TRIM! AS !1 EQ ''
  [~ TRIM!] BEGIN
             MID !1 TO ST@TRIM 1 IT@TRIM
             INDICATE TRIM! AS ST@TRIM NE ''
            END
 UNTIL [TRIM!]
 TRIM !1 TO !1
 DECREMENT IT@TRIM
 FOR IT@CONTA@TRIM FROM 1 TO IT@TRIM
  INSERT ' ' IN !1 AT 1
 LOOP
 MOVE !1 TO !2
#ENDCOMMAND

//----- ULT_CADASTRADO --- MOSTRA ULTIMO CADASTRADO

#COMMAND ULT_CADASTRADO
PAGE ULTIMO_CADASTRADO
GOTOXY 25 0
KEYPROC OFF
INKEY ST_TECLA
KEYPROC ON
ENTAGAIN
RETURN
#ENDCOMMAND

#COMMAND SELECIONA_INDICE !1
MOVE 0 TO WINDOWINDEX
REPEAT
 SCREENMODE IT_COR_TITULO ON
 DISPLAY ORDEM.1& TO ORDEM.1&
 SCREENMODE IT_COR_TITULO OFF

 INKEY C
 INDICATE APAGA GROUP ANY [KEY.ESCAPE KEY.UP KEY.DOWN]

 [APAGA] BEGIN
         SCREENMODE IT_COR_TARJA ON
         DISPLAY ORDEM.1& TO ORDEM.1&
         SCREENMODE IT_COR_TARJA OFF
 END

 [KEY.UP] BEGIN                            // SET SOBE
          IF WINDOWINDEX NE 0 DECREMENT WINDOWINDEX
          ELSE MOVE (!1 - 1) TO WINDOWINDEX
 END

 [KEY.DOWN] BEGIN                         // SET DESCE
            IF WINDOWINDEX EQ (!1 -1) MOVE 0 TO WINDOWINDEX
            ELSE INCREMENT WINDOWINDEX
 END
 [KEY.ESCAPE] INDICATE KEY.RETURN TRUE
UNTIL [KEY.RETURN]
#ENDCOMMAND

#COMMAND FIND_INDEX "$0""$1""$2""$3""$4""$5" R
    #IFDEF OLD$_FIELDINDEX
    #ELSE
        INTEGER OLD$_FIELDINDEX
    #ENDIF
    MOVE FIELDINDEX TO OLD$_FIELDINDEX
    MOVE !3 TO FIELDINDEX
    #CHECK !2.RECNUM _U#LGWV
    #SET Q$ !2.RECNUM
    !A [] $0C6 |FS!q.0& |CI!1
    MOVE OLD$_FIELDINDEX TO FIELDINDEX
#ENDCOMMAND

#COMMAND ACCEPT_D
   #IFDEF IT@DATA
   #ELSE
        INTEGER IT@DATA
   #ENDIF
    INDICATE DATA_ERRADA! FALSE
    ACCEPT !1 {CAPSLOCK,AUTOCLEAR}
    LENGTH !1 TO IT@DATA
    IF IT@DATA NE '';
      IF IT@DATA LT 10 BEGIN
                          IF !1 GE 01/01/10 CALC (!1 + 693975) TO !1
                          ELSE              CALC (!1 + 730500) TO !1
                         END
#ENDCOMMAND

#COMMAND REP_ESP T "BY""DOWN" U#LGR "BREAK"""
    #IFDEF RECCOUNT
    #ELSE
        INTEGER RECCOUNT
    #ENDIF
    #CHECK !1.RECNUM _UVCWGL
    #SET P$ 0
    MOVEINT 20000 TO LINECOUNT
    MOVE 0        TO RECCOUNT
    BREAKINIT
    INDICATE FIRSTREC TRUE
    #IFSAME !2 BY
        FIND_INDEX GE !1 !3
    #ELSE
        FIND_INDEX LE !1 !3
    #ENDIF
    [NOT FOUND] GOTO END$OF$REPORT
    RPT.LOOP:
        INDICATE SELECT TRUE
        GOSUB RPT.SELECTION
        [NOT SELECT] GOTO RPT.CONT
        BREAK$ !5 !6 !7 !8 !9
        #SET X$ !p
        [NOT FIRSTREC] BREAK$DOWN RPT.SUBTOTAL
        #SET X$ 0
        RELATE !1
        BREAK$UP RPT.SUBHEADER
        INCREMENT RECCOUNT
        GOSUB RPT.BODY
        INDICATE FIRSTREC FALSE

    RPT.CONT:
        #IFSAME !2 BY
            FIND_INDEX GT !1 !3
        #ELSE
            FIND_INDEX LT !1 !3
        #ENDIF
        KEYCHECK
        [FOUND NOT KEYPRESS] GOTO  RPT.LOOP
        [FOUND KEYPRESS]     GOSUB RPT.KEYPRESS
        #SET X$ !p

    END.OF.REPORT:
        [NOT FIRSTREC] BREAK$DOWN RPT.SUBTOTAL $X
        [NOT FIRSTREC]     GOSUB RPT.TOTAL
        GOTO END$OF$REPORT

    NEWPAGE:
        GOSUB RPT.HEADER
        #SET X$ 0
        [NOT FIRSTREC] BREAK$PRT SUBHEADER
    RETURN

    RPT.SELECTION:
#ENDCOMMAND

#COMMAND SEMANA4  #LGRU "TO" #LCGRU ULG%# .
    #IFDEF I$AUX
    #ELSE
        INTEGER I$AUX
    #ENDIF
    #IFDEF S$AUX
    #ELSE
        STRING S$AUX
    #ENDIF
    #IFTYPE !1 "S"
        #IFDEF D$AUX
        #ELSE
            DATE D$AUX
        #ENDIF
        MOVE !1 TO D$AUX
        MOD 7 FROM D$AUX TO I$AUX
    #ELSE
        MOD 7 FROM !1 TO I$AUX
    #ENDIF
    //se o ano tiver 4 digitos comecar a string com sexta
    MID "SEXTA  SABADO DOMINGOSEGUNDATERCA  QUARTA QUINTA " TO S$AUX 7 (I$AUX*7+1)
    //MID "DOMINGOSEGUNDATERCA  QUARTA QUINTA SEXTA  SABADO " TO S$AUX 7 (I$AUX*7+1)
    #IF !0>3
        LEFT S$AUX TO !3 !4
    #ELSE
        TRIM S$AUX TO !3
    #ENDIF
#ENDCOMMAND

#COMMAND MOVEDATA
 MOVE !1 TO !3
 IF !1 GT 00/00/00 BEGIN
                         IF !1 GE 01/01/2000 CALC (!1 - 730500) TO !3
                    ELSE IF !1 GE 01/01/1900 CALC (!1 - 693975) TO !3
                    ELSE IF !1 GE 01/01/05   CALC (!1 + 693975) TO !3
                    ELSE                     CALC (!1 + 730500) TO !3
                   END
#ENDCOMMAND

#COMMAND MOVEANO
 IF !1 NE '' BEGIN
              MOVE !1 TO !3
                   IF !1 GE 1900 MID !1 TO !3 2 3
              ELSE IF !1 GE 10   CALC (!1 + 1900) TO !3
              ELSE               CALC (!1 + 2000) TO !3
             END
#ENDCOMMAND

#COMMAND ANO_2000
#IFDEF IT@ANO
#ELSE
 INTEGER IT@ANO
#ENDIF
 REPEAT
  INDICATE ANO_ERRADO! FALSE
  ACCEPT !1 {CAPSLOCK,AUTOCLEAR}
  IF !1 NE '' NUMERICO !1 4
  ELSE INDICATE @NUMERICO! TRUE
 UNTIL [ @NUMERICO!]
     
 LENGTH !1 TO IT@ANO
 
 IF IT@ANO NE '' IF IT@ANO LT 4 BEGIN
                                 IF !1 GT 30 CALC (!1 + 1900) TO !1
                                 ELSE        CALC (!1 + 2000) TO !1
                                END
#ENDCOMMAND

#COMMAND DATA_2000
 #IFDEF IT@DATA
 #ELSE
  INTEGER IT@DATA
 #ENDIF
 #IFDEF ST@DATA
 #ELSE
  STRING ST@DATA 10
 #ENDIF
 #IFDEF ST@MES
 #ELSE
  STRING ST@MES 2
 #ENDIF

 INDICATE DATA_ERRADA! FALSE
 ACCEPT !1 {CAPSLOCK,AUTOCLEAR}
 LENGTH !1 TO IT@DATA
 IF IT@DATA NE '' IF IT@DATA LT 10 BEGIN
                                    IF !1 GE 01/01/30 CALC (!1 + 693975) TO !1
                                    ELSE              CALC (!1 + 730500) TO !1
                                   END
#ENDCOMMAND

//-- nЁo permitir movimentar mes jЁ encerrado "audesp"
//--
//-- siafic - verificacao da ultima data de movimento
//--
//-- !1 data
//-- !2 label retorno
//-- !3 tabela
//-- !4 modulo
//--
#COMMAND VER_DATA
 #IFDEF ST@DATA
 #ELSE
  STRING ST@DATA 10
 #ENDIF
 #IFDEF ST@MES
 #ELSE
  STRING ST@MES 2
 #ENDIF
 #IFDEF ST@ANO
 #ELSE
  STRING ST@ANO 4
 #ENDIF
 #IFDEF ST@MES@ANTERIOR
 #ELSE
  STRING ST@MES@ANTERIOR 2
 #ENDIF
 #IFDEF IT@CONTROLE@SIAFIC
 #ELSE
  INTEGER IT@CONTROLE@SIAFIC
 #ENDIF

//---indicador ja-passei utilizado em alguns programas
//---para o cursor nao passar pela data a partir do
//---segundo lancamento

  MOVEALL '' TO ST@DATA ST@MES ST@MES@ANTERIOR ST@ANO
  MOVE !1 TO ST@DATA
  MOVE (MID(ST@DATA,2,4)) TO ST@MES
  MOVE (MID(ST@DATA,4,7)) TO ST@ANO

  IF ST@MES NE '01' BEGIN
   CALC (ST@MES - 1) TO ST@MES@ANTERIOR
   COMZEROS ST@MES@ANTERIOR 2
  END

  CLEAR ENCERRA
  MOVE ST@CODIGO@ENTIDADE TO ENCERRA.COD_ENTIDADE
  MOVE ST@ANO             TO ENCERRA.ANO
  MOVE ST@MES             TO ENCERRA.MES
  FIND EQ ENCERRA BY INDEX.1
  [ FOUND] IF ((ENCERRA.STATUS EQ 'F') OR (ENCERRA.DEFINITIVO EQ 'F')) BEGIN
            ADVERTE 'M┬S J═ ENCERRADO - IMPOSS║VEL EFETUAR MOVIMENTA─▌O'
            INDICATE JA_PASSEI! FALSE
            GOTO !2
           END
  //--vencimento de liquidacoes pode ter data superior ao do exercicio
  [~FOUND] IF ST@ANO LT PARGERAL.EXERCICIO BEGIN
            ADVERTE 'EXERC║CIO N▌O ENCONTRADO NO ARQUIVO DE ENCERRAMENTO'
            INDICATE JA_PASSEI! FALSE
            GOTO !2
           END

  IF ((ST@ANO EQ PARGERAL.EXERCICIO) AND (PARGERAL.FECHA_MES NE '')) BEGIN
   CLEAR ENCERRA
   MOVE ST@CODIGO@ENTIDADE TO ENCERRA.COD_ENTIDADE
   MOVE PARGERAL.EXERCICIO TO ENCERRA.ANO
   MOVE ST@MES@ANTERIOR    TO ENCERRA.MES
   FIND EQ ENCERRA BY INDEX.1
   [ FOUND] IF ENCERRA.STATUS NE 'F' BEGIN
             ADVERTE 'M┬S ANTERIOR NгO ENCERRADO - IMPOSS║VEL EFETUAR MOVIMENTA─▌O'
             INDICATE JA_PASSEI! FALSE
             GOTO !2
            END
   END
  
  #IF !0=4 BEGIN
      MOVE 0 TO IT@CONTROLE@SIAFIC
      
      IF (OBTER_CONFIGURACAO('VERIFICAR_DATA_GERAL',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))     EQ 'SIM' MOVE 1 TO IT@CONTROLE@SIAFIC
      IF (OBTER_CONFIGURACAO('VERIFICAR_DATA_MODULO',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))    EQ 'SIM' MOVE 1 TO IT@CONTROLE@SIAFIC
      IF (OBTER_CONFIGURACAO('VERIFICAR_DATA_MOVIMENTO',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO)) EQ 'SIM' MOVE 1 TO IT@CONTROLE@SIAFIC
      
      IF IT@CONTROLE@SIAFIC EQ 1 BEGIN
       //--envio de tabela - data - modulo - label
       VERIFICAR_DATA_MOVIMENTO !3 !1 !4 !2
      END
  #ENDIF
#ENDCOMMAND

//--
//-- siafic - funcao que retorna ultima data de movimento de acordo com parametros
//--
//-- nome da tabela
//-- nome do campo
//-- indice
//-- retorna - data de ultimo movimento ou sem movimento
//--
FUNCTION RETORNA_ULTIMA_DATA GLOBAL STRING ST_NOME_TABELA STRING ST_NOME_CAMPO INTEGER IT_INDICE RETURNS STRING
   LOCAL STRING ST@NOME@USUARIO
   LOCAL STRING ST@NOME@ARQUIVO
   LOCAL STRING ST@NOME@CAMPO@ENCONTRADO
   LOCAL STRING ST@TOTAL@CAMPOS
   LOCAL STRING ST@RETORNO
   LOCAL STRING ST@DATA@ULTIMA@EXERCICIO
   LOCAL INTEGER IT@N@ARQUIVO
   LOCAL INTEGER IT@CONTADOR
   LOCAL INTEGER IT@TOTAL@CAMPOS
   LOCAL INTEGER IT@CAMPO@PROCURADO

   MOVE 0 TO IT@N@ARQUIVO
   OPEN (TRIM(ST_NOME_TABELA)) AS IT@N@ARQUIVO

   FILELIST IT@N@ARQUIVO TO ST@NOME@USUARIO ST@NOME@ARQUIVO

   GET_ATTRIBUTE DF_FILE_NUMBER_FIELDS of IT@N@ARQUIVO to ST@TOTAL@CAMPOS

   MOVE ST@TOTAL@CAMPOS TO IT@TOTAL@CAMPOS

   MOVE 0 TO FIELDINDEX

   FOR IT@CONTADOR FROM 1 TO IT@TOTAL@CAMPOS
      GET_ATTRIBUTE DF_FIELD_NAME of IT@N@ARQUIVO IT@CONTADOR to ST@NOME@CAMPO@ENCONTRADO
      IF ST_NOME_CAMPO EQ (TRIM(ST@NOME@CAMPO@ENCONTRADO)) BEGIN
         MOVE IT@CONTADOR     TO FIELDINDEX
         MOVE IT@TOTAL@CAMPOS TO IT@CONTADOR
      END
   LOOP

   MOVE '31/12/' TO ST@DATA@ULTIMA@EXERCICIO
   APPEND ST@DATA@ULTIMA@EXERCICIO ST@EXERCICIO@FINANCEIRO

   MOVE FIELDINDEX TO IT@CAMPO@PROCURADO

   IF FIELDINDEX NE 0 BEGIN
      CLEAR IT@N@ARQUIVO
      MOVE 1 TO FIELDINDEX
      MOVE ST@CODIGO@ENTIDADE       TO |FS0.0&
      MOVE 2 TO FIELDINDEX
      MOVE ST@EXERCICIO@FINANCEIRO  TO |FS0.0&
      MOVE IT@CAMPO@PROCURADO TO FIELDINDEX
      MOVE ST@DATA@ULTIMA@EXERCICIO TO |FS0.0&
      VFIND IT@N@ARQUIVO IT_INDICE 0
      MOVE 1 TO FIELDINDEX
      [ FOUND] INDICATE FOUND AS |FS0.0& EQ ST@CODIGO@ENTIDADE
      MOVE 2 TO FIELDINDEX
      [ FOUND] INDICATE FOUND AS |FS0.0& EQ ST@EXERCICIO@FINANCEIRO
      MOVE IT@CAMPO@PROCURADO TO FIELDINDEX
      [ FOUND]  MOVE |FS0.0&         TO ST@RETORNO
      [~FOUND]  MOVE 'SEM MOVIMENTO' TO ST@RETORNO
   END
   ELSE BEGIN
      MOVE 'MOVIMENTO NAO ENCONTRADO' TO ST@RETORNO
   END

   CLOSE IT@N@ARQUIVO
   FUNCTION_RETURN ST@RETORNO
END_FUNCTION

//--
//-- siafic - verificacao da ultima data de movimento
//--
//-- !1 tabela
//-- !2 data
//-- !3 modulo
//-- !4 label retorno
//--
#COMMAND VERIFICAR_DATA_MOVIMENTO
   #IFDEF ST@RETORNO
   #ELSE
      STRING ST@RETORNO
   #ENDIF
   #IFDEF DT@DATA@OBTIDA
   #ELSE
      DATE DT@DATA@OBTIDA
   #ENDIF
   #IFDEF ST@TABELA
   #ELSE
      STRING ST@TABELA
   #ENDIF
   #IFDEF DT@DATA
   #ELSE
      DATE DT@DATA
   #ENDIF
   #IFDEF ST@MODULO
   #ELSE
      STRING ST@MODULO
   #ENDIF
   #IFDEF IT@PRIMEIRO
   #ELSE
      INTEGER IT@PRIMEIRO
   #ENDIF

   MOVE !1 TO ST@TABELA
   MOVE !2 TO DT@DATA
   MOVE !3 TO ST@MODULO

   OPEN TABELAS
   MOVE '' TO DT@DATA@OBTIDA
   MOVE 0  TO IT@PRIMEIRO

   IF (OBTER_CONFIGURACAO('VERIFICAR_DATA_GERAL',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO)) EQ 'SIM' BEGIN
      CLEAR TABELAS
      REPEAT
         FIND GT TABELAS BY INDEX.1
         [ FOUND] BEGIN
                     MOVE (RETORNA_ULTIMA_DATA(TABELAS.NOME_TABELA, TABELAS.NOME_CAMPO, TABELAS.INDICE)) TO ST@RETORNO
                     IF IT@PRIMEIRO EQ 0 MOVE ST@RETORNO TO DT@DATA@OBTIDA
                     INCREMENT IT@PRIMEIRO
                     IF ST@RETORNO NE 'SEM MOVIMENTO' IF ST@RETORNO GT DT@DATA@OBTIDA MOVE ST@RETORNO TO DT@DATA@OBTIDA
                     INDICATE FOUND TRUE
                  END
      UNTIL [~FOUND]
   END

   IF (OBTER_CONFIGURACAO('VERIFICAR_DATA_MODULO',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO)) EQ 'SIM' BEGIN
      CLEAR TABELAS
      MOVE ST@MODULO TO TABELAS.MODULO
      REPEAT
         FIND GT TABELAS BY INDEX.1
         [ FOUND] INDICATE FOUND AS TABELAS.MODULO EQ ST@MODULO
         [ FOUND] BEGIN
                     MOVE (RETORNA_ULTIMA_DATA(TABELAS.NOME_TABELA, TABELAS.NOME_CAMPO, TABELAS.INDICE)) TO ST@RETORNO
                     IF IT@PRIMEIRO EQ 0 MOVE ST@RETORNO TO DT@DATA@OBTIDA
                     INCREMENT IT@PRIMEIRO
                     IF ST@RETORNO NE 'SEM MOVIMENTO' IF ST@RETORNO GT DT@DATA@OBTIDA MOVE ST@RETORNO TO DT@DATA@OBTIDA
                     INDICATE FOUND TRUE
                  END
      UNTIL [~FOUND]
   END

   IF (OBTER_CONFIGURACAO('VERIFICAR_DATA_MOVIMENTO',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO)) EQ 'SIM' BEGIN
      CLEAR TABELAS
      MOVE ST@TABELA TO TABELAS.NOME_TABELA
      MOVE ST@MODULO TO TABELAS.MODULO
      FIND EQ TABELAS BY INDEX.2
      [ FOUND] INDICATE FOUND AS TABELAS.NOME_TABELA EQ ST@TABELA
      [ FOUND] INDICATE FOUND AS TABELAS.MODULO      EQ ST@MODULO
      [ FOUND] BEGIN
                  MOVE (RETORNA_ULTIMA_DATA(TABELAS.NOME_TABELA, TABELAS.NOME_CAMPO, TABELAS.INDICE)) TO ST@RETORNO
                  IF ST@RETORNO NE 'SEM MOVIMENTO' MOVE ST@RETORNO TO DT@DATA@OBTIDA
               END
   END

   IF DT@DATA@OBTIDA NE '' BEGIN
      IF DT@DATA LT DT@DATA@OBTIDA BEGIN
         ADVERTE 'IMPOSS║VEL MOVIMENTA─▌O. J═ EXISTEM MOVIMENTOS COM DATA POSTERIOR.'
         INDICATE JA_PASSEI! FALSE
         GOTO !4
      END
   END
#ENDCOMMAND

//----nфo permitir movimentar mes j═ encerrado "audesp"
//----para programas que utilizam o mes 13
#COMMAND VER_DATA_ESPECIAL
 #IFDEF ST@DATA
 #ELSE
  STRING ST@DATA 10
 #ENDIF
 #IFDEF ST@MES
 #ELSE
  STRING ST@MES 2
 #ENDIF
 #IFDEF ST@ANO
 #ELSE
  STRING ST@ANO 4
 #ENDIF
 #IFDEF ST@MES@ANTERIOR
 #ELSE
  STRING ST@MES@ANTERIOR 2
 #ENDIF

//---indicador ja-passei utilizado em alguns programas
//---para o cursor nao passar pela data a partir do
//---segundo lancamento

  MOVEALL '' TO ST@DATA ST@MES ST@MES@ANTERIOR ST@ANO
  MOVE !1                 TO ST@DATA
  MOVE (MID(ST@DATA,2,4)) TO ST@MES
  MOVE (MID(ST@DATA,4,7)) TO ST@ANO

  IF !3 EQ 'S' MOVE '13' TO ST@MES

  IF ST@MES NE '01' BEGIN
   CALC (ST@MES - 1) TO ST@MES@ANTERIOR
   COMZEROS ST@MES@ANTERIOR 2
  END

  CLEAR ENCERRA
  MOVE ST@CODIGO@ENTIDADE TO ENCERRA.COD_ENTIDADE
  MOVE ST@ANO             TO ENCERRA.ANO
  MOVE ST@MES             TO ENCERRA.MES
  FIND EQ ENCERRA BY INDEX.1
  [ FOUND] IF ENCERRA.STATUS EQ 'F' BEGIN
            ADVERTE 'M┬S J═ ENCERRADO - IMPOSS║VEL EFETUAR MOVIMENTA─▌O'
            INDICATE JA_PASSEI! FALSE
            GOTO !2
           END
  //--vencimento de liquidacoes pode ter data superior ao do exercicio
  [~FOUND] IF ST@ANO LT PARGERAL.EXERCICIO BEGIN
            ADVERTE 'EXERC║CIO N▌O ENCONTRADO NO ARQUIVO DE ENCERRAMENTO'
            INDICATE JA_PASSEI! FALSE
            GOTO !2
           END

  IF ((ST@ANO EQ PARGERAL.EXERCICIO) AND (PARGERAL.FECHA_MES NE '')) BEGIN
   CLEAR ENCERRA
   MOVE ST@CODIGO@ENTIDADE TO ENCERRA.COD_ENTIDADE
   MOVE PARGERAL.EXERCICIO TO ENCERRA.ANO
   MOVE ST@MES@ANTERIOR    TO ENCERRA.MES
   FIND EQ ENCERRA BY INDEX.1
   [ FOUND] IF ENCERRA.STATUS NE 'F' BEGIN
             ADVERTE 'M┬S ANTERIOR N▌O ENCERRADO - IMPOSS║VEL EFETUAR MOVIMENTA─▌O'
             INDICATE JA_PASSEI! FALSE
             GOTO !2
             END
   END
#ENDCOMMAND

//----nфo permitir movimentar mes j═ encerrado "audesp"
//----retornando indicador sem dar mensagem do mes fechado
//----UTILIZAR SOMENTE EM PESQUISAS QUE CHAMAM OUTRO PROGRAMA
#COMMAND CONSULTA_MES
 #IFDEF ST@DATA
 #ELSE
  STRING ST@DATA 10
 #ENDIF
 #IFDEF ST@MES
 #ELSE
  STRING ST@MES 2
 #ENDIF
 #IFDEF ST@ANO
 #ELSE
  STRING ST@ANO 4
 #ENDIF

//---indicador ja-passei utilizado em alguns programas
//---para o cursor nao passar pela data a partir do
//---segundo lancamento

  INDICATE @FECHADO! FALSE

  MOVEALL '' TO ST@DATA ST@MES ST@ANO
  MOVE !1                 TO ST@DATA
  MOVE (MID(ST@DATA,2,4)) TO ST@MES
  MOVE (MID(ST@DATA,4,7)) TO ST@ANO

  CLEAR ENCERRA
  MOVE ST@CODIGO@ENTIDADE TO ENCERRA.COD_ENTIDADE
  MOVE ST@ANO             TO ENCERRA.ANO
  MOVE ST@MES             TO ENCERRA.MES
  FIND EQ ENCERRA BY INDEX.1
  [ FOUND] IF ((ENCERRA.STATUS EQ 'F') OR (ENCERRA.DEFINITIVO EQ 'F')) BEGIN
            INDICATE @FECHADO! TRUE
            END
#ENDCOMMAND


#COMMAND SYSDATA
 SYSDATE !1
 #IF (!0>1)
    SYSDATE !1 !2 !3 !4
 #ENDIF
 CALC (!1 + 693975) TO !1

 CLEAR MENUUSER
 MOVE ST@USUARIO TO MENUUSER.CODIGO
 FIND EQ MENUUSER BY INDEX.1
 [ FOUND] BEGIN
           IF MENUUSER.DATA_TRAB NE '' MOVE MENUUSER.DATA_TRAB TO !1
          END
#ENDCOMMAND

#COMMAND DATA_DIA
 SYSDATE !1
 #IF (!0>1)
    SYSDATE !1 !2 !3 !4
 #ENDIF
 CALC (!1 + 693975) TO !1
#ENDCOMMAND

//----- COMBRANCOS ---PREENCHER JANELA COM BRANCOS `A ESQUERDA

#COMMAND COMBRANCOS

#IFDEF        ST@BRANCOS
#ELSE
  STRING ST@BRANCOS 255
  INTEGER IT@CONT@BRANCOS
#ENDIF

MOVE '' TO  ST@BRANCOS
FOR IT@CONT@BRANCOS FROM 1 TO 60
  APPEND ST@BRANCOS ' '
LOOP
APPEND ST@BRANCOS !1
RIGHT  ST@BRANCOS TO !1 !2

#ENDCOMMAND

//----- COMZEROS --- PREENCHER JANELA COM ZEROS `A ESQUERDA

#COMMAND COMZEROS

#IFDEF        ST@ZEROS
#ELSE
   STRING ST@ZEROS
#ENDIF

MOVE '000000000000000000000000000000000000000' TO ST@ZEROS
APPEND ST@ZEROS !1
RIGHT  ST@ZEROS TO !1 !2

#ENDCOMMAND

//----- COMZEROS_N --- PREENCHER JANELA COM ZEROS `A ESQUERDA
// Rotina alterada em 02/10/95 por Antonio Teruo Ogura p/ aceitar
// qualquer tipo de campo de informacao

#COMMAND COMZEROS_N

#IFDEF        ST@ZEROS
#ELSE
   STRING ST@ZEROS
#ENDIF

#IFDEF        IT@IND
#ELSE
   INTEGER IT@IND
#ENDIF

#IFDEF        IT@IND1
#ELSE
   INTEGER IT@IND1
#ENDIF

MOVE "" TO ST@ZEROS
MOVEALL !2 TO IT@IND IT@IND1
REPEAT
        IF (MID (!1, 1, IT@IND)) IN "0123456789" BEGIN
                MOVE (OVERSTRIKE ((MID (!1, 1, IT@IND)), ST@ZEROS, IT@IND1));
                                                        TO ST@ZEROS
                DECREMENT IT@IND1
                END
        DECREMENT IT@IND
UNTIL IT@IND EQ 0

FOR IT@IND FROM 1 TO !2
        IF NOT (MID (ST@ZEROS, 1, IT@IND)) IN "0123456789";
                MOVE (OVERSTRIKE ("0", ST@ZEROS, IT@IND)) TO ST@ZEROS
        LOOP

MOVE ST@ZEROS TO !1

#ENDCOMMAND

//----- COMZEROS_FONTE --- fonte de recurso audesp 2 fonte recurso sicom 3

#COMMAND COMZEROS_FONTE

#IFDEF        ST@ZEROS
#ELSE
   STRING ST@ZEROS
#ENDIF

MOVE '000000000000000000000000000000000000000' TO ST@ZEROS
APPEND ST@ZEROS !1

IF ST@TIPO@FONTE EQ 'A' RIGHT  ST@ZEROS TO !1 2
// ELSE                    RIGHT  ST@ZEROS TO !1 3

#ENDCOMMAND

//----- COMVALOR --- TRANSFORMAR CAMPO STRING EM VALOR, ACEITANDO "," OU "."
// Antonio Teruo Ogura - 16/04/96
#COMMAND COMVALOR

#IFDEF        ST@ZEROS
#ELSE
   STRING ST@ZEROS
#ENDIF

#IFDEF        IT@IND
#ELSE
   INTEGER IT@IND
#ENDIF

#IFDEF        IT@IND1
#ELSE
   INTEGER IT@IND1
#ENDIF

#IFDEF        PONTO@
#ELSE
   INDICATOR PONTO@
#ENDIF

#IFDEF        NEGATIVO@
#ELSE
   INDICATOR NEGATIVO@
#ENDIF

MOVE "" TO ST@ZEROS
MOVEALL !2 TO IT@IND IT@IND1
INDICATE PONTO@ FALSE
INDICATE NEGATIVO@ FALSE
REPEAT
        IF (MID (!1, 1, IT@IND)) IN "0123456789" BEGIN
                MOVE (OVERSTRIKE ((MID (!1, 1, IT@IND)), ST@ZEROS, IT@IND1));
                                                        TO ST@ZEROS
                DECREMENT IT@IND1
                END
        IF (MID (!1, 1, IT@IND)) IN ".," BEGIN
                [~PONTO@] BEGIN
                        INDICATE PONTO@ TRUE
                        MOVE (OVERSTRIKE (",", ST@ZEROS, IT@IND1)) TO ST@ZEROS
                        DECREMENT IT@IND1
                        END
                END
        IF (MID (!1, 1, IT@IND)) EQ "-" INDICATE NEGATIVO@ TRUE
        DECREMENT IT@IND
UNTIL IT@IND EQ 0

//FOR IT@IND FROM 1 TO !2
//      IF NOT (MID (ST@ZEROS, 1, IT@IND)) IN "0123456789,";
//              MOVE (OVERSTRIKE ("0", ST@ZEROS, IT@IND)) TO ST@ZEROS
//      LOOP
//[NEGATIVO@] CALC (!1 - (!1 * 2)) TO !1
[NEGATIVO@] MOVE (OVERSTRIKE ("-", ST@ZEROS, IT@IND1)) TO ST@ZEROS
MOVE ST@ZEROS TO !1
#ENDCOMMAND

//----- COMVALOR_EX --- TRANSFORMAR CAMPO STRING EM VALOR, ACEITANDO "," OU "."
// aterado para fornecer o valor com mascara de edicao
// Antonio Teruo Ogura - 30/09/97
// Formato COMVALOR_EX <numero> <tamanho total> <qtde de casas decimais>
#COMMAND COMVALOR_EX

#IFDEF        ST@AUX_EX
#ELSE
   STRING ST@AUX_EX
#ENDIF
#IFDEF        ST@NUM_EX
#ELSE
   STRING ST@NUM_EX
#ENDIF
#IFDEF        IT@IND_EX
#ELSE
   INTEGER IT@IND_EX
#ENDIF
#IFDEF        IT@IND1_EX
#ELSE
   INTEGER IT@IND1_EX
#ENDIF

COMVALOR !1 !2
MOVE "" TO ST@NUM_EX
IF !3 GT 0 BEGIN
        MOVE !1 TO ST@AUX_EX
        POS "," IN ST@AUX_EX
        IF STRMARK EQ 0;
                COMZEROS_N ST@AUX_EX !3
        ELSE;
                MOVE (REMOVE (ST@AUX_EX, 1, STRMARK)) TO ST@AUX_EX
        PAD "" TO ST@NUM_EX !2
        FOR IT@IND_EX FROM 1 TO !3
                IF (MID (ST@AUX_EX, 1, IT@IND_EX)) IN "1234567890";
                        MOVE (OVERSTRIKE ((MID (ST@AUX_EX, 1, IT@IND_EX)), ST@NUM_EX, (!2 - !3 + IT@IND_EX))) TO ST@NUM_EX
                ELSE;
                        MOVE (OVERSTRIKE ("0", ST@NUM_EX, (!2 - !3 + IT@IND_EX))) TO ST@NUM_EX
                LOOP
        MOVE (OVERSTRIKE (",", ST@NUM_EX, (!2 - !3 + 0))) TO ST@NUM_EX
//      MOVE (OVERSTRIKE (",", ST@NUM_EX, (!2 - !3))) TO ST@NUM_EX
        END
POS "," IN !1 TO IT@IND_EX
IF IT@IND_EX GT 0 BEGIN
        DECREMENT IT@IND_EX
        MID !1 TO ST@AUX_EX IT@IND_EX 1
        END
ELSE MOVE !1 TO ST@AUX_EX
REPEAT
        REMOVE " " FROM ST@AUX_EX
UNTIL [~FOUND]
INDICATE FOUND TRUE
POS "" IN ST@AUX_EX
CALC (STRLEN - 1) TO IT@IND_EX
MOVE 1 TO IT@IND1_EX
REPEAT
        IF (((IT@IND1_EX EQ 4) OR (IT@IND1_EX EQ 8) OR (IT@IND1_EX EQ 12) OR (IT@IND1_EX EQ 16) OR (IT@IND1_EX EQ 20) OR (IT@IND1_EX EQ 24) OR (IT@IND1_EX EQ 28)) AND ((MID(ST@AUX_EX, 1, IT@IND_EX)) NE "-") AND ((!2 - !3 - 1) NE IT@IND1_EX)) BEGIN
                MOVE (OVERSTRIKE (".", ST@NUM_EX, (!2 - !3 - IT@IND1_EX))) TO ST@NUM_EX
                INCREMENT IT@IND1_EX
                END
        MOVE (OVERSTRIKE ((MID(ST@AUX_EX, 1, IT@IND_EX)), ST@NUM_EX, (!2 - !3 - IT@IND1_EX))) TO ST@NUM_EX
        INCREMENT IT@IND1_EX
        IF IT@IND_EX LT 1 MOVE 1 TO IT@IND_EX
        DECREMENT IT@IND_EX
UNTIL IT@IND_EX LE 0

MOVE ST@NUM_EX TO !1
#ENDCOMMAND

// ---  ACCEPT_V - ACCEPT PARA VALORES ACEITANDO '.' OU ',' ---
// Formato ACCEPT_V <janela> <tamanho total> <number destino>
#COMMAND ACCEPT_V
#IFDEF          ST@LETRA
#ELSE
   STRING       ST@LETRA 1
#ENDIF
#IFDEF          ST@VERIFICA
#ELSE
   STRING       ST@VERIFICA 18
#ENDIF
#IFDEF          @CONTADOR
#ELSE
   INTEGER      @CONTADOR
#ENDIF
#IFDEF          IT@TRACO
#ELSE
   INTEGER      IT@TRACO
#ENDIF
#IFDEF          IT@PONTO
#ELSE
   INTEGER      IT@PONTO
#ENDIF
#IFDEF          IT@VIRGULA
#ELSE
   INTEGER      IT@VIRGULA
#ENDIF
#IFDEF          IT@NUMERO
#ELSE
   INTEGER      IT@NUMERO
#ENDIF
#IFDEF          IT@POS
#ELSE
   INTEGER      IT@POS
#ENDIF

 MOVENUM !3 TO !1
 COMVALOR !1 !2

 ACCEPT !1 {AUTOCLEAR}

 REPEAT
  REMOVE ' ' FROM !1
 UNTIL [~FOUND]
 INDICATE FOUND TRUE

 MOVEALL 0 TO IT@TRACO IT@PONTO IT@VIRGULA IT@NUMERO
 TRIM !1 TO ST@VERIFICA

 IF (LENGTH(ST@VERIFICA)) GT 14 INDICATE @VALIDO! FALSE
 ELSE BEGIN
       FOR @CONTADOR FROM 1 TO !2
        MID !1 TO ST@LETRA 1 @CONTADOR
        INDICATE @VALIDO! AS ST@LETRA IN '-.,0123456789'
        IF ST@LETRA EQ ''  INDICATE @VALIDO! TRUE
        IF ST@LETRA EQ '-' INCREMENT IT@TRACO
        IF ST@LETRA EQ '.' INCREMENT IT@PONTO
        IF ST@LETRA EQ ',' INCREMENT IT@VIRGULA
        IF ST@LETRA IN '0123456789' INCREMENT IT@NUMERO
        IF IT@NUMERO NE 0 IF ST@LETRA EQ '-' INDICATE @VALIDO! FALSE
        IF ( (IT@TRACO GT 1) OR (IT@PONTO GT 1) OR (IT@VIRGULA GT 1) ) INDICATE @VALIDO! FALSE
        IF IT@PONTO   EQ 1 IF IT@VIRGULA NE 0 INDICATE @VALIDO! FALSE
        IF IT@VIRGULA EQ 1 IF IT@PONTO   NE 0 INDICATE @VALIDO! FALSE
        [~@VALIDO!] MOVE !2 TO @CONTADOR
       LOOP
       [ @VALIDO!] BEGIN
                    REPEAT
                     REPLACE '.' IN !1 WITH ','
                    UNTIL [~FOUND]

                    MOVE '' TO ST@VERIFICA
                    POS ',' IN !1 TO IT@POS
                    IF IT@POS NE 0 BEGIN
                    FOR @CONTADOR FROM 1 TO (IT@POS +2)
                     APPEND ST@VERIFICA (MID(!1,1,@CONTADOR))
                    LOOP
                    MOVE ST@VERIFICA TO !1
                    END

                    INDICATE FOUND TRUE
                    MOVENUM !1 TO !3
                    MOVENUM !3 TO !1
                    COMVALOR_EX !1 !2 2
                   END
      END
 [~@VALIDO!] BEGIN
              ADVERTE 'ENTRADA INDEVIDA PARA O CAMPO'
              MOVE '' TO !1
              MOVE 0  TO !3
             END
#ENDCOMMAND

#COMMAND REPORTC T "BY""DOWN" VFW%LGR "BREAK"""
  #CHECK !1.RECNUM _UVCWGL
  INTEGER RECCOUNT
  #SET P$ 0
  //          MOVEINT 20000 TO LINECOUNT  // start with a full page
  !A [] $82 |CI20000 |VI10
  //          MOVE 0 TO RECCOUNT
  !A [] $82 |CI0 RECCOUNT
  //          BREAKINIT                   // init breakpoints
  !A [] $207
  //          INDICATE FIRSTREC TRUE      // used for subtotals
  #IFDEF FIRSTREC
  #ELSE
    #REPLACE FIRSTREC |!C
  #ENDIF
  !A [] $4028 |CI0 |CI0 FIRSTREC~
  #IFSAME !2 BY
    FIND GE !1 BY !3              // FIND first record
  #ELSE
    FIND LE !1 BY !3
  #ENDIF
  [~FOUND] GOTO END$OF$REPORT
  RPT.LOOP://   INDICATE SELECT TRUE      // default for SELECT
  #IFDEF SELECT
  #ELSE
    #REPLACE SELECT |!C
  #ENDIF
  !A [] $4028 |CI0 |CI0 SELECT~
  //          GOSUB RPT.SELECTION         // go to user selection
  !A [] $42 |CL0
  #FREF RPT.SELECTION !a
  //[NOT SELECT] GOTO RPT.CONT            // test SELECT
  !A [~ SELECT] $41 |CL0
  #FREF RPT.CONT !a
  BREAK$ !5 !6 !7 !8 !9       // set breakpoints
  #SET X$ !p                              // set up to break down
  [NOT FIRSTREC] BREAK$DOWN RPT.SUBTOTAL  // break down for SUBTOTAL
  #SET X$ 0                               // set up to break up
  //          RELATE !1                   // get related records
  !A [] $C4 !1.RECNUM
  BREAK$UP RPT.SUBHEADER      // break up for SUBHEADER
  //          INCREMENT RECCOUNT
  !A [] $083 RECCOUNT |CI0
  //          GOSUB RPT.BODY              // print body
  !A [] $42 |CL0
  #FREF RPT.BODY !a
  //          INDICATE FIRSTREC FALSE     // not first any more
  !A [] $4028 |CI0 |CI0 FIRSTREC
  RPT.CONT:
  #IFSAME !2 BY
    FIND GT !1 BY !3              // FIND next record
  #ELSE
    FIND LT !1 BY !3
  #ENDIF
  //          KEYCHECK                    // check keyboard
  !A [] $46
  //[FOUND NOT KEYPRESS] GOTO RPT.LOOP    // if ok, loop
  !A [FOUND ~ KEYPRESS] $41 RPT.LOOP
  //[FOUND KEYPRESS]  GOSUB RPT.KEYPRESS        // user can disable KEYPRESS
  !A [FOUND KEYPRESS]   $42 |CL0
  #FREF RPT.KEYPRESS !a
  !A [FOUND ~ KEYPRESS] $41 RPT.LOOP
  #SET X$ !p                              // set up for break down
  END.OF.REPORT:
  [~ FIRSTREC]  BREAK$DOWN RPT.SUBTOTAL $X    // break down for last subtotals
  //[~ FIRSTREC]  GOSUB RPT.TOTAL           // print TOTAL
  !A [~ FIRSTREC] $42 |CL0
  #FREF RPT.TOTAL !a
  //[~FIRSTREC]  GOSUB RPT.FOOTER
  !A [] $41 |CL0
  #FREF END$OF$REPORT !a
  NEWPAGE://    GOSUB RPT.HEADER          // new page, print HEADER
  !A [] $42 |CL0
  #FREF RPT.HEADER !a
  #SET X$ 0    // this will reprint the page headers if included //
  [NOT FIRSTREC] BREAK$PRT SUBHEADER      // reprint pages
  //          RETURN                      // end of NEWPAGE
  !A [] $43 |CI0
    //KEYPROC KEY.ESCAPE
    !A [] $040   // ABORT
    #KEYPROC 3 !a
    // KEYPROC KEY.UP
    // KEYPROC KEY.FIELD
    !A [] $288         // BACKFIELD
    #KEYPROC 16 !a
    #KEYPROC 6  !a
    !A [] $043 |CL0    // RETURN
  RPT.SELECTION:                          // selection starts after REPORT
#ENDCOMMAND

//--- COMANDOS DO DF FOR BTRIEVE

// Abort Transaction started with BEGIN_TRANSACTION.
//      Requires /T: option loaded in Btrieve.
#COMMAND ABORT_TRANSACTION .
  !A [] $4C2
#ENDCOMMAND

// Begin a Transaction Tracking
//      Requires /T: option loaded in Btrieve.
#COMMAND BEGIN_TRANSACTION .
  !A [] $4C3
#ENDCOMMAND

// End a Transaction Tracking
//      Requires /T: option loaded in Btrieve.
#COMMAND END_TRANSACTION .
  !A [] $4C4
#ENDCOMMAND

#COMMAND VERIFICA_QTDE_PENDENTES

#IFDEF IT@RECNUM
#ELSE
  INTEGER IT@RECNUM
#ENDIF
  
  MOVE 0 TO !1
  MOVE MENUUSER.RECNUM TO IT@RECNUM

  CLEAR MENUUSER
  MOVE ST@CODIGO@ENTIDADE TO MENUUSER.COD_ENTIDADE
  MOVE 'S'                TO MENUUSER.PENDENTE
  REPEAT
     FIND GT MENUUSER BY INDEX.5
     [ FOUND] INDICATE FOUND AS MENUUSER.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
     [ FOUND] INDICATE FOUND AS MENUUSER.PENDENTE     EQ 'S'
     [ FOUND] INCREMENT !1
  UNTIL [~FOUND]

  CLEAR MENUUSER
  MOVE IT@RECNUM TO MENUUSER.RECNUM
  FIND EQ MENUUSER BY RECNUM
#ENDCOMMAND
                                                                  
#COMMAND VERIFICA_QTDE_ADMIN

#IFDEF IT@RECNUM
#ELSE
  INTEGER IT@RECNUM
#ENDIF
  
  MOVE 0 TO !1
  MOVE MENUUSER.RECNUM TO IT@RECNUM
  
  CLEAR MENUUSER
  MOVE ST@CODIGO@ENTIDADE TO MENUUSER.COD_ENTIDADE
  MOVE 'S'                TO MENUUSER.ADM
  REPEAT
     FIND GT MENUUSER BY INDEX.6
     [ FOUND] INDICATE FOUND AS MENUUSER.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
     [ FOUND] INDICATE FOUND AS MENUUSER.ADM          EQ 'S'
     [ FOUND] IF MENUUSER.HABILITADO EQ 'S' INCREMENT !1
  UNTIL [~FOUND]

  CLEAR MENUUSER
  MOVE IT@RECNUM TO MENUUSER.RECNUM
  FIND EQ MENUUSER BY RECNUM
#ENDCOMMAND

#COMMAND PREPARA_EMAIL

#IFDEF IT@RECNUM
#ELSE
  INTEGER IT@RECNUM
#ENDIF
#IFDEF ST@ORIGEM
#ELSE
  STRING ST@ORIGEM
#ENDIF
#IFDEF ST@DESTINO
#ELSE
  STRING ST@DESTINO 255
#ENDIF
#IFDEF ST@DATA
#ELSE
  STRING ST@DATA
#ENDIF
#IFDEF ST@DIA
#ELSE
  STRING ST@DIA
#ENDIF
#IFDEF ST@MES
#ELSE
  STRING ST@MES
#ENDIF
#IFDEF ST@MES@EXTENSO
#ELSE
  STRING ST@MES@EXTENSO
#ENDIF
#IFDEF ST@ANO
#ELSE
  STRING ST@ANO
#ENDIF
#IFDEF ST@PDF
#ELSE
  STRING ST@PDF
#ENDIF
#IFDEF ST@NOME@EMPRESA
#ELSE
  STRING ST@NOME@EMPRESA 255
#ENDIF
#IFDEF ST@DIRETORIO@ATUAL
#ELSE
  STRING ST@DIRETORIO@ATUAL 255
#ENDIF
#IFDEF ST@COMANDO
#ELSE
  STRING ST@COMANDO 255
#ENDIF

  GET_CURRENT_DIRECTORY TO ST@DIRETORIO@ATUAL
  APPEND ST@DIRETORIO@ATUAL '/'
  
  SYSDATE4 ST@DATA

  MOVE (LEFT(ST@DATA,2))  TO ST@DIA
  MOVE (MID(ST@DATA,2,4)) TO ST@MES
  MOVE (RIGHT(ST@DATA,4)) TO ST@ANO
  
  MONTH ST@MES ST@MES@EXTENSO
  MOVE (TRIM(MENUUSER.CODIGO)) TO ST@PDF
  APPEND ST@DIRETORIO@ATUAL ST@PDF '.txt'
  
  DIRECT_OUTPUT ST@DIRETORIO@ATUAL //ST@PDF

  MOVE 'php ' TO ST@COMANDO

  GET_CURRENT_DIRECTORY TO ST@DESTINO
  
  APPEND ST@COMANDO '/usr/local/bin'
  
  MOVE !2 TO ST@NOME@EMPRESA
  
  WRITELN '[nomecliente] ' (trim(rtrim(OBTER_CONFIGURACAO('prefeitura',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))))
  WRITELN '[estadocliente] ' (trim(rtrim(OBTER_CONFIGURACAO('uf',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))))
  WRITELN '[orgaocliente] ' (trim(rtrim(OBTER_CONFIGURACAO('secretaria',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))))
  WRITELN '[nomeconam] ' (trim(rtrim(MENUUSER.NOME)))
  WRITELN '[rgconam] ' (trim(rtrim(MENUUSER.RG)))
  WRITELN '[cpfconam] ' (trim(rtrim(MENUUSER.CPF)))
  WRITELN '[matriculaconam] ' (trim(rtrim(MENUUSER.MATRICULA)))
  WRITELN '[chaveconam] ' (trim(rtrim(MENUUSER.CODIGO)))
  WRITELN '[numerocontratoconam] ' (trim(rtrim(MENUUSER.CONTRATO)))
  WRITELN '[anocontratoconam] ' (trim(rtrim(MENUUSER.ANO_CONTRATO)))
  WRITELN '[empresacontratoconam] ' (trim(rtrim(ST@NOME@EMPRESA)))
  WRITELN '[diaconam] ' ST@DIA
  WRITELN '[mesconam] ' ST@MES@EXTENSO
  WRITELN '[anoconam] ' ST@ANO
  WRITELN '[local] ' (trim(rtrim(PARGERAL.CIDADE)))
  WRITELN '[imagem] ' (trim(rtrim(ST@DESTINO))) '/imagem/brasao.jpg'

  CLOSE_OUTPUT
  
  APPEND ST@COMANDO '/termo.php -i ' (trim(MENUUSER.CODIGO)) '.txt -o ' (trim(MENUUSER.CODIGO)) '.pdf  &>> /dev/null'
  RUNPROGRAM WAIT ST@COMANDO
  
//   gotoxy 0 0
//   showln ' ' 
//   showln ' usuario.txt e usuario.pdf '
//   showln ' ' 
//   showln ' pdf ' 
//   pause ST@COMANDO
  
  MOVE (trim(MENUUSER.CODIGO)) TO ST@PDF
  APPEND ST@PDF '.pdf'

  ENVIA_EMAIL ST@PDF !1
  
  MOVE (trim(MENUUSER.CODIGO)) TO ST@PDF
  APPEND ST@DIRETORIO@ATUAL ST@PDF '.txt'
  
  ERASEFILE ST@PDF

  MOVE (trim(MENUUSER.CODIGO)) TO ST@PDF
  APPEND ST@PDF '.pdf'
  
  ERASEFILE ST@PDF
#ENDCOMMAND

//--
//-- estudar possibilidade da criacao de arquivo DAT 
//--
FUNCTION OBTER_CONFIGURACAO GLOBAL STRING ST@ITEM@PARAMETRO STRING ST@ENTIDADE@PARAMETRO STRING ST@EXERCICIO@PARAMETRO RETURNS STRING
   LOCAL STRING ST@RESULTADO
   LOCAL STRING ST@COD@ENTIDADE@CONFIG
   LOCAL STRING ST@EXERCICIO@CONFIG
   
   IF ST@VERSAO@SIAFIC EQ 'VERSAO_01' BEGIN
                                       MOVE PARGERAL.COD_ENTIDADE TO ST@COD@ENTIDADE@CONFIG
                                       MOVE PARGERAL.EXERCICIO    TO ST@EXERCICIO@CONFIG
                                      END
   ELSE BEGIN
         MOVE ST@ENTIDADE@PARAMETRO  TO ST@COD@ENTIDADE@CONFIG
         MOVE ST@EXERCICIO@PARAMETRO TO ST@EXERCICIO@CONFIG
        END
   
   UPPERCASE ST@ITEM@PARAMETRO TO ST@ITEM@PARAMETRO
   
//    CLEARXY 0 0
//    SHOWLN ST@VERSAO@SIAFIC
//    SHOWLN ' BUSCA '
//    SHOWLN ST@COD@ENTIDADE@CONFIG
//    SHOWLN ST@EXERCICIO@CONFIG
//    SHOWLN ' PARAMETRO '
//    SHOWLN ST@ENTIDADE@PARAMETRO
//    SHOWLN ST@EXERCICIO@PARAMETRO
//    SHOWLN ' PARGERAL '
//    SHOWLN PARGERAL.COD_ENTIDADE
//    SHOWLN PARGERAL.EXERCICIO
//    PAUSE .
   
   CLEAR CONFIGS
   MOVE ST@COD@ENTIDADE@CONFIG TO CONFIGS.COD_ENTIDADE
   MOVE ST@EXERCICIO@CONFIG    TO CONFIGS.EXERCICIO
   MOVE ST@ITEM@PARAMETRO      TO CONFIGS.CAMPO
   FIND EQ CONFIGS BY INDEX.2
   [~FOUND] CLEAR CONFIGS
   
   MOVE (TRIM(CONFIGS.CONTEUDO)) TO ST@RESULTADO
   
//    CLEARXY 0 0
//    showln ' configs '
//    showln ST@COD@ENTIDADE@CONFIG
//    showln ST@EXERCICIO@CONFIG
//    showln ST@ITEM@PARAMETRO
//    showln ' achou ->'
//    showln configs.conteudo
//    pause .

   FUNCTION_RETURN ST@RESULTADO
END_FUNCTION

// comando envia_email
// Envia email com documento anexo se necessАrio, que serА o primeiro parametro
// o segundo parametro, demonstra o tipo de email que serА encaminhado, podendo ser:
// L - email de liberaГЦo para o administrador do sistema
// S - senha de usuАrio interno a administraГЦo
// E - senha de usuАrio externo a administraГЦo
// T - senha temporАria
// D - desabilitacao de usuario
// X - envia lembrete ao usuario

#COMMAND ENVIA_EMAIL

#IFDEF ST@DESTINO
#ELSE
  STRING ST@DESTINO 255
#ENDIF
#IFDEF ST@CODIGO@OLD
#ELSE
  STRING ST@CODIGO@OLD
#ENDIF
#IFDEF ST@MODULO
#ELSE
  STRING ST@MODULO
#ENDIF

  MOVE (OBTER_CONFIGURACAO('MODULO',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO)) TO ST@MODULO
  
  MOVE '' TO ST@DESTINO
  
//   gotoxy 0 0
//   pause !2
  
  IF 'L' IN !2 BEGIN
    MOVE (TRIM(MENUUSER.CODIGO)) TO ST@DESTINO
    APPEND ST@DESTINO '_email_adm.txt'

    DIRECT_OUTPUT ST@DESTINO

    WRITELN 'Subject: Liberacao -> ' MENUUSER.NOME
    WRITELN ''
    WRITELN 'Sr. Administrador.'
    WRITELN ''
    WRITELN 'Solicito a adesao do novo usuario ao sistema. Seguem informacoes abaixo.'
    WRITELN ''
    WRITELN 'USUARIO  : ' MENUUSER.NOME
    WRITELN 'CPF      : ' MENUUSER.CPF
    WRITELN 'RG       : ' MENUUSER.RG
    IF MENUUSER.CONTRATO EQ '' WRITELN 'MATRICULA: ' MENUUSER.MATRICULA
    ELSE      WRITELN 'NUMERO CONTRATO: ' MENUUSER.CONTRATO '/' MENUUSER.ANO_CONTRATO
    WRITELN ''
    WRITELN ''
    WRITELN ''
    WRITELN 'CHAVE PARA LIBERACAO   : ' MENUUSER.CHAVE
    WRITELN ''
    WRITELN ''
    WRITELN ''
    WRITELN 'Atenciosamente'
    WRITELN ''
    WRITELN 'Sistema - ' ST@MODULO
    WRITELN ''
    WRITELN '' (TRIM(RTRIM(OBTER_CONFIGURACAO('prefeitura',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))))
    WRITELN ''

    CLOSE_OUTPUT

    MOVE (TRIM(MENUUSER.CODIGO)) TO ST@CODIGO@OLD

    CLEAR MENUUSER
    MOVE ST@CODIGO@ENTIDADE TO MENUUSER.COD_ENTIDADE
    MOVE 'S'                TO MENUUSER.ADM
    REPEAT
      FIND GT MENUUSER BY INDEX.6
      [ FOUND] INDICATE FOUND AS MENUUSER.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
      [ FOUND] INDICATE FOUND AS MENUUSER.ADM          EQ 'S'
      [ FOUND] IF MENUUSER.HABILITADO EQ 'S' INDICATE FOUND FALSE
    UNTIL [~FOUND]
 
    MOVE '/usr/sbin/ssmtp ' TO ST@DESTINO
    APPEND ST@DESTINO (TRIM(MENUUSER.EMAIL))' < ' ST@CODIGO@OLD '_email_adm.txt &>> /dev/null'
 
    RUNPROGRAM WAIT ST@DESTINO

    CLEAR MENUUSER
    MOVE ST@CODIGO@OLD TO MENUUSER.CODIGO
    FIND EQ MENUUSER BY INDEX.1

    MOVE ST@CODIGO@OLD TO ST@DESTINO
    APPEND ST@DESTINO '_email_adm.txt'
    
    ERASEFILE ST@DESTINO
  END

  IF 'D' IN !2 BEGIN
    MOVE (TRIM(MENUUSER.CODIGO)) TO ST@DESTINO
    APPEND ST@DESTINO '_email_des.txt'

    DIRECT_OUTPUT ST@DESTINO

    WRITELN 'Subject: Desabilitacao -> ' MENUUSER.NOME
    WRITELN ''
    WRITELN 'Sr. Administrador.'
    WRITELN ''
    WRITELN 'O usuario relacionado abaixo, foi desabilitado do sistema. Seguem informacoes abaixo.'
    WRITELN ''
    WRITELN 'USUARIO  : ' MENUUSER.NOME
    WRITELN 'CPF      : ' MENUUSER.CPF
    WRITELN 'RG       : ' MENUUSER.RG
    WRITELN 'MATRICULA: ' MENUUSER.MATRICULA
    WRITELN ''
    WRITELN ''
    WRITELN ''
    WRITELN 'Atenciosamente'
    WRITELN ''
    WRITELN 'Sistema - ' ST@MODULO
    WRITELN ''
    WRITELN '' (TRIM(RTRIM(OBTER_CONFIGURACAO('prefeitura',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))))
    WRITELN ''

    CLOSE_OUTPUT

    MOVE (TRIM(MENUUSER.CODIGO)) TO ST@CODIGO@OLD

    CLEAR MENUUSER
    MOVE ST@CODIGO@ENTIDADE TO MENUUSER.COD_ENTIDADE
    MOVE 'S'                TO MENUUSER.ADM
    REPEAT
      FIND GT MENUUSER BY INDEX.6
      [ FOUND] INDICATE FOUND AS MENUUSER.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
      [ FOUND] INDICATE FOUND AS MENUUSER.ADM          EQ 'S'
      [ FOUND] IF MENUUSER.HABILITADO EQ 'S' INDICATE FOUND FALSE
    UNTIL [~FOUND]

    MOVE '/usr/sbin/ssmtp ' TO ST@DESTINO
    APPEND ST@DESTINO (TRIM(MENUUSER.EMAIL))' < ' ST@CODIGO@OLD '_email_des.txt &>> /dev/null'
  
    RUNPROGRAM WAIT ST@DESTINO

    CLEAR MENUUSER
    MOVE ST@CODIGO@OLD TO MENUUSER.CODIGO
    FIND EQ MENUUSER BY INDEX.1

    MOVE ST@CODIGO@OLD TO ST@DESTINO
    APPEND ST@DESTINO '_email_des.txt'
    ERASEFILE ST@DESTINO

    MOVE (TRIM(MENUUSER.CODIGO)) TO ST@DESTINO
    APPEND ST@DESTINO '_email_des.txt'

    DIRECT_OUTPUT ST@DESTINO

    WRITELN 'Subject: Desabilitacao -> ' MENUUSER.NOME
    WRITELN ''
    WRITELN 'Sr. Usuario.'
    WRITELN ''
    WRITELN 'Voce acaba de ser desabilitado de utilizar o sistema. Seguem informacoes abaixo.'
    WRITELN ''
    WRITELN 'USUARIO   : ' MENUUSER.NOME
    WRITELN 'CPF       : ' MENUUSER.CPF
    WRITELN 'RG        : ' MENUUSER.RG
    WRITELN 'MATRICULA : ' MENUUSER.MATRICULA
    WRITELN 'PREFEITURA: ' (OBTER_CONFIGURACAO('prefeitura',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))
    WRITELN ''
    WRITELN ''
    WRITELN 'Atenciosamente'
    WRITELN ''
    WRITELN 'Sistema - ' ST@MODULO
    WRITELN ''
    WRITELN '' (TRIM(RTRIM(OBTER_CONFIGURACAO('prefeitura',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))))
    WRITELN ''

    CLOSE_OUTPUT

    MOVE '/usr/sbin/ssmtp ' TO ST@DESTINO
    APPEND ST@DESTINO (TRIM(MENUUSER.EMAIL))' < ' ST@CODIGO@OLD '_email_des.txt &>> /dev/null'
  
    RUNPROGRAM WAIT ST@DESTINO

    MOVE (TRIM(MENUUSER.CODIGO)) TO ST@DESTINO
    APPEND ST@DESTINO '_email_des.txt'
    ERASEFILE ST@DESTINO
  END

  IF 'A' IN !2 BEGIN
    MOVE (TRIM(MENUUSER.CODIGO)) TO ST@DESTINO
    APPEND ST@DESTINO '_email_adm.txt'

    DIRECT_OUTPUT ST@DESTINO

    WRITELN 'Subject: Adulteracao -> ' MENUUSER.NOME
    WRITELN ''
    WRITELN 'Sr. Administrador.'
    WRITELN ''
    WRITELN 'O Usuario ' (TRIM(MENUUSER.NOME)) ', de CPF ' MENUUSER.CPF ' sofreu algum tipo de adulteracao externa.'
    WRITELN ''
    WRITELN 'Com isso, o usuario nao podera acessar o sistema. O Administrador devera enviar uma nova senha temporaria.'
    WRITELN ''
    WRITELN 'Favor comunicar o mesmo.'
    WRITELN ''
    WRITELN 'Atenciosamente'
    WRITELN ''
    WRITELN 'Sistema - ' ST@MODULO
    WRITELN ''
    WRITELN '' (TRIM(RTRIM(OBTER_CONFIGURACAO('prefeitura',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))))
    WRITELN ''

    CLOSE_OUTPUT

    MOVE (TRIM(MENUUSER.CODIGO)) TO ST@CODIGO@OLD

    CLEAR MENUUSER
    MOVE ST@CODIGO@ENTIDADE TO MENUUSER.COD_ENTIDADE
    MOVE 'S'                TO MENUUSER.ADM
    REPEAT
      FIND GT MENUUSER BY INDEX.6
      [ FOUND] INDICATE FOUND AS MENUUSER.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
      [ FOUND] INDICATE FOUND AS MENUUSER.ADM          EQ 'S'
      [ FOUND] IF MENUUSER.HABILITADO EQ 'S' INDICATE FOUND FALSE
    UNTIL [~FOUND]

    MOVE '/usr/sbin/ssmtp ' TO ST@DESTINO
    APPEND ST@DESTINO (TRIM(MENUUSER.EMAIL))' < ' ST@CODIGO@OLD '_email_adm.txt &>> /dev/null'
    
    RUNPROGRAM WAIT ST@DESTINO

    CLEAR MENUUSER
    MOVE ST@CODIGO@OLD TO MENUUSER.CODIGO
    FIND EQ MENUUSER BY INDEX.1

    MOVE ST@CODIGO@OLD TO ST@DESTINO
    APPEND ST@DESTINO '_email_adm.txt'
    ERASEFILE ST@DESTINO
  END

  IF 'S' IN !2 BEGIN
     MOVE (TRIM(MENUUSER.CODIGO)) TO ST@DESTINO
     APPEND ST@DESTINO '_email_usu.txt'

     DIRECT_OUTPUT ST@DESTINO
 
     WRITELN 'Subject: Solicitacao -> ' MENUUSER.NOME
     WRITELN ''
     WRITELN 'Caro Usuario.'
     WRITELN ''
     WRITELN 'Encaminho copia de sua solicitacao ao Administrador. Seguem informacoes abaixo.'
     WRITELN ''
     WRITELN 'USUARIO  : ' MENUUSER.NOME
     WRITELN 'CPF      : ' MENUUSER.CPF
     WRITELN 'RG       : ' MENUUSER.RG
     WRITELN 'MATRICULA: ' MENUUSER.MATRICULA
     WRITELN ''
     WRITELN 'Em anexo, segue copia do documento que devera ser entregue ao administrador com sua assinatura para liberacao do mesmo.'
     WRITELN 'Lembre-se, sem esse documento, sera impossivel o administrador autorizar seu cadastro.'
     WRITELN ''
     WRITELN 'Atenciosamente'
     WRITELN ''
     WRITELN 'Sistema - ' ST@MODULO
     WRITELN ''
     WRITELN '' (TRIM(RTRIM(OBTER_CONFIGURACAO('prefeitura',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))))
     WRITELN ''

     CLOSE_OUTPUT
     
     MOVE (TRIM(MENUUSER.CODIGO)) TO ST@CODIGO@OLD
     
//      MOVE 'uuencode ' TO ST@DESTINO
//      APPEND ST@DESTINO ' ' !1 ' ' !1 ' >> ' (TRIM(MENUUSER.CODIGO)) '_email_usu.txt'
//      RUNPROGRAM WAIT ST@DESTINO

//      MOVE 'mpack -s "Termo de Responsabilidade"' TO ST@DESTINO
//      APPEND ST@DESTINO ' ' !1 ' -o ' !1 'anx.pdf' ' -d ' (TRIM(MENUUSER.CODIGO)) '_email_usu.txt' 
//      RUNPROGRAM WAIT ST@DESTINO
    
     MOVE 'mpack -s "Termo de Responsabilidade"' TO ST@DESTINO
     APPEND ST@DESTINO ' ' !1 ' -d ' (TRIM(MENUUSER.CODIGO)) '_email_usu.txt' ' -o ' !1 'anx.pdf'
     RUNPROGRAM WAIT ST@DESTINO
     
//      gotoxy 0 0
//      showln ' mpack no usuario.pdf '
//      showln st@destino
//      pause .
     
     //ssmtp evaldo@conam.com.br < 10001.pdfanx.pdf teste.txt
     MOVE '/usr/sbin/ssmtp ' TO ST@DESTINO
     APPEND ST@DESTINO (TRIM(MENUUSER.EMAIL))' < ' !1 'anx.pdf ' //ST@CODIGO@OLD '_email_usu.txt' 
     RUNPROGRAM WAIT ST@DESTINO

//      gotoxy 20 0
//      showln ' enviando email '
//      showln st@destino
//      pause .
     
     MOVE (TRIM(MENUUSER.CODIGO)) TO ST@DESTINO
     APPEND ST@DESTINO '_email_usu.txt' 
     ERASEFILE ST@DESTINO
     
     MOVE '' TO ST@DESTINO
     APPEND ST@DESTINO !1 'anx.pdf' 
     ERASEFILE ST@DESTINO
  END

// - envio de lembrete

  IF 'X' IN !2 BEGIN
     MOVE (TRIM(MENUUSER.CODIGO)) TO ST@DESTINO
     APPEND ST@DESTINO '_email_lembrete.txt'
     
     DIRECT_OUTPUT ST@DESTINO

     WRITELN 'Subject: Lembrete -> ' MENUUSER.NOME
     WRITELN ''
     WRITELN 'Caro Usuario.'
     WRITELN ''
     WRITELN 'Conforme solicitado, encaminho lembrete de sua senha.'
     WRITELN ''
     WRITELN 'USUARIO  : ' MENUUSER.NOME
     WRITELN 'CPF      : ' MENUUSER.CPF
     WRITELN 'LEMBRETE : ' MENUUSER.FRASE
     WRITELN ''
     WRITELN 'Caso nao seja o suficiente, escolha a opcao zerar a senha.'
     WRITELN ''
     WRITELN 'Atenciosamente'
     WRITELN ''
     WRITELN 'Sistema - ' ST@MODULO
     WRITELN ''
     WRITELN '' (TRIM(RTRIM(OBTER_CONFIGURACAO('prefeitura',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))))
     WRITELN ''

     CLOSE_OUTPUT

     MOVE '/usr/sbin/ssmtp ' TO ST@DESTINO
     APPEND ST@DESTINO (TRIM(MENUUSER.EMAIL))' < ' (TRIM(MENUUSER.CODIGO)) '_email_lembrete.txt'
     
     RUNPROGRAM WAIT ST@DESTINO
     
     MOVE (TRIM(MENUUSER.CODIGO)) TO ST@DESTINO
     APPEND ST@DESTINO '_email_lembrete.txt'
     ERASEFILE ST@DESTINO
  END

// email com para usuario externo solicitando acesso

  IF 'E' IN !2 BEGIN
     MOVE (TRIM(MENUUSER.CODIGO)) TO ST@DESTINO
     APPEND ST@DESTINO '_email_usu.txt'

     DIRECT_OUTPUT ST@DESTINO

     WRITELN 'Subject: Solicitacao -> ' MENUUSER.NOME
     WRITELN ''
     WRITELN 'Caro Usuario Externo.'
     WRITELN ''
     WRITELN 'Encaminho copia de sua solicitacao ao Administrador. Seguem informacoes abaixo.'
     WRITELN ''
     WRITELN 'USUARIO  : ' MENUUSER.NOME
     WRITELN 'CPF      : ' MENUUSER.CPF
     WRITELN 'RG       : ' MENUUSER.RG
     WRITELN 'NUMERO CONTRATO: ' (TRIM(MENUUSER.CONTRATO)) '/' MENUUSER.ANO_CONTRATO
     WRITELN ''
     WRITELN ''
     WRITELN 'Em anexo, segue copia do documento que devera ser entregue ao administrador com sua assinatura para liberacao do mesmo.'
     WRITELN 'Lembre-se, sem esse documento, sera impossivel o administrador autorizar seu cadastro.'
     WRITELN ''
     WRITELN 'Atenciosamente'
     WRITELN ''
     WRITELN 'Sistema - ' ST@MODULO
     WRITELN ''
     WRITELN '' (TRIM(RTRIM(OBTER_CONFIGURACAO('prefeitura',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))))
     WRITELN ''

     CLOSE_OUTPUT
     
     MOVE (TRIM(MENUUSER.CODIGO)) TO ST@CODIGO@OLD
     
//      MOVE 'uuencode ' TO ST@DESTINO
//      APPEND ST@DESTINO ' ' !1 ' ' !1 ' >> ' (TRIM(MENUUSER.CODIGO)) '_email_usu.txt'
//      RUNPROGRAM WAIT ST@DESTINO

//      MOVE 'mpack -s "Termo de Responsabilidade"' TO ST@DESTINO
//      APPEND ST@DESTINO ' ' !1 ' -o ' !1 'anx.pdf' ' -d ' (TRIM(MENUUSER.CODIGO)) '_email_usu.txt'
//      RUNPROGRAM WAIT ST@DESTINO

     MOVE 'mpack -s "Termo de Responsabilidade"' TO ST@DESTINO
     APPEND ST@DESTINO ' ' !1 ' -d ' (TRIM(MENUUSER.CODIGO)) '_email_usu.txt' ' -o ' !1 'anx.pdf'
     RUNPROGRAM WAIT ST@DESTINO

     MOVE '/usr/sbin/ssmtp ' TO ST@DESTINO
     APPEND ST@DESTINO (TRIM(MENUUSER.EMAIL))' < ' !1 'anx.pdf ' //ST@CODIGO@OLD '_email_usu.txt'
     RUNPROGRAM WAIT ST@DESTINO
     
     MOVE (TRIM(MENUUSER.CODIGO)) TO ST@DESTINO
     APPEND ST@DESTINO '_email_usu.txt'
     ERASEFILE ST@DESTINO
     
     MOVE '' TO ST@DESTINO
     APPEND ST@DESTINO !1 'anx.pdf' 
     ERASEFILE ST@DESTINO
  END

// email com a senha temporaria

  IF 'T' IN !2 BEGIN
    MOVE (TRIM(MENUUSER.CODIGO)) TO ST@DESTINO
    APPEND ST@DESTINO '_email_tmp.txt'

    DIRECT_OUTPUT ST@DESTINO

    WRITELN 'Subject: Senha Temporaria -> ' MENUUSER.NOME
    WRITELN ''
    WRITELN 'Sr. Usuario.'
    WRITELN ''
    WRITELN 'Conforme solicitado, encaminho senha temporaria.'
    WRITELN ''
    WRITELN 'USUARIO  : ' MENUUSER.NOME
    WRITELN 'CPF      : ' MENUUSER.CPF
    WRITELN 'RG       : ' MENUUSER.RG
    WRITELN 'MATRICULA: ' MENUUSER.MATRICULA
    WRITELN ''
    WRITELN ''
    WRITELN 'SENHA TEMPORARIA: ' MENUUSER.SENHA_TEMP
    WRITELN ''
    WRITELN ''
    WRITELN ''
    WRITELN ''
    WRITELN 'Atenciosamente'
    WRITELN ''
    WRITELN 'Sistema - ' ST@MODULO
    WRITELN ''
    WRITELN '' (TRIM(RTRIM(OBTER_CONFIGURACAO('prefeitura',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))))
    WRITELN ''

    CLOSE_OUTPUT

    MOVE '/usr/sbin/ssmtp ' TO ST@DESTINO
    APPEND ST@DESTINO (TRIM(MENUUSER.EMAIL))' < ' (TRIM(MENUUSER.CODIGO)) '_email_tmp.txt'
  
    RUNPROGRAM WAIT ST@DESTINO

    MOVE (TRIM(MENUUSER.CODIGO)) TO ST@DESTINO
    APPEND ST@DESTINO '_email_tmp.txt'
    ERASEFILE ST@DESTINO
  END

// avisar o usuario que ele foi habilitado

  IF 'N' IN !2 BEGIN
    MOVE (TRIM(MENUUSER.CODIGO)) TO ST@DESTINO
    APPEND ST@DESTINO '_email_usu.txt'

    DIRECT_OUTPUT ST@DESTINO

    WRITELN 'Subject: Acesso Liberado -> ' MENUUSER.NOME
    WRITELN ''
    WRITELN 'Sr. Usuario.'
    WRITELN ''
    WRITELN 'Seu acesso foi liberado pelo Administrador.'
    WRITELN ''
    WRITELN ''
    WRITELN ''
    WRITELN 'Atenciosamente'
    WRITELN ''
    WRITELN 'Sistema - ' ST@MODULO
    WRITELN ''
    WRITELN '' (TRIM(RTRIM(OBTER_CONFIGURACAO('prefeitura',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))))
    WRITELN ''

    CLOSE_OUTPUT

    MOVE '/usr/sbin/ssmtp ' TO ST@DESTINO
    APPEND ST@DESTINO (TRIM(MENUUSER.EMAIL))' < ' (TRIM(MENUUSER.CODIGO)) '_email_usu.txt'
  
    RUNPROGRAM WAIT ST@DESTINO

    MOVE (TRIM(MENUUSER.CODIGO)) TO ST@DESTINO
    APPEND ST@DESTINO '_email_usu.txt'
    ERASEFILE ST@DESTINO
  END
  
  IF 'H' IN !2 BEGIN
     MOVE (TRIM(MENUUSER.CODIGO)) TO ST@DESTINO
     APPEND ST@DESTINO '_email_altera_senha.txt'
 
     DIRECT_OUTPUT ST@DESTINO
 
     WRITELN 'Subject: AVISO IMPORTANTE -> ' MENUUSER.NOME
     WRITELN ''
     WRITELN 'Caro Usuario.'
     WRITELN ''
     WRITELN 'Conforme solicitado com uso de sua senha pessoal, encaminho a alteracao de sua senha.'
     WRITELN ''
     WRITELN 'USUARIO  : ' MENUUSER.NOME
     WRITELN 'CPF      : ' MENUUSER.CPF
     WRITELN 'LEMBRETE : ' (TRIM(MENUUSER.FRASE))
     WRITELN ''
     WRITELN 'Esse procedimento foi feito com seu usuario que estava logado no sistema.'
     WRITELN ''
     WRITELN 'Se nao foi voce quem fez esse procedimento, entre em contado com o'
     WRITELN 'ADMINISTRADOR DO SISTEMA.'
     WRITELN ''
     WRITELN 'Atenciosamente'
     WRITELN ''
     WRITELN 'Sistema - ' ST@MODULO
     WRITELN ''
     WRITELN '' (TRIM(RTRIM(OBTER_CONFIGURACAO('prefeitura',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))))
     WRITELN ''
 
     CLOSE_OUTPUT
 
     MOVE '/usr/sbin/ssmtp ' TO ST@DESTINO
     APPEND ST@DESTINO (TRIM(MENUUSER.EMAIL))' < ' (TRIM(MENUUSER.CODIGO)) '_email_altera_senha.txt'
     RUNPROGRAM WAIT ST@DESTINO
 
     MOVE (TRIM(MENUUSER.CODIGO)) TO ST@DESTINO
     APPEND ST@DESTINO '_email_altera_senha.txt'
     ERASEFILE ST@DESTINO
  END
 
  IF 'M' IN !2 BEGIN
     MOVE (TRIM(MENUUSER.CODIGO)) TO ST@DESTINO
     APPEND ST@DESTINO '_email_altera_email.txt'
 
     DIRECT_OUTPUT ST@DESTINO
 
     WRITELN 'Subject: AVISO IMPORTANTE -> ' MENUUSER.NOME
     WRITELN ''
     WRITELN 'Caro Usuario.'
     WRITELN ''
     WRITELN 'Conforme solicitado com uso de sua senha pessoal, encaminho a alteracao de seu email.'
     WRITELN ''
     WRITELN 'USUARIO       : ' MENUUSER.NOME
     WRITELN 'CPF           : ' MENUUSER.CPF
     WRITELN 'EMAIL ANTERIOR: ' MENUUSER.SENHA_TEMP
     WRITELN 'NOVO EMAIL    : ' MENUUSER.EMAIL
     WRITELN ''
     WRITELN 'Esse procedimento foi feito com seu usuario que estava logado no sistema.'
     WRITELN ''
     WRITELN 'Se nao foi voce quem fez esse procedimento, entre em contado com o'
     WRITELN 'ADMINISTRADOR DO SISTEMA.'
     WRITELN ''
     WRITELN 'Atenciosamente'
     WRITELN ''
     WRITELN 'Sistema - ' ST@MODULO
     WRITELN ''
     WRITELN '' (TRIM(RTRIM(OBTER_CONFIGURACAO('prefeitura',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))))
     WRITELN ''
 
     CLOSE_OUTPUT
 
     MOVE '/usr/sbin/ssmtp ' TO ST@DESTINO
     APPEND ST@DESTINO (TRIM(MENUUSER.SENHA_TEMP))' < ' (TRIM(MENUUSER.CODIGO)) '_email_altera_email.txt'
     RUNPROGRAM WAIT ST@DESTINO
 
     MOVE (TRIM(MENUUSER.CODIGO)) TO ST@DESTINO
     APPEND ST@DESTINO '_email_altera_email.txt'
     ERASEFILE ST@DESTINO
  END
#ENDCOMMAND

#COMMAND SUBSTITUI_RTF
// PRIMEIRO PARAMETRO - O QUE DESEJA TROCAR
// SEGUNDO PARAMETRO  - PELO QUE
// TERCEIRO PARAMETRO - ARQUIVO ORIGEM
// QUARTO PARAMETRO   - ARQUIVO DESTINO

#IFDEF ST@SUBSTITUI
#ELSE
   STRING ST@SUBSTITUI 255
#ENDIF

  MOVE '. ./troca.sh' TO ST@SUBSTITUI
  APPEND ST@SUBSTITUI " '" !1 "' '" (TRIM(!2)) "' '" !3 "' '" !4 "'"
  
  RUNPROGRAM WAIT ST@SUBSTITUI
#ENDCOMMAND
                                                                  
//VERIFICA A QUANTIDADE DE VEZES QUE UM CARACTER EXISTE NUMA STRING
//RETORNA VARIAVEL INTEIRA COM A QUANTIDADE ENCONTRADA

FUNCTION QUANTIDADE GLOBAL STRING ST@STRING STRING ST@CARACTER RETURNS INTEGER
   LOCAL INTEGER IT@RESULTADO
   LOCAL INTEGER IT@POSICAO
   
   MOVE 0 TO IT@RESULTADO
   FOR IT@POSICAO FROM 1 TO (LENGTH(ST@STRING))
     IF (MID(ST@STRING,1,IT@POSICAO)) EQ ST@CARACTER INCREMENT IT@RESULTADO
   LOOP

   FUNCTION_RETURN IT@RESULTADO
END_FUNCTION

FUNCTION GERA_CHAVE GLOBAL INTEGER IT@RECNUM RETURNS STRING
   LOCAL STRING ST@NOME@ARQUIVO@CHAVE
   LOCAL STRING ST@NOME@ARQUIVO@SAIDA
   LOCAL STRING ST@CHAVE
   LOCAL STRING ST@DESTINO
   LOCAL STRING ST@DIRETORIO
   
   GET_CURRENT_DIRECTORY TO ST@DIRETORIO
   TRIM ST@DIRETORIO TO ST@DIRETORIO
   
   OPEN MENUUSER
   
   CLEAR MENUUSER
   MOVE IT@RECNUM TO MENUUSER.RECNUM
   FIND EQ MENUUSER BY RECNUM

   MOVE ST@DIRETORIO TO ST@NOME@ARQUIVO@CHAVE
   MOVE ST@DIRETORIO TO ST@NOME@ARQUIVO@SAIDA
   
   APPEND ST@NOME@ARQUIVO@CHAVE '/chave' MENUUSER.RECNUM '.txt'
   APPEND ST@NOME@ARQUIVO@SAIDA '/saida' MENUUSER.RECNUM '.txt'
   
   DIRECT_OUTPUT ST@NOME@ARQUIVO@CHAVE
   WRITE MENUUSER.RECNUM     MENUUSER.CPF            MENUUSER.NOME         MENUUSER.RAMAL
   WRITE MENUUSER.RG         MENUUSER.DATA_NASCTO    MENUUSER.EMAIL        MENUUSER.LOCAL_TRABALHO
   WRITE MENUUSER.MATRICULA  MENUUSER.CONTRATO       MENUUSER.ANO_CONTRATO MENUUSER.FRASE           MENUUSER.PENDENTE
   WRITE MENUUSER.HABILITADO MENUUSER.VALIDADE_SENHA MENUUSER.SENHA        MENUUSER.TRABALHA_FERIAS MENUUSER.TIPO
   CLOSE_OUTPUT ST@NOME@ARQUIVO@CHAVE
   
   MOVE 'md5sum -b ' TO ST@DESTINO
   APPEND ST@DESTINO ST@NOME@ARQUIVO@CHAVE '> ' ST@NOME@ARQUIVO@SAIDA
   RUNPROGRAM WAIT ST@DESTINO

   DIRECT_INPUT ST@NOME@ARQUIVO@SAIDA
   READLN ST@CHAVE
   CLOSE_INPUT ST@NOME@ARQUIVO@SAIDA
   
   MOVE (LEFT(ST@CHAVE,(POS(ST@NOME@ARQUIVO@CHAVE,ST@CHAVE))-3)) TO ST@CHAVE
   
   ERASEFILE ST@NOME@ARQUIVO@CHAVE
   ERASEFILE ST@NOME@ARQUIVO@SAIDA

   FUNCTION_RETURN ST@CHAVE
END_FUNCTION

FUNCTION VALIDAEMAIL GLOBAL STRING ST@EMAIL STRING ST@CONTRATO RETURNS INTEGER
   LOCAL INTEGER IT@MAIL@CORRETO
   LOCAL STRING  ST@DOMINIO
   TRIM ST@EMAIL TO ST@EMAIL

   // verifico se existe o @, nao podendo o mesmo ser no inicio nem no fim
   // da string, e o email tem q ter no minimo 6 caracteres

   MOVE 0 TO IT@MAIL@CORRETO
   IF ((LENGTH(ST@EMAIL) GE 6) AND (QUANTIDADE(ST@EMAIL,"@") EQ 1) AND (LEFT(ST@EMAIL,1) NE "@") AND (RIGHT(ST@EMAIL,1) NE "@")) BEGIN
      // verifico se existe algum dos caracteres invalidos ' " \ ou espaco em branco
      IF ((POS("'",ST@EMAIL) EQ 0) AND (POS('\',ST@EMAIL) EQ 0) AND (POS('"',ST@EMAIL) EQ 0) AND (POS('$',ST@EMAIL) EQ 0) AND (POS(' ',ST@EMAIL) EQ 0)) BEGIN
         MOVE (MID(ST@EMAIL,999,(POS('@',ST@EMAIL)))) TO ST@DOMINIO
         IF (POS('.', ST@DOMINIO) NE 0) BEGIN
            IF ((LENGTH(ST@DOMINIO) GE 3) AND (QUANTIDADE(ST@DOMINIO,'.') GE 1) AND (LEFT(ST@DOMINIO,1) NE '.') AND (RIGHT(ST@DOMINIO,1) NE '.')) BEGIN
               MOVE 1 TO IT@MAIL@CORRETO
            END
         END
         IF (ST@CONTRATO EQ '' AND IT@MAIL@CORRETO EQ 1) BEGIN
           IF (TRIM(OBTER_CONFIGURACAO('EMAIL_OFICIAL',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))) NE '' BEGIN
             IF (TRIM(OBTER_CONFIGURACAO('EMAIL_OFICIAL',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))) NE ST@DOMINIO BEGIN
                MOVE 0 TO IT@MAIL@CORRETO
             END
             ELSE MOVE 1 TO IT@MAIL@CORRETO
           END
         END
      END
   END
   FUNCTION_RETURN IT@MAIL@CORRETO
END_FUNCTION   

//--------------direciona saida dos relatorios .prn---------------------------
//--
#COMMAND OUTFILE_RPT
#IFDEF ST@SAIDA
#ELSE
   STRING ST@SAIDA 255
#ENDIF
#IFDEF ST@NOME
#ELSE
   STRING ST@NOME
#ENDIF
 
 VERSAO
 
 MOVE '' TO ST@SAIDA
 MOVE !1 TO ST@NOME
 
 GET_CURRENT_DIRECTORY TO ST@SAIDA
 TRIM ST@SAIDA TO ST@SAIDA
 TRIM ST@NOME  TO ST@NOME
 
 [ LINUX!] APPEND ST@SAIDA '/' ST@NOME
 [~LINUX!] APPEND ST@SAIDA '\' ST@NOME
 
 LOWERCASE ST@SAIDA
 DIRECT_OUTPUT ST@SAIDA
#ENDCOMMAND

//--ABREREL com gerenciamento de relatorio sem escolha de IMPRESSORA ou GERRELAT vem com parametro
#COMMAND ABREREL_GERRELAT
#IFDEF ST@NOME
#ELSE
   STRING ST@NOME
#ENDIF
#IFDEF ST@HORA
#ELSE
   STRING ST@HORA 2
#ENDIF
#IFDEF ST@MINUTO
#ELSE
   STRING ST@MINUTO 2
#ENDIF
#IFDEF ST@SEGUNDO
#ELSE
   STRING ST@SEGUNDO 2
#ENDIF
#IFDEF ST@NUMERO
#ELSE
   STRING ST@NUMERO
#ENDIF
#IFDEF ST@TEMPO
#ELSE
   STRING ST@TEMPO
#ENDIF
#IFDEF DT@DATA
#ELSE
   DATE DT@DATA
#ENDIF
#IFDEF IT@AUX
#ELSE
   INTEGER IT@AUX
#ENDIF
#IFDEF IT@NUMERO
#ELSE
   INTEGER IT@NUMERO
#ENDIF
#IFDEF ST@TECLA@PUBLICA
#ELSE
   STRING ST@TECLA@PUBLICA 1
#ENDIF   
#IFDEF ST@FILED@LENGTH
#ELSE
   STRING ST@FILED@LENGTH
#ENDIF
#IFDEF ST@CODIGO@PADRAO@PRN
#ELSE
   STRING ST@CODIGO@PADRAO@PRN
#ENDIF

 OPEN ARQ_PRN
 
 MOVE 62 TO PAGEEND //( verify dfconfig )
 
 INDICATE GERRELAT! AS !3 EQ 'T'
 
 //--publicacao no Contas Publicas
 MOVE 0 TO IT@PUBLICA

 CLEAR MENUUSER
 MOVE ST@USUARIO TO MENUUSER.CODIGO
 FIND EQ MENUUSER BY INDEX.1
 
 //--- novo tamanho do arq_prn.codigo 
 MOVEALL '' TO ST@FILED@LENGTH ST@CODIGO@PADRAO@PRN
//  GET_ATTRIBUTE DF_FIELD_LENGTH OF 208 3 TO ST@FILED@LENGTH
 MOVE '5' TO ST@FILED@LENGTH
 MOVE (OBTER_CODIGO_PRN(ST@FILED@LENGTH,PARGERAL.EXERCICIO)) TO ST@CODIGO@PADRAO@PRN
 
 [ @PUBLICA!] BEGIN
               IF MENUUSER.GERA_CP EQ 'S' BEGIN
                                           BEEP

                                           SCREENMODE IT_COR_TITULO ON
                                           GOTOXY 22 02
                                           SHOW '             Deseja publicar relatorio no contas publicas ?! (S/N)          '
                                           SCREENMODE IT_COR_TARJA ON

                                           INKEYCHECK ST@TECLA@PUBLICA IN 'SsNn'
                                           
                                           IF ST@TECLA@PUBLICA IN 'Ss' MOVE 1 TO IT@PUBLICA
                                          END
              END
 
 //--gerrelat!
 [ GERRELAT!] BEGIN
               GOTOXY 22 02
               SHOW '      Enviando sa║da para Gerenciador. Aguarde t┌rmino da gera┤└o  ...      '
               SCREENMODE IT_COR_TARJA ON
               INDICATE ERR FALSE
               ON ERROR GOSUB CHECA_GRAVACAO
               REREAD
                MOVE 1 TO IT@NUMERO
                
                CLEAR ARQ_PRN
                MOVE ST@CODIGO@ENTIDADE      TO ARQ_PRN.COD_ENTIDADE
                MOVE ST@EXERCICIO@FINANCEIRO TO ARQ_PRN.EXERCICIO
                MOVE ST@CODIGO@PADRAO@PRN    TO ARQ_PRN.CODIGO
                FIND LT ARQ_PRN BY INDEX.1
                [ FOUND] INDICATE FOUND AS ARQ_PRN.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
                [ FOUND] INDICATE FOUND AS ARQ_PRN.EXERCICIO    EQ ST@EXERCICIO@FINANCEIRO
                [ FOUND] CALC (ARQ_PRN.CODIGO + 1) TO IT@NUMERO
                MOVE IT@NUMERO TO ST@NUMERO
                TRIM ST@NUMERO TO ST@NUMERO
                SYSDATA DT@DATA ST@HORA ST@MINUTO ST@SEGUNDO
                [~@NOVO_PRN!] COMZEROS ST@NUMERO  5
                [ @NOVO_PRN!] COMZEROS ST@NUMERO 10
                
                MOVE '' TO ST@NOME
                APPEND ST@NOME 'ARQ' ST@CODIGO@ENTIDADE ST@EXERCICIO@FINANCEIRO ST@NUMERO '.PRN'

                //----- GRAVAREL --- ( PARTE DO ABREREL ) ---------

                CLEAR ARQ_PRN
                MOVE ST@CODIGO@ENTIDADE        TO ARQ_PRN.COD_ENTIDADE
                MOVE ST@EXERCICIO@FINANCEIRO   TO ARQ_PRN.EXERCICIO
                MOVE ST@NUMERO                 TO ARQ_PRN.CODIGO
                MOVE !1                        TO ARQ_PRN.DESCRICAO
                MOVE !2                        TO ARQ_PRN.COLUNAS
                MOVE 1                         TO ARQ_PRN.QUANT_COPIAS
                MOVE ST@USUARIO                TO ARQ_PRN.USUARIO
                MOVE '' TO ST@TEMPO
                APPEND ST@TEMPO DT@DATA '-' ST@HORA ':' ST@MINUTO ':' ST@SEGUNDO
                MOVE ST@TEMPO                  TO ARQ_PRN.TEMPO
                SAVERECORD ARQ_PRN
               UNLOCK
               ON ERROR OFF
               
               OUTFILE_RPT ST@NOME
              END
 //--not gerrelat!
 [~GERRELAT!] BEGIN
               OUTFILE
              END
#ENDCOMMAND

//--fechamento de relatorio com gerrelat forcado - utilizar junto com abrerel_gerrelat
#COMMAND FECHAREL_GERRELAT
#IFDEF    ST@JUNCAO
#ELSE
   STRING ST@JUNCAO
#ENDIF
#IFDEF    ST@PAGINAS
#ELSE
   STRING ST@PAGINAS
#ENDIF

 IF RECCOUNT LT 1 BEGIN
                   CLEAR ARQ_PRN
                   MOVE ST@CODIGO@ENTIDADE      TO ARQ_PRN.COD_ENTIDADE
                   MOVE ST@EXERCICIO@FINANCEIRO TO ARQ_PRN.EXERCICIO
                   MOVE ST@NUMERO               TO ARQ_PRN.CODIGO
                   FIND EQ ARQ_PRN BY INDEX.1
                   [ FOUND] BEGIN
                             INDICATE ERR FALSE
                             ON ERROR GOSUB CHECA_GRAVACAO
                             REREAD ARQ_PRN
                             DELETE ARQ_PRN
                             CLEAR  ARQ_PRN
                             MOVE '' TO ST@JUNCAO
                             APPEND ST@JUNCAO 'ARQ' ST@NUMERO '.PRN'
                             CLOSE_OUTPUT
                             UNLOCK
                             ON ERROR OFF
                            END
                   ERASEFILE ST@JUNCAO
                  END
 ELSE BEGIN
       CLEAR ARQ_PRN
       MOVE ST@CODIGO@ENTIDADE      TO ARQ_PRN.COD_ENTIDADE
       MOVE ST@EXERCICIO@FINANCEIRO TO ARQ_PRN.EXERCICIO
       MOVE ST@NUMERO               TO ARQ_PRN.CODIGO
       FIND EQ ARQ_PRN BY INDEX.1
       INDICATE ERR FALSE
       ON ERROR GOSUB CHECA_GRAVACAO
       [ FOUND] REREAD ARQ_PRN
       MOVE (PAGECOUNT-1) TO ST@PAGINAS
       MOVE ST@PAGINAS    TO ARQ_PRN.PAGINAS
       SAVERECORD ARQ_PRN
       UNLOCK
       ON ERROR OFF
      END
#ENDCOMMAND

#COMMAND PONTUA_EXTRA
 REPEAT
  REMOVE '.' FROM !1
 UNTIL [~FOUND]

 IF (LENGTH(!1)) NE 4 APPEND !1 '000'

 INSERT '.' IN !1 AT 2
 INSERT '.' IN !1 AT 4
#ENDCOMMAND

#COMMAND PONTUA_RECEITA
#IFDEF     ST@APPEND@INICIAL
#ELSE
   STRING  ST@APPEND@INICIAL
#ENDIF
#IFDEF     ST@APPEND@FINAL
#ELSE
   STRING  ST@APPEND@FINAL
#ENDIF
#IFDEF     IT@MID
#ELSE
   INTEGER IT@MID
#ENDIF

 REPEAT
  REMOVE '.' FROM !1
 UNTIL [~FOUND]
 
 TRIM !1 TO !1
 
 IF !2 GE '2018' BEGIN
                  MOVE 12             TO IT@MID
                  MOVE '000000000000' TO ST@APPEND@INICIAL
                  MOVE '999999999999' TO ST@APPEND@FINAL
                 END
 ELSE BEGIN
       MOVE 11            TO IT@MID
       MOVE '00000000000' TO ST@APPEND@INICIAL
       MOVE '99999999999' TO ST@APPEND@FINAL
      END
 
 #IF (!0=2)
  APPEND !1 ST@APPEND@INICIAL
  MOVE (MID(!1,IT@MID,1)) TO !1
 #ELSE (!0=3)
  IF (!3='I') BEGIN
               APPEND !1 ST@APPEND@INICIAL
               MOVE (MID(!1,IT@MID,1)) TO !1
              END
  ELSE BEGIN
        APPEND !1 ST@APPEND@FINAL
        MOVE (MID(!1,IT@MID,1)) TO !1
       END
 #ENDIF
 
                 INSERT '.' IN !1 AT 9
 IF !2 GE '2018' INSERT '.' IN !1 AT 8
                 INSERT '.' IN !1 AT 7
                 INSERT '.' IN !1 AT 5
                 INSERT '.' IN !1 AT 4
                 INSERT '.' IN !1 AT 3
                 INSERT '.' IN !1 AT 2
#ENDCOMMAND

#COMMAND PONTUA_RECEITA_SIOPS
 REPEAT
  REMOVE '.' FROM !1
 UNTIL [~FOUND]
 
 TRIM !1 TO !1
 APPEND !1 '00000000000'
 
 IF !2 GE '2016' BEGIN
                  MOVE (MID(!1,10,1)) TO !1
                  
                  INSERT '.' IN !1 AT 9
                  INSERT '.' IN !1 AT 7
                  INSERT '.' IN !1 AT 5
                  INSERT '.' IN !1 AT 3
                  INSERT '.' IN !1 AT 2
                 END
 ELSE BEGIN
       MOVE (MID(!1,11,1)) TO !1
       
       INSERT '.' IN !1 AT 10
       INSERT '.' IN !1 AT 8
       INSERT '.' IN !1 AT 6
       INSERT '.' IN !1 AT 4
       INSERT '.' IN !1 AT 3
       INSERT '.' IN !1 AT 2
      END
#ENDCOMMAND

#COMMAND PONTUA_ECONOMICA_SIOPS
 REPEAT
  REMOVE '.' FROM !1
 UNTIL [~FOUND]
 
 TRIM !1 TO !1
 APPEND !1 '00000000000'
 
 IF !2 GE '2016' BEGIN
                  MOVE (MID(!1,10,1)) TO !1
                  
                  INSERT '.' IN !1 AT 9
                  INSERT '.' IN !1 AT 7
                  INSERT '.' IN !1 AT 5
                  INSERT '.' IN !1 AT 3
                  INSERT '.' IN !1 AT 2
                 END
 ELSE BEGIN
       MOVE (MID(!1,11,1)) TO !1
       
       INSERT '.' IN !1 AT 10
       INSERT '.' IN !1 AT 8
       INSERT '.' IN !1 AT 6
       INSERT '.' IN !1 AT 4
       INSERT '.' IN !1 AT 3
       INSERT '.' IN !1 AT 2
      END
#ENDCOMMAND


#COMMAND PONTUA_RECEITA_SIOPE
 REPEAT
  REMOVE '.' FROM !1
 UNTIL [~FOUND]
 
 TRIM !1 TO !1
 APPEND !1 '00000000000'
 
 MOVE (MID(!1,11,1)) TO !1
 
 IF !2 LE '2020' BEGIN
                  INSERT '.' IN !1 AT 10
                  INSERT '.' IN !1 AT 8
                  INSERT '.' IN !1 AT 6
                  INSERT '.' IN !1 AT 4
                  INSERT '.' IN !1 AT 2
                 END
 ELSE BEGIN
       INSERT '.' IN !1 AT 8
       INSERT '.' IN !1 AT 7
       INSERT '.' IN !1 AT 5
       INSERT '.' IN !1 AT 4
       INSERT '.' IN !1 AT 3
       INSERT '.' IN !1 AT 2
       
       MOVE (MID(!1,14,1)) TO !1
      END
#ENDCOMMAND

#COMMAND PONTUA_ECONOMICA_SIOPE
 REPEAT
  REMOVE '.' FROM !1
 UNTIL [~FOUND]
 
 TRIM !1 TO !1
 APPEND !1 '00000000000'
 
 MOVE (MID(!1,11,1)) TO !1
 
 IF !2 LE '2020' BEGIN
                  INSERT '.' IN !1 AT 10
                  INSERT '.' IN !1 AT 8
                  INSERT '.' IN !1 AT 6
                  INSERT '.' IN !1 AT 4
                  INSERT '.' IN !1 AT 2
                 END
 ELSE BEGIN
       INSERT '.' IN !1 AT 7
       INSERT '.' IN !1 AT 5
       INSERT '.' IN !1 AT 3
       INSERT '.' IN !1 AT 2
       
       MOVE (MID(!1,12,1)) TO !1
      END
#ENDCOMMAND

#COMMAND PONTUA_CONTA_CONTABIL
 REPEAT
  REMOVE '.' FROM !1
 UNTIL [~FOUND]

 TRIM !1 TO !1
 
 #IF (!0=1)
  IF (LENGTH(!1)) EQ  1 APPEND !1 '0000000000'
  IF (LENGTH(!1)) EQ  2 APPEND !1 '000000000'
  IF (LENGTH(!1)) EQ  3 APPEND !1 '00000000'
  IF (LENGTH(!1)) EQ  4 APPEND !1 '0000000'
  IF (LENGTH(!1)) EQ  5 APPEND !1 '000000'
  IF (LENGTH(!1)) EQ  6 APPEND !1 '00000'
  IF (LENGTH(!1)) EQ  7 APPEND !1 '0000'
  IF (LENGTH(!1)) EQ  8 APPEND !1 '000'
  IF (LENGTH(!1)) EQ  9 APPEND !1 '00'
  IF (LENGTH(!1)) EQ 10 APPEND !1 '0'
 #ELSE (!0=2)
  IF (!2='I') BEGIN
               IF (LENGTH(!1)) EQ  1 APPEND !1 '0000000000'
               IF (LENGTH(!1)) EQ  2 APPEND !1 '000000000'
               IF (LENGTH(!1)) EQ  3 APPEND !1 '00000000'
               IF (LENGTH(!1)) EQ  4 APPEND !1 '0000000'
               IF (LENGTH(!1)) EQ  5 APPEND !1 '000000'
               IF (LENGTH(!1)) EQ  6 APPEND !1 '00000'
               IF (LENGTH(!1)) EQ  7 APPEND !1 '0000'
               IF (LENGTH(!1)) EQ  8 APPEND !1 '000'
               IF (LENGTH(!1)) EQ  9 APPEND !1 '00'
               IF (LENGTH(!1)) EQ 10 APPEND !1 '0'
              END
  ELSE BEGIN
        IF (LENGTH(!1)) EQ  1 APPEND !1 '9999999999'
        IF (LENGTH(!1)) EQ  2 APPEND !1 '999999999'
        IF (LENGTH(!1)) EQ  3 APPEND !1 '99999999'
        IF (LENGTH(!1)) EQ  4 APPEND !1 '9999999'
        IF (LENGTH(!1)) EQ  5 APPEND !1 '999999'
        IF (LENGTH(!1)) EQ  6 APPEND !1 '99999'
        IF (LENGTH(!1)) EQ  7 APPEND !1 '9999'
        IF (LENGTH(!1)) EQ  8 APPEND !1 '999'
        IF (LENGTH(!1)) EQ  9 APPEND !1 '99'
        IF (LENGTH(!1)) EQ 10 APPEND !1 '9'
       END
 #ENDIF

 INSERT '.' IN !1 AT 10
 INSERT '.' IN !1 AT 8
 INSERT '.' IN !1 AT 6
 INSERT '.' IN !1 AT 5
 INSERT '.' IN !1 AT 4
 INSERT '.' IN !1 AT 3
 INSERT '.' IN !1 AT 2
#ENDCOMMAND

// Escreve por extenso uma data. Ex: 31/12/2002 em 31 Dez 2002
//       DATA_EXTENSO_LRF <data> <data por extenso>
#COMMAND DATA_EXTENSO_LRF
  #IFDEF ST@D_DIA
  #ELSE
     STRING ST@D_DIA
  #ENDIF
  #IFDEF ST@D_MES
  #ELSE
     STRING ST@D_MES
  #ENDIF
  #IFDEF ST@D_ANO
  #ELSE
     STRING ST@D_ANO
  #ENDIF

        MID !1 TO ST@D_DIA 02 01
        MID !1 TO ST@D_MES 02 04
        MID !1 TO ST@D_ANO 04 07
        MES MONTH ST@D_MES TO ST@D_MES
        APPEND ST@D_DIA ' ' (MID (ST@D_MES, 1, 1)) (LOWERCASE(MID (ST@D_MES, 2, 2))) ' ' ST@D_ANO
        CABEC ST@D_DIA !2
#ENDCOMMAND

#COMMAND VERSAO
  #IFDEF ST@VERSAO
  #ELSE
     STRING ST@VERSAO
  #ENDIF
 GET_CURRENT_DIRECTORY TO ST@VERSAO
 INDICATE LINUX! FALSE
 IF '/' IN ST@VERSAO INDICATE LINUX! TRUE
#ENDCOMMAND

// ---  LETRA - VERIFICA SE FOI DIGITADO LETRA EM UM CAMPO NUMERICO  ---
#COMMAND LETRA
#IFDEF          ST@LETRA
#ELSE
   STRING       ST@LETRA 1
#ENDIF

#IFDEF          @CONTADOR
#ELSE
   INTEGER      @CONTADOR
#ENDIF

 FOR @CONTADOR FROM 1 TO !2
  MID !1 TO ST@LETRA 1 @CONTADOR
  INDICATE @NUMERICO! AS ST@LETRA IN ' 0123456789'
  //IF ST@LETRA EQ '' INDICATE @NUMERICO! TRUE
  [~@NUMERICO!] BEGIN
                 MENSAGEM 182
                 MOVE '' TO !1
                 MOVE !2 TO @CONTADOR
                END
 LOOP
#ENDCOMMAND

// COMMAND MADE IN BRAZIL BY THE RESEARCH DEPT OF INTERCOMP LTDA.
#COMMAND CASE #LR
    goto case$code!R
    #POP S$
    case$next!s:
    #IFDEF lastif$!n
    #ELSE
        #REPLACE lastif$!n |!C
    #ENDIF
    #IFSAME !1 status
        indct$status lastif$!n status !2
    #ELSE
        #IFCLASS !1 "G"
            !A [] $4020 !1 |GB[0] lastif$!n in$glany |3
        #ELSE
            indct$as lastif$!n as !1 !2 !3
        #ENDIF
    #ENDIF
    #PUSH !r
    [ not lastif$!n ] goto case$next!r
    case$code!r:
#ENDCOMMAND

// COMMAND MADE IN BRAZIL BY THE RESEARCH DEPT OF INTERCOMP LTDA.
#COMMAND CASEEND .
    #POP Q$
    #POP S$
    #PUSH !s
    #PUSH !q
    goto cond$end!s
#ENDCOMMAND

// COMMAND MADE IN BRAZIL BY THE RESEARCH DEPT OF INTERCOMP LTDA.
#COMMAND CASEELSE .
    #POP S$
    case$next!s:
    #PUSH !R
#ENDCOMMAND

// ----------- BUSCA_ORGAO ---------- VERIFICA SE ORGAO PODE SER MOVIMENTADO.

#COMMAND BUSCA_ORGAO
#IFDEF ST@ORGAO
#ELSE
 STRING ST@ORGAO  08
#ENDIF

 CLEAR MOVDES
 MOVE ST@CODIGO@ENTIDADE      TO MOVDES.COD_ENTIDADE
 MOVE ST@EXERCICIO@FINANCEIRO TO MOVDES.EXERCICIO
 MOVE !1                      TO MOVDES.ORGAO
 FIND GT MOVDES BY INDEX.2
 [ FOUND] INDICATE FOUND AS MOVDES.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
 [ FOUND] INDICATE FOUND AS MOVDES.EXERCICIO    EQ ST@EXERCICIO@FINANCEIRO
 [ FOUND] INDICATE FOUND AS MOVDES.ORGAO        EQ !1
 [~FOUND] BEGIN
           ADVERTE 'N▌O EXISTE DOTA─▌O OR─AMENT═RIA PARA ESTE ╒RG▌O !!'
           CLEARFORM !1
          END
#ENDCOMMAND

#COMMAND BUSCA_SETOR
#IFDEF ST@SETOR
#ELSE
   STRING ST@SETOR 5
#ENDIF

 CLEAR MENUUSER
 MOVE ST@USUARIO TO MENUUSER.CODIGO
 FIND EQ MENUUSER BY INDEX.1

 IF NOT ST@USUARIO IN 'CONAM-NOSSA' BEGIN
  IF MENUUSER.N_SETOR EQ '' BEGIN
   ADVERTE 'USU═RIO SEM SETOR. FAVOR! ATUALIZE O CADASTRO DE USU═RIOS'
   ABORT
   END
  ELSE BEGIN
   MOVE MENUUSER.N_SETOR TO ST@SETOR
   END
  END
#ENDCOMMAND

#COMMAND OBTEM_ACESSO
#IFDEF ST@DESPESA_INICIAL
#ELSE
   STRING ST@DESPESA_INICIAL 8
#ENDIF
#IFDEF ST@DESPESA_FINAL
#ELSE
   STRING ST@DESPESA_FINAL 8
#ENDIF

 OPEN USERACES
 OPEN PERMISS
 OPEN MOVDES

 CLEAR MENUUSER
 MOVE ST@USUARIO TO MENUUSER.CODIGO
 FIND EQ MENUUSER BY INDEX.1

 CLEAR PERMISS
 CONSTRAINT_SET 1
 CONSTRAIN PERMISS.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
 CONSTRAIN PERMISS.EXERCICIO    EQ ST@EXERCICIO@FINANCEIRO
 CONSTRAIN PERMISS.USUARIO      EQ ST@USUARIO
 CONSTRAIN PERMISS.ACAO         EQ 'DOTACAO'
 CONSTRAINED_FIND FIRST PERMISS BY INDEX.1
 WHILE [FOUND]
  INDICATE ERR FALSE
  ON ERROR GOSUB CHECA_GRAVACAO
  REREAD PERMISS
  DELETE PERMISS
  UNLOCK
  ON ERROR OFF
  CONSTRAINED_FIND NEXT
  END
 CONSTRAINT_SET 1 CLEAR

 [ @SEPARA_SETOR!] BEGIN
                    CLEAR USERACES
                    MOVE ST@CODIGO@ENTIDADE      TO USERACES.COD_ENTIDADE
                    MOVE ST@EXERCICIO@FINANCEIRO TO USERACES.EXERCICIO
                    MOVE MENUUSER.N_SETOR        TO USERACES.N_SETOR
                    REPEAT
                     FIND GT USERACES BY INDEX.1
                     [ FOUND] INDICATE FOUND AS USERACES.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
                     [ FOUND] INDICATE FOUND AS USERACES.EXERCICIO    EQ ST@EXERCICIO@FINANCEIRO
                     [ FOUND] INDICATE FOUND AS USERACES.N_SETOR      EQ MENUUSER.N_SETOR
                     [ FOUND] BEGIN
//--natureza DO = despesa orcamentaria
//--futuramente ser═ implementado novos tipos de movimento
                               IF USERACES.NATUREZA EQ 'DO' BEGIN
                                POSICIONA_DESPESA_INICIAL_FINAL USERACES.CODIGO ST@DESPESA_INICIAL ST@DESPESA_FINAL

                                CLEAR MOVDES
                                CONSTRAINT_SET 1
                                CONSTRAIN MOVDES.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
                                CONSTRAIN MOVDES.EXERCICIO    EQ ST@EXERCICIO@FINANCEIRO
                                IF USERACES.TIPORESTRICAO EQ '+' BEGIN
                                 CONSTRAIN MOVDES.ORGAO   GE ST@DESPESA_INICIAL
                                 CONSTRAIN MOVDES.ORGAO   LE ST@DESPESA_FINAL
                                 END
                                ELSE BEGIN
                                 CONSTRAIN MOVDES AS ((MOVDES.ORGAO LT ST@DESPESA_INICIAL) OR (MOVDES.ORGAO GT ST@DESPESA_FINAL))
                                 END
                                CONSTRAINED_FIND FIRST MOVDES BY INDEX.2
                                WHILE [ FOUND]
                                        INDICATE ERR FALSE
                                        ON ERROR GOSUB CHECA_GRAVACAO
                                        REREAD
                                         CLEAR PERMISS
                                         MOVE ST@CODIGO@ENTIDADE      TO PERMISS.COD_ENTIDADE
                                         MOVE ST@EXERCICIO@FINANCEIRO TO PERMISS.EXERCICIO
                                         MOVE MENUUSER.CODIGO         TO PERMISS.USUARIO
                                         MOVE 'DOTACAO'               TO PERMISS.ACAO
                                         MOVE MOVDES.NUMERO           TO PERMISS.CODIGO
                                         MOVE MOVDES.ORGAO            TO PERMISS.NUMERO
                                         SAVERECORD PERMISS
                                        UNLOCK
                                        ON ERROR OFF
                                        CONSTRAINT_SET 1
                                        CONSTRAINED_FIND NEXT
                                       END
                                CONSTRAINT_SET 1 CLEAR
                                END

                               INDICATE FOUND TRUE
                              END
                    UNTIL [~FOUND]
                   END
 [~@SEPARA_SETOR!] BEGIN
                    CLEAR MOVDES
                    CONSTRAINT_SET 1
                    CONSTRAIN MOVDES.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
                    CONSTRAIN MOVDES.EXERCICIO    EQ ST@EXERCICIO@FINANCEIRO
                    CONSTRAINED_FIND FIRST MOVDES BY INDEX.2
                    WHILE [ FOUND]
                            INDICATE ERR FALSE
                            ON ERROR GOSUB CHECA_GRAVACAO
                            REREAD
                             CLEAR PERMISS
                             MOVE ST@CODIGO@ENTIDADE      TO PERMISS.COD_ENTIDADE
                             MOVE ST@EXERCICIO@FINANCEIRO TO PERMISS.EXERCICIO
                             MOVE MENUUSER.CODIGO         TO PERMISS.USUARIO
                             MOVE 'DOTACAO'               TO PERMISS.ACAO
                             MOVE MOVDES.NUMERO           TO PERMISS.CODIGO
                             MOVE MOVDES.ORGAO            TO PERMISS.NUMERO
                             SAVERECORD PERMISS
                            UNLOCK
                            ON ERROR OFF
                            CONSTRAINT_SET 1
                            CONSTRAINED_FIND NEXT
                           END
                    CONSTRAINT_SET 1 CLEAR
                   END
 CLOSE MOVDES
 INDICATE FOUND TRUE
#ENDCOMMAND

// ALIMENTA RETORNO INICIAL E FINAL COM CONTEUDO VALIDO
//       POSICIONA_DESPESA_INICIAL_FINAL <campo a ser validado> <retorno inicial> <retorno final>
#COMMAND POSICIONA_DESPESA_INICIAL_FINAL
   IF !1 NE '00.00.00' BEGIN
                        MOVE !1 TO !2
                        IF (MID(!1,2,4)) EQ '00' BEGIN
                                                  MOVE (LEFT(!1,3)) TO !3
                                                  APPEND !3 '99.99'
                                                 END
                        ELSE BEGIN
                              IF (RIGHT(!1,2)) EQ '00' BEGIN
                                                        MOVE (LEFT(!1,6)) TO !3
                                                        APPEND !3 '99'
                                                       END
                              ELSE BEGIN
                                    MOVE !1 TO !3
                                   END
                             END
                       END
   ELSE BEGIN
         MOVE !1         TO !2
         MOVE '99.99.99' TO !3
        END
#ENDCOMMAND

// VERIFICA SE O SETOR PODE MOVIMENTAR OU CONSULTAR OS DADOS SELECIONADOS
//       VERIFICA_PERMISSAO <usuario> <acao> <codigo>
#COMMAND VERIFICA_PERMISSAO
 [ @SEPARA_SETOR!] BEGIN
    INDICATE @PERMISSAO_OK! FALSE
    CLEAR PERMISS
    MOVE ST@CODIGO@ENTIDADE      TO PERMISS.COD_ENTIDADE
    MOVE ST@EXERCICIO@FINANCEIRO TO PERMISS.EXERCICIO
    MOVE ST@USUARIO              TO PERMISS.USUARIO
    MOVE !1                      TO PERMISS.ACAO
    MOVE !2                      TO PERMISS.CODIGO
    FIND EQ PERMISS BY INDEX.1
    [ FOUND] INDICATE @PERMISSAO_OK! TRUE
    CLEAR PERMISS
   END
 [~@SEPARA_SETOR!] BEGIN
    INDICATE @PERMISSAO_OK! TRUE
   END
 INDICATE FOUND TRUE
#ENDCOMMAND

// VERIFICA SE O USUARIO POSSUI DADOS PERMITIDOS PARA MOVIMENTAR
//       VERIFICA_DADOS_PERMISSAO <usuario> <acao>
#COMMAND VERIFICA_DADOS_PERMISSAO
 [ @SEPARA_SETOR!] BEGIN
    INDICATE @DADOS_PERMISSAO_OK! FALSE
    CLEAR PERMISS
    MOVE ST@CODIGO@ENTIDADE      TO PERMISS.COD_ENTIDADE
    MOVE ST@EXERCICIO@FINANCEIRO TO PERMISS.EXERCICIO
    MOVE ST@USUARIO              TO PERMISS.USUARIO
    MOVE !1                      TO PERMISS.ACAO
    FIND GT PERMISS BY INDEX.1
    [ FOUND] INDICATE FOUND AS PERMISS.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
    [ FOUND] INDICATE FOUND AS PERMISS.EXERCICIO    EQ ST@EXERCICIO@FINANCEIRO
    [ FOUND] INDICATE FOUND AS PERMISS.USUARIO      EQ ST@USUARIO
    [ FOUND] INDICATE FOUND AS PERMISS.ACAO         EQ !1
    [ FOUND] INDICATE @DADOS_PERMISSAO_OK! TRUE
    CLEAR PERMISS
   END
 [~@SEPARA_SETOR!] BEGIN
    INDICATE @DADOS_PERMISSAO_OK! TRUE
   END
 INDICATE FOUND TRUE
#ENDCOMMAND

// VERIFICA SE O SETOR PODE MOVIMENTAR OU CONSULTAR OS DADOS SELECIONADOS
// SЮ PARA PM DE SOROCABA RESERVA DE DOTACAO (POR ENQUANTO)
//       VERIFICA_PERMISSAO_USUARIO <natureza> <codigo> <label para retorno> <M-movimento C-consulta> <usuario gravado no registro>
#COMMAND VERIFICA_PERMISSAO_USUARIO
#IFDEF ST@ORGAO@INICIAL
#ELSE
   STRING ST@ORGAO@INICIAL 8
#ENDIF
#IFDEF ST@ORGAO@FINAL
#ELSE
   STRING ST@ORGAO@FINAL 8
#ENDIF

 INDICATE @ADM_SETOR! FALSE

 [ @PM_SOROCABA!] BEGIN
                   OPEN USERACES

                   MOVEALL '' TO ST@ORGAO@INICIAL ST@ORGAO@FINAL

                   IF ST@USUARIO EQ 'NOSSA' BEGIN
                                             MOVE '00.00.00' TO ST@ORGAO@INICIAL
                                             MOVE '99.99.99' TO ST@ORGAO@FINAL
                                             INDICATE @ADM_SETOR! TRUE
                                            END
                   ELSE BEGIN
                         CLEAR USERACES
                         MOVE ST@CODIGO@ENTIDADE      TO USERACES.COD_ENTIDADE
                         MOVE ST@EXERCICIO@FINANCEIRO TO USERACES.EXERCICIO
                         MOVE ST@USUARIO              TO USERACES.N_SETOR
                         MOVE !1                      TO USERACES.NATUREZA
                         FIND GT USERACES BY INDEX.1
                         [ FOUND] INDICATE FOUND AS USERACES.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
                         [ FOUND] INDICATE FOUND AS USERACES.EXERCICIO    EQ ST@EXERCICIO@FINANCEIRO
                         [ FOUND] INDICATE FOUND AS USERACES.N_SETOR      EQ ST@USUARIO
                         [ FOUND] INDICATE FOUND AS USERACES.NATUREZA     EQ !1
                         [ FOUND] BEGIN
                                   POSICIONA_DESPESA_INICIAL_FINAL USERACES.CODIGO ST@ORGAO@INICIAL ST@ORGAO@FINAL
                                   INDICATE @ADM_SETOR! AS USERACES.TIPORESTRICAO EQ '2'
                                  END
                        END

                   INDICATE FOUND TRUE

                   [ @ADM_SETOR!] BEGIN
                                                     INDICATE @PERMISSAO_OK! AS !2 GE ST@ORGAO@INICIAL
                                   [ @PERMISSAO_OK!] INDICATE @PERMISSAO_OK! AS !2 LE ST@ORGAO@FINAL
                                   [~@PERMISSAO_OK!] IF !4 EQ 'M' BEGIN
                                                                   ADVERTE 'USU═RIO/SETOR SEM PERMISS▌O PARA MOVIMENTAR DESPESA SELECIONADA'
                                                                   CLEAR USERACES
                                                                   GOTO !3
                                                                  END
                                  END

                   [~@ADM_SETOR!] BEGIN
                                   INDICATE @PERMISSAO_OK! AS !5 EQ ST@USUARIO
                                   [~@PERMISSAO_OK!] BEGIN
                                                                        INDICATE @PERMISSAO_OK! AS !2 GE ST@ORGAO@INICIAL
                                                      [ @PERMISSAO_OK!] INDICATE @PERMISSAO_OK! AS !2 LE ST@ORGAO@FINAL
                                                      [~@PERMISSAO_OK!] IF !4 EQ 'M' BEGIN
                                                                                      ADVERTE 'USU═RIO/SETOR SEM PERMISS▌O PARA MOVIMENTAR DESPESA SELECIONADA'
                                                                                      CLEAR USERACES
                                                                                      GOTO !3
                                                                                     END
                                                     END
                                  END
                  END
 [~@PM_SOROCABA!] INDICATE @PERMISSAO_OK! TRUE
#ENDCOMMAND

// --------------- VERIFICA SE EXERCICIO J╣ FOI ENCERRADO --------------
//---------------- PARA NAO DEIXAR MOVIMENTAR --------------------------
#COMMAND BLOQ_MOVIMENTO
#IFDEF ST@MES@AUX
#ELSE
   STRING ST@MES@AUX 8
#ENDIF
 
#IF (!0=1)
 MOVE !1 TO ST@MES@AUX
#ENDIF
 
 IF PARGERAL.BLOQ_ALTERACOES EQ 'S' BEGIN
                                     IF ST@ACESSO@API EQ '' BEGIN
                                                             ADVERTE 'IMPOSSIVEL MOVIMENTAR, EXERCiCIO JA ENCERRADO.'
                                                             ABORT
                                                            END
                                     ELSE MOVE 'IMPOSSIVEL MOVIMENTAR, EXERCiCIO JA ENCERRADO.' TO ST@RETORNO@API
                                    END
 ELSE BEGIN
       CLEAR ENCERRA
       MOVE ST@CODIGO@ENTIDADE TO ENCERRA.COD_ENTIDADE
       MOVE PARGERAL.EXERCICIO TO ENCERRA.ANO
       MOVE '13'               TO ENCERRA.MES
       FIND EQ ENCERRA BY INDEX.1
       [ FOUND] IF ENCERRA.STATUS EQ 'F' BEGIN
                                          IF ST@ACESSO@API EQ '' BEGIN
                                                                  ADVERTE 'MES 13 JA ENCERRADO, IMPOSSIVEL MOVIMENTAR.'
                                                                  ABORT
                                                                 END
                                          ELSE MOVE 'MES 13 JA ENCERRADO, IMPOSSIVEL MOVIMENTAR.' TO ST@RETORNO@API
                                         END
      END
  IF !0 EQ '1' BEGIN
                CLEAR ENCERRA
                MOVE ST@CODIGO@ENTIDADE TO ENCERRA.COD_ENTIDADE
                MOVE PARGERAL.EXERCICIO TO ENCERRA.ANO
                MOVE ST@MES@AUX         TO ENCERRA.MES
                FIND EQ ENCERRA BY INDEX.1
                [ FOUND] IF ENCERRA.STATUS EQ 'F' BEGIN
                                                   IF ST@ACESSO@API EQ '' BEGIN
                                                                           IF ST@MES@AUX EQ '12' ADVERTE 'MES 12 JA ENCERRADO, IMPOSSIVEL MOVIMENTAR.'
                                                                           ELSE                  ADVERTE 'MES 13 JA ENCERRADO, IMPOSSIVEL MOVIMENTAR.'
                                                                           ABORT
                                                                          END
                                                   ELSE BEGIN
                                                         IF ST@MES@AUX EQ '12' MOVE 'MES 12 JA ENCERRADO, IMPOSSIVEL MOVIMENTAR.' TO ST@RETORNO@API
                                                         ELSE                  MOVE 'MES 13 JA ENCERRADO, IMPOSSIVEL MOVIMENTAR.' TO ST@RETORNO@API
                                                        END
                                                  END
               END
#ENDCOMMAND

//---verifica se mes 12 ja esta fechado e posiciona data de lancamento e/ou mes
//---no mes 13 caso este esteja aberto
//---!2 indicate se ┌ mes ou data !1 campo a ser preenchido
#COMMAND VERIFICA_MES_13
#IFDEF    ST@DATA
#ELSE
   STRING ST@DATA
#ENDIF

 INDICATE @MES_13! FALSE

 [ @AUDESP_SP!] BEGIN
  MOVE '31/12/' TO ST@DATA
  APPEND ST@DATA PARGERAL.EXERCICIO

  INDICATE @MES_13! FALSE
  CLEAR ENCERRA
  MOVE ST@CODIGO@ENTIDADE TO ENCERRA.COD_ENTIDADE
  MOVE PARGERAL.EXERCICIO TO ENCERRA.ANO
  MOVE '12'               TO ENCERRA.MES
  FIND EQ ENCERRA BY INDEX.1
  [~FOUND] BEGIN
            ADVERTE 'PROBLEMAS NO ARQUIVO DE ENCERRAMENTO DE M┬S'
            ABORT
           END
  IF ENCERRA.STATUS EQ 'F' BEGIN
   CLEAR ENCERRA
   MOVE ST@CODIGO@ENTIDADE TO ENCERRA.COD_ENTIDADE
   MOVE PARGERAL.EXERCICIO TO ENCERRA.ANO
   MOVE '13'               TO ENCERRA.MES
   FIND EQ ENCERRA BY INDEX.1
   [~FOUND] BEGIN
             ADVERTE 'PROBLEMAS NO ARQUIVO DE ENCERRAMENTO DE M┬S'
             ABORT
            END

   IF ENCERRA.STATUS EQ 'F' BEGIN
                             INDICATE @MES_13! FALSE
                             ADVERTE 'TODOS OS MESES J═ FORAM ENCERRADOS'
                             ABORT
                            END

   IF !2 EQ 'M' MOVE '12'    TO !1
   ELSE         MOVE ST@DATA TO !1
   INDICATE @MES_13! TRUE
   END
  END
  
 [ @SICOM!] BEGIN
  CLEAR ENCERRA
  MOVE ST@CODIGO@ENTIDADE TO ENCERRA.COD_ENTIDADE
  MOVE PARGERAL.EXERCICIO TO ENCERRA.ANO
  MOVE '12'               TO ENCERRA.MES
  FIND EQ ENCERRA BY INDEX.1
  [~FOUND] BEGIN
            ADVERTE 'PROBLEMAS NO ARQUIVO DE ENCERRAMENTO DE M┬S'
            ABORT
           END

  IF ENCERRA.STATUS EQ 'F' BEGIN
                            ADVERTE 'TODOS OS MESES J═ FORAM ENCERRADOS'
                            ABORT
                           END
  END
#ENDCOMMAND

#COMMAND ACHA_SISTEMA
#IFDEF IT@SISTEMA
#ELSE
  INTEGER IT@SISTEMA
#ENDIF

  CLEAR MENUUSER
  MOVE ST@USUARIO TO MENUUSER.CODIGO
  FIND EQ MENUUSER BY INDEX.1
  MOVE MENUUSER.SISTEMA TO IT@SISTEMA

#ENDCOMMAND

#COMMAND PREPOSICAO_TERMO
#IFDEF ST@PREPOSICAO 2
#ELSE
  STRING ST@PREPOSICAO 2
#ENDIF

 MOVE ''                             TO ST@PREPOSICAO
 MOVE (MID(PARGERAL.AUXILIAR_2,2,4)) TO ST@PREPOSICAO

 IF ((ST@PREPOSICAO NE 'DA') OR (ST@PREPOSICAO NE 'DO')) BEGIN
  IF PARGERAL.COD_ENTIDADE IN '01#02' MOVE 'DA' TO ST@PREPOSICAO
  ELSE                                MOVE 'DO' TO ST@PREPOSICAO
  END

 PRINT ST@PREPOSICAO TO !1
#ENDCOMMAND

//---verifica se a economica ┌ incorporavel ao patrimonio (sistemas integrados - sfpm - sip)
//---!1 categoria economica
//---retorna indicador @inc_auto!
//---
#COMMAND INCORPORA_ECONOMICA
 INDICATE @INC_AUTO! FALSE

               INDICATE @INC_AUTO! AS (LEFT(!1,9)) IN '4.4.90.52-4.4.91.52-4.5.90.52' //--bens moveis
 [~@INC_AUTO!] INDICATE @INC_AUTO! AS (LEFT(!1,9)) IN '4.4.90.51-4.4.91.51-4.4.90.61-4.4.91.61-4.5.90.61-4.5.91.61' //--bens imoveis
 [~@INC_AUTO!] INDICATE @INC_AUTO! AS !1           IN '4.4.90.92.01-4.4.91.92.01-4.4.90.92.02-4.4.91.92.02-4.5.90.92.01-4.5.91.92.01' //--bens moveis e imoveis exercicios anteriores
 [ @INC_AUTO!] INDICATE @INC_AUTO! AS !1           NE '4.4.90.51.93'
#ENDCOMMAND
//----------------------------------------------------------------------------


//--
//--define o que sai nas janelas para assinatura do menuuser o codigo do cpf ou crc
//--
//-- !1 - cpf
//-- !2 - crc
//-- !3 - string ou janela que recebera o conteudo
//-- !4 - caso exista - sera a numero da matricula do operador
//--
#COMMAND DEFINE_DOC_ASSINATURA
 #IFDEF    ST@DOC@ASSINATURA
 #ELSE
    STRING ST@DOC@ASSINATURA
 #ENDIF

 MOVE '' TO ST@DOC@ASSINATURA
 IF !2 NE '' BEGIN
              MOVE !2 TO ST@DOC@ASSINATURA

              REMOVE 'CRC'     FROM ST@DOC@ASSINATURA
              REMOVE 'C.R.C'   FROM ST@DOC@ASSINATURA
              REMOVE 'C.R.C.'  FROM ST@DOC@ASSINATURA
              
              REMOVE 'CRC-'    FROM ST@DOC@ASSINATURA
              REMOVE 'C.R.C-'  FROM ST@DOC@ASSINATURA
              REMOVE 'C.R.C.-' FROM ST@DOC@ASSINATURA
              
              TRIM ST@DOC@ASSINATURA TO ST@DOC@ASSINATURA
              INSERT 'CRC-' IN ST@DOC@ASSINATURA AT 1
             END
 ELSE IF !1 NE '' BEGIN
                   MOVE !1 TO ST@DOC@ASSINATURA
                   INSERT 'CPF-' IN ST@DOC@ASSINATURA AT 1
                  END
 #IF !0=4
  IF !4 NE '' BEGIN
               IF (OBTER_CONFIGURACAO("IMPRIMIR_MATRICULA_NOTAS",ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO)) EQ 'SIM' BEGIN
                MOVE !4 TO ST@DOC@ASSINATURA
                INSERT 'MATRICULA-' IN ST@DOC@ASSINATURA AT 1
               END
              END
 #ENDIF
 TRIM  ST@DOC@ASSINATURA TO ST@DOC@ASSINATURA
 CABEC ST@DOC@ASSINATURA !3
#ENDCOMMAND

//--
//--define o que sai nas janelas para assinatura do menuuser o codigo do cpf ou crc
//--
//-- !1 - cpf
//-- !2 - crc
//-- !3 - string ou janela que recebera o conteudo
//-- !4 - caso exista - sera a numero da matricula do operador
//--
#COMMAND DEFINE_DOC_ASSINATURA_NOTAS
 #IFDEF    ST@DOC@ASSINATURA
 #ELSE
    STRING ST@DOC@ASSINATURA
 #ENDIF

 MOVE '' TO ST@DOC@ASSINATURA
 IF !2 NE '' BEGIN
              MOVE !2 TO ST@DOC@ASSINATURA

              REMOVE 'CRC'     FROM ST@DOC@ASSINATURA
              REMOVE 'C.R.C'   FROM ST@DOC@ASSINATURA
              REMOVE 'C.R.C.'  FROM ST@DOC@ASSINATURA
              
              REMOVE 'CRC-'    FROM ST@DOC@ASSINATURA
              REMOVE 'C.R.C-'  FROM ST@DOC@ASSINATURA
              REMOVE 'C.R.C.-' FROM ST@DOC@ASSINATURA
              
              TRIM ST@DOC@ASSINATURA TO ST@DOC@ASSINATURA
              INSERT 'CRC-' IN ST@DOC@ASSINATURA AT 1
             END
 ELSE IF !1 NE '' BEGIN
                   MOVE !1 TO ST@DOC@ASSINATURA
                   INSERT 'CPF-' IN ST@DOC@ASSINATURA AT 1
                   IF (OBTER_CONFIGURACAO("IMPRIMIR_CPF_NOTAS",ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO)) EQ 'NAO' MOVE '' TO ST@DOC@ASSINATURA
                  END
 #IF !0=4
  IF !4 NE '' BEGIN
               IF (OBTER_CONFIGURACAO("IMPRIMIR_MATRICULA_NOTAS",ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO)) EQ 'SIM' BEGIN
                MOVE !4 TO ST@DOC@ASSINATURA
                INSERT 'MATRICULA-' IN ST@DOC@ASSINATURA AT 1
               END
              END
 #ENDIF
 TRIM  ST@DOC@ASSINATURA TO ST@DOC@ASSINATURA
 CABEC ST@DOC@ASSINATURA !3
#ENDCOMMAND


//--------------bloqueia cadastros com mes 13 fechado-------------------------
//--
#COMMAND VERIFICA_MES_CADASTRO
#IFDEF    ST@ADVERTE
#ELSE
   STRING ST@ADVERTE 255
#ENDIF

  CLEAR ENCERRA
  MOVE ST@CODIGO@ENTIDADE TO ENCERRA.COD_ENTIDADE
  MOVE PARGERAL.EXERCICIO TO ENCERRA.ANO
  MOVE !1                 TO ENCERRA.MES
  FIND EQ ENCERRA BY INDEX.1
  [~FOUND] BEGIN
            ADVERTE 'EXERC║CIO N▌O ENCONTRADO NO ARQUIVO DE ENCERRAMENTO'
            ABORT
           END
  [ FOUND] IF ((ENCERRA.STATUS EQ 'F') OR (ENCERRA.DEFINITIVO EQ 'F')) BEGIN
            MOVE 'M┬S ' TO ST@ADVERTE
            APPEND ST@ADVERTE !1 ' J═ ENCERRADO - IMPOSS║VEL EFETUAR CADASTRO'
            ADVERTE ST@ADVERTE
            ABORT
           END
#ENDCOMMAND
//----------------------------------------------------------------------------

//--------------verifica sistema das entidades--------------------------------

//--

#COMMAND VERIFICA_SISTEMA

#IFDEF DT@DATA
#ELSE
   STRING DT@DATA 8
#ENDIF
#IFDEF ST@HORA
#ELSE
   STRING ST@HORA 2
#ENDIF
#IFDEF ST@MINUTO
#ELSE
   STRING ST@MINUTO 2
#ENDIF
#IFDEF ST@SEGUNDO
#ELSE
   STRING ST@SEGUNDO 2
#ENDIF
#IFDEF ST@NOTA
#ELSE
   STRING ST@NOTA 255
#ENDIF
#IFDEF ST@EXCESSAO
#ELSE
   STRING ST@EXCESSAO 255
#ENDIF
#IFDEF ST@DATA
#ELSE
   STRING ST@DATA
#ENDIF
#IFDEF ST@MES
#ELSE
   STRING ST@MES
#ENDIF
#IFDEF ST@AUX
#ELSE
 STRING ST@AUX
#ENDIF
#IFDEF ST@DATA_AUX
#ELSE
 STRING ST@DATA_AUX
#ENDIF

 IF (((!1 EQ '01') AND (!2 EQ '00')) OR;
     ((!1 EQ '02') AND (!2 EQ '02'))) BEGIN
     BLANKFORM IMPRIME_NOTA

     SYSDATA DT@DATA ST@HORA ST@MINUTO ST@SEGUNDO

     COMZEROS ST@HORA 2
     COMZEROS ST@MINUTO 2
     COMZEROS ST@SEGUNDO 2

     MOVE DT@DATA TO ST@DATA
     MOVE (MID(ST@DATA,2,4)) TO ST@MES
     MES MONTH ST@MES TO ST@AUX
     MOVE (LEFT(ST@DATA,3))  TO ST@DATA_AUX
     APPEND ST@DATA_AUX (LEFT(ST@AUX,3)) (MID(ST@DATA,5,6))

     MOVE 'FONTE:CN-SIFPM - Sistema Integrado de Financas Publicas Municipais, Unidade responsavel- CONTABILIDADE, Data da emissao '  TO ST@NOTA
     APPEND ST@NOTA ST@DATA_AUX ' e hora de emissao ' ST@HORA ':' ST@MINUTO
//      PRINT ST@NOTA TO IMPRIME_NOTA.1
//      OUTPUT IMPRIME_NOTA
     WRITELN (TRIM(ST@NOTA))

     IF (!1 EQ '01') BEGIN
      CLEAR ENTIDADE
      CONSTRAINT_SET 1
      CONSTRAIN ENTIDADE.EXERCICIO EQ ST@EXERCICIO@FINANCEIRO
      CONSTRAIN ENTIDADE.CN_SIFPM  EQ ' '
      CONSTRAINED_FIND FIRST ENTIDADE BY INDEX.1
      WHILE [FOUND]
       IF ENTIDADE.SISTEMA NE ' ' BEGIN
        BLANKFORM IMPRIME_NOTA
        MOVE 'Os dados da entidade ' TO ST@EXCESSAO
        APPEND ST@EXCESSAO ENTIDADE.DESCRICAO ' foram extraidos do sistema ' ENTIDADE.SISTEMA
//         PRINT ST@EXCESSAO TO IMPRIME_NOTA.1
//         OUTPUT IMPRIME_NOTA
        WRITELN (TRIM(ST@EXCESSAO))
       END
       CONSTRAINED_FIND NEXT
       END
      CONSTRAINT_SET 1 CLEAR
      END
     END
#ENDCOMMAND

#COMMAND BUSCA_PROGRAMA
#IFDEF    ST@VER@EXERCICIO
#ELSE
 STRING ST@VER@EXERCICIO 4
#ENDIF
#IFDEF    ST@NOME@PROGRAMA 8
#ELSE
 STRING ST@NOME@PROGRAMA
#ENDIF
#IFDEF    ST@CHAMA@PROGRAMA
#ELSE
 STRING ST@CHAMA@PROGRAMA 8
#ENDIF
#IFDEF    ST@DESTINO@PROGRAMA
#ELSE
  STRING ST@DESTINO@PROGRAMA 255
#ENDIF
 MOVEALL '' TO ST@DESTINO@PROGRAMA ST@NOME@PROGRAMA
 MOVE PARGERAL.EXERCICIO TO ST@VER@EXERCICIO

 IF !2 NE !1 BEGIN
  IF !2 NE '' MOVE !2 TO ST@CHAMA@PROGRAMA
  ELSE        MOVE !1 TO ST@CHAMA@PROGRAMA

  MOVE ST@CHAMA@PROGRAMA  TO ST@DESTINO@PROGRAMA

  MOVE !2 TO ST@NOME@PROGRAMA

  REPEAT
   REPLACE ' ' IN ST@PREFEITURA WITH '@'
  UNTIL [~FOUND]

  APPEND ST@DESTINO@PROGRAMA ' ' ST@PREFEITURA ' ' ST@USUARIO ' ' ST@OPCAO ' ' ST@NOME@PROGRAMA ' ' ST@CODIGO@ENTIDADE ' ' ST@EXERCICIO@FINANCEIRO
  CHAIN WAIT ST@DESTINO@PROGRAMA EXPORT_ONLY
  MOVE 0 TO CURRENT_IMAGE
  ABORT
 END
#ENDCOMMAND

//----------------------------------------------------------------------------
//---------------------- verifica dados bancarios ----------------------------
//--
// VERIFICA SE O FORNECEDOR POSSUI DADOS BANCARIOS VALIDOS
//       VERIFICA_DADOS_BCO <fornecedor> <conta bancaria> <cta favorecido>
#COMMAND VERIFICA_DADOS_BCO
#IFDEF ST@DADOS@BCO@BANCO
#ELSE
   STRING ST@DADOS@BCO@BANCO 4
#ENDIF
#IFDEF ST@DADOS@BCO@AGENCIA
#ELSE
   STRING ST@DADOS@BCO@AGENCIA 6
#ENDIF
#IFDEF ST@DADOS@BCO@AGENCIA@DV
#ELSE
   STRING ST@DADOS@BCO@AGENCIA@DV 1
#ENDIF
#IFDEF ST@DADOS@BCO@OPERACAO
#ELSE
   STRING ST@DADOS@BCO@OPERACAO 4
#ENDIF
#IFDEF ST@DADOS@BCO@CONTA
#ELSE
   STRING ST@DADOS@BCO@CONTA 18
#ENDIF
#IFDEF ST@DADOS@BCO@CONTA@DV
#ELSE
   STRING ST@DADOS@BCO@CONTA@DV 2
#ENDIF
#IFDEF ST@DADOS@BCO@CPF
#ELSE
   STRING ST@DADOS@BCO@CPF 18
#ENDIF
#IFDEF ST@DADOS@BCO@LIMPA
#ELSE
   STRING ST@DADOS@BCO@LIMPA 21
#ENDIF
#IFDEF ST@DADOS@BCO@AUX
#ELSE
   STRING ST@DADOS@BCO@AUX 21
#ENDIF
#IFDEF IT@DADOS@BCO
#ELSE
   INTEGER IT@DADOS@BCO
#ENDIF
#IFDEF ST@CODIGO@FORN
#ELSE
   STRING ST@CODIGO@FORN 5
#ENDIF
#IFDEF ST@CODIGO@BCO
#ELSE
   STRING ST@CODIGO@BCO 4
#ENDIF
#IFDEF ST@SEQ@FORN
#ELSE
   STRING ST@SEQ@FORN 2
#ENDIF
#IFDEF ST@TIPO@DADOS
#ELSE
   STRING ST@TIPO@DADOS 1
#ENDIF
#IFDEF ST@CTFORNEC
#ELSE
  STRING ST@CTFORNEC 10
#ENDIF
#IFDEF ST@DADOS@BCO@AGENCIA@COMP
#ELSE
  STRING ST@DADOS@BCO@AGENCIA@COMP 6
#ENDIF
#IFDEF ST@DADOS@BCO@CONTA@COMP
#ELSE
  STRING ST@DADOS@BCO@CONTA@COMP 21
#ENDIF
#IFDEF IT@POS@BCO
#ELSE
   INTEGER IT@POS@BCO
#ENDIF
#IFDEF IT@POS@AG
#ELSE
   INTEGER IT@POS@AG
#ENDIF
#IFDEF IT@POSICAO@BCO
#ELSE
   INTEGER IT@POSICAO@BCO
#ENDIF
 OPEN FORNECED
 OPEN CONTBANC
 OPEN CTFORNEC

 MOVE !1 TO ST@CODIGO@FORN
 MOVE !3 TO ST@SEQ@FORN
 MOVE !2 TO ST@CODIGO@BCO
 MOVE !4 TO ST@TIPO@DADOS
 MOVE !5 TO IT@DADOS@BCO

 MOVE IT@DADOS@BCO TO ST@CTFORNEC
 COMZEROS ST@CTFORNEC 10
 
 MOVEALL 0  TO IT@DADOS@BCO IT@POS@BCO IT@POS@AG
 
 MOVEALL '' TO ST@DADOS@BCO@BANCO ST@DADOS@BCO@AGENCIA ST@DADOS@BCO@CONTA ST@DADOS@BCO@CPF ST@DADOS@BCO@AGENCIA@COMP ST@DADOS@BCO@CONTA@COMP

 IF ST@CODIGO@FORN NE '' BEGIN
  CLEAR FORNECED
  MOVE ST@CODIGO@ENTIDADE TO FORNECED.COD_ENTIDADE
  MOVE ST@CODIGO@FORN     TO FORNECED.CODIGO
  MOVE ST@SEQ@FORN        TO FORNECED.SEQUENCIA
  FIND EQ FORNECED BY INDEX.1
  
  IF ST@CTFORNEC NE '0000000000' BEGIN
   //---- devido a novo cadastro de contas de favorecido, verificar arquivo ctfornec ----
   CLEAR CTFORNEC
   MOVE ST@CODIGO@ENTIDADE      TO CTFORNEC.COD_ENTIDADE
   MOVE ST@EXERCICIO@FINANCEIRO TO CTFORNEC.EXERCICIO
   MOVE ST@CTFORNEC             TO CTFORNEC.COD_CTFORNEC
   FIND EQ CTFORNEC BY INDEX.1
   [ FOUND] INDICATE @FAVORECIDO! AS CTFORNEC.N_FORNECEDOR EQ FORNECED.CODIGO
   
   // ----- cpf do fornecedor -----
   MOVE CTFORNEC.CPF_CNPJ  TO ST@DADOS@BCO@CPF
   TRIM ST@DADOS@BCO@CPF   TO ST@DADOS@BCO@CPF
   
   // ----- banco do fornecedor -----
   MOVEALL '' TO ST@DADOS@BCO@LIMPA ST@DADOS@BCO@AUX
   MOVE CTFORNEC.N_BANCO   TO ST@DADOS@BCO@LIMPA
   FOR IT@DADOS@BCO FROM 1 TO 4
    IF (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO)) IN '0123456789' APPEND ST@DADOS@BCO@AUX (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO))
   LOOP
   TRIM ST@DADOS@BCO@AUX   TO ST@DADOS@BCO@AUX
   COMZEROS ST@DADOS@BCO@AUX 4
   MOVE ST@DADOS@BCO@AUX   TO ST@DADOS@BCO@BANCO
   
   // ----- agencia do fornecedor -----
   MOVEALL '' TO ST@DADOS@BCO@LIMPA ST@DADOS@BCO@AUX ST@DADOS@BCO@AGENCIA@COMP
   MOVE CTFORNEC.N_AGENCIA TO ST@DADOS@BCO@LIMPA
   MOVE 6 TO IT@POS@AG
   IF ST@TIPO@DADOS EQ 'D' BEGIN
    POS '-' IN ST@DADOS@BCO@LIMPA TO IT@POSICAO@BCO
    CALC (IT@POSICAO@BCO +1)      TO IT@POS@BCO  
    IF (MID(ST@DADOS@BCO@LIMPA,1,IT@POS@BCO)) EQ '' MOVE 5 TO IT@POS@AG
   END 
   FOR IT@DADOS@BCO FROM 1 TO IT@POS@AG
    IF (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO)) IN 'xX0123456789' APPEND ST@DADOS@BCO@AUX (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO))
   LOOP
   TRIM ST@DADOS@BCO@AUX  TO ST@DADOS@BCO@AUX
   COMZEROS ST@DADOS@BCO@AUX IT@POS@AG
   IF IT@POS@AG EQ '5' BEGIN 
    COMZEROS ST@DADOS@BCO@AUX 5 
    APPEND ST@DADOS@BCO@AUX (PAD(' ',1))
   END
   MOVE (MID(ST@DADOS@BCO@AUX,4,2)) TO ST@DADOS@BCO@AGENCIA
   MOVE (MID(ST@DADOS@BCO@AUX,1,6)) TO ST@DADOS@BCO@AGENCIA@DV

   // ----- conta corrente do fornecedor -----
   MOVEALL '' TO ST@DADOS@BCO@LIMPA ST@DADOS@BCO@AUX ST@DADOS@BCO@CONTA@COMP
   MOVE (TRIM(CTFORNEC.C_CORRENTE)) TO ST@DADOS@BCO@LIMPA
   TRIM ST@DADOS@BCO@LIMPA  TO ST@DADOS@BCO@LIMPA
   COMZEROS ST@DADOS@BCO@LIMPA 13
   
   MOVEALL 0  TO IT@POS@BCO IT@POSICAO@BCO
   POS '-' IN ST@DADOS@BCO@LIMPA    TO IT@POSICAO@BCO
   IF ((IT@POSICAO@BCO GT 0) AND (IT@POSICAO@BCO LE '5')) BEGIN
    REPLACE '-' IN ST@DADOS@BCO@LIMPA WITH ''
    POS '-' IN ST@DADOS@BCO@LIMPA    TO IT@POSICAO@BCO
   END 
   IF IT@POSICAO@BCO EQ 0 MOVE '14' TO IT@POSICAO@BCO
   CALC (IT@POSICAO@BCO -1)         TO IT@POSICAO@BCO
   CALC (IT@POSICAO@BCO +2)         TO IT@POS@BCO
   
   FOR IT@DADOS@BCO FROM 1 TO IT@POSICAO@BCO
    IF (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO)) IN 'xX0123456789' APPEND ST@DADOS@BCO@AUX (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO))
   LOOP
   TRIM ST@DADOS@BCO@AUX   TO ST@DADOS@BCO@AUX
   MOVE 0                  TO IT@DADOS@BCO
   LENGTH ST@DADOS@BCO@AUX TO IT@DADOS@BCO
   
   IF PARGERAL.EXERCICIO GE '2021' BEGIN
         IF CTFORNEC.N_BANCO EQ '0399' MOVE (MID(ST@DADOS@BCO@LIMPA,2,IT@POS@BCO)) TO ST@DADOS@BCO@CONTA@DV
    ELSE IF CTFORNEC.N_BANCO EQ '0041' MOVE (MID(ST@DADOS@BCO@LIMPA,2,IT@POS@BCO)) TO ST@DADOS@BCO@CONTA@DV
    ELSE                               MOVE (MID(ST@DADOS@BCO@LIMPA,1,IT@POS@BCO)) TO ST@DADOS@BCO@CONTA@DV
   
    COMZEROS ST@DADOS@BCO@AUX IT@POSICAO@BCO
    MOVE ST@DADOS@BCO@AUX  TO ST@DADOS@BCO@CONTA
    COMZEROS ST@DADOS@BCO@CONTA 12
   END
   ELSE BEGIN
    IF CTFORNEC.N_BANCO EQ '0399' BEGIN
     IF IT@DADOS@BCO EQ 15 BEGIN
      MOVE (RIGHT(ST@DADOS@BCO@AUX,1)) TO ST@DADOS@BCO@CONTA@DV
      MOVE (MID(ST@DADOS@BCO@AUX,8,8)) TO ST@DADOS@BCO@CONTA
      MOVE (MID(ST@DADOS@BCO@AUX,4,4)) TO ST@DADOS@BCO@OPERACAO
     END
     ELSE BEGIN
      MOVE (RIGHT(ST@DADOS@BCO@AUX,2)) TO ST@DADOS@BCO@CONTA@DV
      MOVE (MID(ST@DADOS@BCO@AUX,8,7)) TO ST@DADOS@BCO@CONTA
      MOVE (MID(ST@DADOS@BCO@AUX,4,3)) TO ST@DADOS@BCO@OPERACAO
     END
    END
    ELSE BEGIN
     MOVE (RIGHT(ST@DADOS@BCO@AUX,1))  TO ST@DADOS@BCO@CONTA@DV
     MOVE (MID(ST@DADOS@BCO@AUX,8,8))  TO ST@DADOS@BCO@CONTA
     MOVE (MID(ST@DADOS@BCO@AUX,4,4))  TO ST@DADOS@BCO@OPERACAO
    END
   END 
  END
  ELSE BEGIN
   // ----- cpf do fornecedor -----
   IF ST@TIPO@DADOS EQ 'B' MOVE FORNECED.CGC_CPF_BM TO ST@DADOS@BCO@CPF
   IF ST@TIPO@DADOS EQ 'C' MOVE FORNECED.CGC_CPF_BM TO ST@DADOS@BCO@CPF
   TRIM ST@DADOS@BCO@CPF   TO ST@DADOS@BCO@CPF
   IF ST@DADOS@BCO@CPF EQ '' MOVE FORNECED.C_G_C    TO ST@DADOS@BCO@CPF
   
   // ----- banco do fornecedor -----
   MOVEALL '' TO ST@DADOS@BCO@LIMPA ST@DADOS@BCO@AUX
   MOVE FORNECED.N_BANCO   TO ST@DADOS@BCO@LIMPA
   FOR IT@DADOS@BCO FROM 1 TO 4
    IF (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO)) IN '0123456789' APPEND ST@DADOS@BCO@AUX (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO))
   LOOP
   TRIM ST@DADOS@BCO@AUX   TO ST@DADOS@BCO@AUX
   COMZEROS ST@DADOS@BCO@AUX 4
   MOVE ST@DADOS@BCO@AUX   TO ST@DADOS@BCO@BANCO
   
   // ----- agencia do fornecedor -----
   MOVEALL '' TO ST@DADOS@BCO@LIMPA ST@DADOS@BCO@AUX ST@DADOS@BCO@AGENCIA@COMP
   MOVE FORNECED.N_AGENCIA TO ST@DADOS@BCO@LIMPA
   MOVE 6 TO IT@POS@AG
   IF ST@TIPO@DADOS EQ 'D' BEGIN
    POS '-' IN ST@DADOS@BCO@LIMPA TO IT@POSICAO@BCO
    CALC (IT@POSICAO@BCO +1)      TO IT@POS@BCO  
    IF (MID(ST@DADOS@BCO@LIMPA,1,IT@POS@BCO)) EQ '' MOVE 5 TO IT@POS@AG
   END 
   FOR IT@DADOS@BCO FROM 1 TO IT@POS@AG
    IF (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO)) IN 'xX0123456789' APPEND ST@DADOS@BCO@AUX (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO))
   LOOP
   TRIM ST@DADOS@BCO@AUX  TO ST@DADOS@BCO@AUX
   COMZEROS ST@DADOS@BCO@AUX IT@POS@AG
   IF IT@POS@AG EQ '5' BEGIN 
    COMZEROS ST@DADOS@BCO@AUX 5 
    APPEND ST@DADOS@BCO@AUX (PAD(' ',1))
   END
   MOVE (MID(ST@DADOS@BCO@AUX,4,2)) TO ST@DADOS@BCO@AGENCIA
   MOVE (MID(ST@DADOS@BCO@AUX,1,6)) TO ST@DADOS@BCO@AGENCIA@DV
  
   // ----- conta corrente do fornecedor -----
   MOVEALL '' TO ST@DADOS@BCO@LIMPA ST@DADOS@BCO@AUX ST@DADOS@BCO@CONTA@COMP
   MOVE FORNECED.C_CORRENTE TO ST@DADOS@BCO@LIMPA
   TRIM ST@DADOS@BCO@LIMPA  TO ST@DADOS@BCO@LIMPA
   COMZEROS ST@DADOS@BCO@LIMPA 13
   
   MOVEALL 0  TO IT@POS@BCO IT@POSICAO@BCO
   POS '-' IN ST@DADOS@BCO@LIMPA    TO IT@POSICAO@BCO
   IF ((IT@POSICAO@BCO GT 1) AND (IT@POSICAO@BCO LE '5')) BEGIN
    REPLACE '-' IN ST@DADOS@BCO@LIMPA WITH ''
    POS '-' IN ST@DADOS@BCO@LIMPA   TO IT@POSICAO@BCO
   END 
   IF IT@POSICAO@BCO EQ 0 MOVE '14' TO IT@POSICAO@BCO
   CALC (IT@POSICAO@BCO -1)         TO IT@POSICAO@BCO
   CALC (IT@POSICAO@BCO +2)         TO IT@POS@BCO
   
   FOR IT@DADOS@BCO FROM 1 TO IT@POSICAO@BCO
    IF (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO)) IN 'xX0123456789' APPEND ST@DADOS@BCO@AUX (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO))
   LOOP
   TRIM ST@DADOS@BCO@AUX   TO ST@DADOS@BCO@AUX
   MOVE 0                  TO IT@DADOS@BCO
   LENGTH ST@DADOS@BCO@AUX TO IT@DADOS@BCO
   
   IF PARGERAL.EXERCICIO GE '2021' BEGIN
         IF FORNECED.N_BANCO EQ '0399' MOVE (MID(ST@DADOS@BCO@LIMPA,2,IT@POS@BCO)) TO ST@DADOS@BCO@CONTA@DV
    ELSE IF FORNECED.N_BANCO EQ '0041' MOVE (MID(ST@DADOS@BCO@LIMPA,2,IT@POS@BCO)) TO ST@DADOS@BCO@CONTA@DV
    ELSE                               MOVE (MID(ST@DADOS@BCO@LIMPA,1,IT@POS@BCO)) TO ST@DADOS@BCO@CONTA@DV
   
    COMZEROS ST@DADOS@BCO@AUX IT@POSICAO@BCO
    MOVE ST@DADOS@BCO@AUX  TO ST@DADOS@BCO@CONTA
    COMZEROS ST@DADOS@BCO@CONTA 12
   END
   ELSE BEGIN
    IF FORNECED.N_BANCO EQ '0399' BEGIN
     IF IT@DADOS@BCO EQ 15 BEGIN
      MOVE (RIGHT(ST@DADOS@BCO@AUX,1)) TO ST@DADOS@BCO@CONTA@DV
      MOVE (MID(ST@DADOS@BCO@AUX,8,8)) TO ST@DADOS@BCO@CONTA
      MOVE (MID(ST@DADOS@BCO@AUX,4,4)) TO ST@DADOS@BCO@OPERACAO
     END
     ELSE BEGIN
      MOVE (RIGHT(ST@DADOS@BCO@AUX,2)) TO ST@DADOS@BCO@CONTA@DV
      MOVE (MID(ST@DADOS@BCO@AUX,8,7)) TO ST@DADOS@BCO@CONTA
      MOVE (MID(ST@DADOS@BCO@AUX,4,3)) TO ST@DADOS@BCO@OPERACAO
     END
    END
    ELSE BEGIN
     MOVE (RIGHT(ST@DADOS@BCO@AUX,1))  TO ST@DADOS@BCO@CONTA@DV
     MOVE (MID(ST@DADOS@BCO@AUX,8,8))  TO ST@DADOS@BCO@CONTA
     MOVE (MID(ST@DADOS@BCO@AUX,4,4))  TO ST@DADOS@BCO@OPERACAO
    END
   END 
  END
  //--- agencia - nota de ordem ---
  MOVE ST@DADOS@BCO@AGENCIA TO ST@DADOS@BCO@AGENCIA@COMP
  APPEND ST@DADOS@BCO@AGENCIA@COMP '-' ST@DADOS@BCO@AGENCIA@DV
  //--- conta corrente - nota de ordem ---
  MOVE '' TO ST@DADOS@BCO@CONTA@COMP
  IF PARGERAL.EXERCICIO LT '2021' MOVE ST@DADOS@BCO@OPERACAO   TO ST@DADOS@BCO@CONTA@COMP
  APPEND ST@DADOS@BCO@CONTA@COMP ST@DADOS@BCO@CONTA '-' ST@DADOS@BCO@CONTA@DV
  TRIM ST@DADOS@BCO@CONTA@COMP TO ST@DADOS@BCO@CONTA@COMP
  
  // ----- cpf do fornecedor -----
  REPEAT
   REPLACE '.' IN ST@DADOS@BCO@CPF WITH ''
  UNTIL [~FOUND]
  REPEAT
   REPLACE '-' IN ST@DADOS@BCO@CPF WITH ''
  UNTIL [~FOUND]
  REPEAT
   REPLACE '/' IN ST@DADOS@BCO@CPF WITH ''
  UNTIL [~FOUND]
  
  TRIM   ST@DADOS@BCO@CPF TO ST@DADOS@BCO@CPF
  LENGTH ST@DADOS@BCO@CPF TO IT@DADOS@BCO
 
  INDICATE @JURIDICA! AS IT@DADOS@BCO EQ 14
  INDICATE @FISICA!   AS IT@DADOS@BCO EQ 11
 
  [ @JURIDICA!] BEGIN
                 IF ST@DADOS@BCO@CPF EQ '00000000000000' MOVE '' TO ST@DADOS@BCO@CPF
                 ELSE BEGIN
                  INSERT '-' IN ST@DADOS@BCO@CPF AT 13
                  INSERT '/' IN ST@DADOS@BCO@CPF AT 9
                  INSERT '.' IN ST@DADOS@BCO@CPF AT 6
                  INSERT '.' IN ST@DADOS@BCO@CPF AT 3
                 END
                END
  [ @FISICA!] BEGIN
               IF ST@DADOS@BCO@CPF EQ '00000000000'    MOVE '' TO ST@DADOS@BCO@CPF
               ELSE BEGIN
                INSERT '-' IN ST@DADOS@BCO@CPF AT 10
                INSERT '.' IN ST@DADOS@BCO@CPF AT 7
                INSERT '.' IN ST@DADOS@BCO@CPF AT 4
               END
              END
 END
 ELSE IF ST@CODIGO@BCO NE '' BEGIN
  CLEAR CONTBANC
  MOVE ST@CODIGO@ENTIDADE      TO CONTBANC.COD_ENTIDADE
  MOVE ST@EXERCICIO@FINANCEIRO TO CONTBANC.EXERCICIO
  MOVE ST@CODIGO@BCO           TO CONTBANC.CODIGO
  FIND EQ CONTBANC BY INDEX.1

  // ----- banco da entidade -----
  MOVEALL '' TO ST@DADOS@BCO@LIMPA ST@DADOS@BCO@AUX
  MOVE CONTBANC.CODIGO_BANCO TO ST@DADOS@BCO@LIMPA
  FOR IT@DADOS@BCO FROM 1 TO 4
   IF (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO)) IN '0123456789' APPEND ST@DADOS@BCO@AUX (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO))
  LOOP
  TRIM ST@DADOS@BCO@AUX TO ST@DADOS@BCO@AUX
  COMZEROS ST@DADOS@BCO@AUX 4
  MOVE ST@DADOS@BCO@AUX TO ST@DADOS@BCO@BANCO
  
  IF CONTBANC.N_CC NE '' BEGIN
   // ----- agencia da entidade -----
   MOVEALL '' TO ST@DADOS@BCO@LIMPA ST@DADOS@BCO@AUX ST@DADOS@BCO@AGENCIA@COMP
   MOVE (LEFT(CONTBANC.N_CC,6)) TO ST@DADOS@BCO@LIMPA
   FOR IT@DADOS@BCO FROM 1 TO 6
    IF (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO)) IN 'xX0123456789' APPEND ST@DADOS@BCO@AUX (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO))
   LOOP
   TRIM ST@DADOS@BCO@AUX TO ST@DADOS@BCO@AUX
   COMZEROS ST@DADOS@BCO@AUX 6
   MOVE ST@DADOS@BCO@AUX TO ST@DADOS@BCO@AGENCIA@COMP
   MOVE (MID(ST@DADOS@BCO@AUX,4,2))   TO ST@DADOS@BCO@AGENCIA
   MOVE (MID(ST@DADOS@BCO@AUX,1,6))   TO ST@DADOS@BCO@AGENCIA@DV
 
   // ----- conta corrente da entidade -----
   MOVEALL '' TO ST@DADOS@BCO@LIMPA ST@DADOS@BCO@AUX ST@DADOS@BCO@CONTA@COMP
   MOVE (MID(CONTBANC.N_CC,13,7)) TO ST@DADOS@BCO@LIMPA
   FOR IT@DADOS@BCO FROM 1 TO 13
    IF (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO)) IN 'xX0123456789' APPEND ST@DADOS@BCO@AUX (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO))
   LOOP
   TRIM ST@DADOS@BCO@AUX TO ST@DADOS@BCO@AUX
   COMZEROS ST@DADOS@BCO@AUX 16
   MOVE ST@DADOS@BCO@AUX TO ST@DADOS@BCO@CONTA@COMP
   IF CONTBANC.CODIGO_BANCO EQ '0399' BEGIN
    MOVE 0 TO IT@DADOS@BCO
    LENGTH ST@DADOS@BCO@LIMPA TO IT@DADOS@BCO
    IF IT@DADOS@BCO EQ 15 BEGIN
     MOVE (RIGHT(ST@DADOS@BCO@AUX,1)) TO ST@DADOS@BCO@CONTA@DV
     MOVE (MID(ST@DADOS@BCO@AUX,8,8)) TO ST@DADOS@BCO@CONTA
     MOVE (MID(ST@DADOS@BCO@AUX,4,4)) TO ST@DADOS@BCO@OPERACAO
    END
    ELSE BEGIN
     MOVE (RIGHT(ST@DADOS@BCO@AUX,2)) TO ST@DADOS@BCO@CONTA@DV
     MOVE (MID(ST@DADOS@BCO@AUX,8,7)) TO ST@DADOS@BCO@CONTA
     MOVE (MID(ST@DADOS@BCO@AUX,4,3)) TO ST@DADOS@BCO@OPERACAO
    END
   END
   ELSE BEGIN
    MOVE (RIGHT(ST@DADOS@BCO@AUX,1))  TO ST@DADOS@BCO@CONTA@DV
    MOVE (MID(ST@DADOS@BCO@AUX,8,8))  TO ST@DADOS@BCO@CONTA
    MOVE (MID(ST@DADOS@BCO@AUX,4,4))  TO ST@DADOS@BCO@OPERACAO
   END
  END
  ELSE BEGIN
   // ----- agencia da entidade -----
   MOVEALL '' TO ST@DADOS@BCO@LIMPA ST@DADOS@BCO@AUX ST@DADOS@BCO@AGENCIA@COMP
   MOVE CONTBANC.AGENCIA TO ST@DADOS@BCO@LIMPA
   FOR IT@DADOS@BCO FROM 1 TO 6
    IF (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO)) IN 'xX0123456789' APPEND ST@DADOS@BCO@AUX (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO))
   LOOP
   TRIM ST@DADOS@BCO@AUX TO ST@DADOS@BCO@AUX
   COMZEROS ST@DADOS@BCO@AUX 6
   MOVE (TRIM(ST@DADOS@BCO@AUX))    TO ST@DADOS@BCO@AGENCIA@COMP
   MOVE (MID(ST@DADOS@BCO@AUX,4,2)) TO ST@DADOS@BCO@AGENCIA
   MOVE (MID(ST@DADOS@BCO@AUX,1,6)) TO ST@DADOS@BCO@AGENCIA@DV
 
   // ----- conta corrente da entidade -----
   MOVEALL '' TO ST@DADOS@BCO@LIMPA ST@DADOS@BCO@AUX ST@DADOS@BCO@CONTA@COMP
   MOVE CONTBANC.CONTA_CORRENTE TO ST@DADOS@BCO@LIMPA
   FOR IT@DADOS@BCO FROM 1 TO 13
    IF (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO)) IN 'xX0123456789' APPEND ST@DADOS@BCO@AUX (MID(ST@DADOS@BCO@LIMPA,1,IT@DADOS@BCO))
   LOOP
   TRIM ST@DADOS@BCO@AUX TO ST@DADOS@BCO@AUX
   COMZEROS ST@DADOS@BCO@AUX 16
   MOVE (TRIM(ST@DADOS@BCO@AUX)) TO ST@DADOS@BCO@CONTA@COMP
   IF CONTBANC.CODIGO_BANCO EQ '0399' BEGIN
    MOVE 0 TO IT@DADOS@BCO
    LENGTH ST@DADOS@BCO@LIMPA TO IT@DADOS@BCO
    IF IT@DADOS@BCO EQ 15 BEGIN
     MOVE (RIGHT(ST@DADOS@BCO@AUX,1)) TO ST@DADOS@BCO@CONTA@DV
     MOVE (MID(ST@DADOS@BCO@AUX,8,8)) TO ST@DADOS@BCO@CONTA
     MOVE (MID(ST@DADOS@BCO@AUX,4,4)) TO ST@DADOS@BCO@OPERACAO
    END
    ELSE BEGIN
     MOVE (RIGHT(ST@DADOS@BCO@AUX,2)) TO ST@DADOS@BCO@CONTA@DV
     MOVE (MID(ST@DADOS@BCO@AUX,8,7)) TO ST@DADOS@BCO@CONTA
     MOVE (MID(ST@DADOS@BCO@AUX,4,3)) TO ST@DADOS@BCO@OPERACAO
    END
   END
   ELSE BEGIN
    MOVE (RIGHT(ST@DADOS@BCO@AUX,1))  TO ST@DADOS@BCO@CONTA@DV
    MOVE (MID(ST@DADOS@BCO@AUX,8,8))  TO ST@DADOS@BCO@CONTA
    MOVE (MID(ST@DADOS@BCO@AUX,4,4))  TO ST@DADOS@BCO@OPERACAO
   END
  END
  // ----- cpf da entidade -----
  IF CONTBANC.CNPJ_ENT NE '' BEGIN
   MOVE CONTBANC.CNPJ_ENT TO ST@DADOS@BCO@CPF
   TRIM ST@DADOS@BCO@CPF  TO ST@DADOS@BCO@CPF
   REPEAT
    REPLACE '.' IN ST@DADOS@BCO@CPF WITH ''
   UNTIL [~FOUND]
   REPEAT
    REPLACE '-' IN ST@DADOS@BCO@CPF WITH ''
   UNTIL [~FOUND]
   REPEAT
    REPLACE '/' IN ST@DADOS@BCO@CPF WITH ''
   UNTIL [~FOUND]
   
   TRIM   ST@DADOS@BCO@CPF TO ST@DADOS@BCO@CPF
   LENGTH ST@DADOS@BCO@CPF TO IT@DADOS@BCO
 
   INDICATE @JURIDICA! AS IT@DADOS@BCO EQ 14
   INDICATE @FISICA!   AS IT@DADOS@BCO EQ 11
  
   [ @JURIDICA!] BEGIN
                  IF ST@DADOS@BCO@CPF EQ '00000000000000' MOVE '' TO ST@DADOS@BCO@CPF
                  ELSE BEGIN
                   INSERT '-' IN ST@DADOS@BCO@CPF AT 13
                   INSERT '/' IN ST@DADOS@BCO@CPF AT 9
                   INSERT '.' IN ST@DADOS@BCO@CPF AT 6
                   INSERT '.' IN ST@DADOS@BCO@CPF AT 3
                  END
                 END
   [ @FISICA!] BEGIN
                IF ST@DADOS@BCO@CPF EQ '00000000000'    MOVE '' TO ST@DADOS@BCO@CPF
                ELSE BEGIN
                 INSERT '-' IN ST@DADOS@BCO@CPF AT 10
                 INSERT '.' IN ST@DADOS@BCO@CPF AT 7
                 INSERT '.' IN ST@DADOS@BCO@CPF AT 4
                END
               END
  END             
 END
#ENDCOMMAND

//--verifica numero de border⌠ --
//--numera_bordero <tipo de border⌠> <c╒digo de border⌠> <formato de border⌠>
#COMMAND NUMERA_BORDERO
#IFDEF ST@TIPO@BORDERO
#ELSE
   STRING ST@TIPO@BORDERO 1
#ENDIF
#IFDEF ST@NUMERO@BORDERO
#ELSE
   STRING ST@NUMERO@BORDERO 10
#ENDIF
#IFDEF IT@BORDERO
#ELSE
   INTEGER IT@BORDERO
#ENDIF
#IFDEF IT@OP@BORDERO
#ELSE
   INTEGER IT@OP@BORDERO
#ENDIF
#IFDEF ST@CODIGO@BORDERO
#ELSE
   STRING ST@CODIGO@BORDERO 5
#ENDIF
#IFDEF ST@BANCO@BORDERO
#ELSE
   STRING ST@BANCO@BORDERO 4
#ENDIF
 OPEN BORDERO
 OPEN ORDEM
 OPEN ORDEMRP
 OPEN ORDEMEX
 OPEN ORDEMPC
 
 MOVE !1 TO ST@TIPO@BORDERO
 MOVE !2 TO IT@BORDERO
 MOVE 0  TO IT@OP@BORDERO
 MOVE !3 TO ST@CODIGO@BORDERO
 MOVE !4 TO ST@BANCO@BORDERO
 
 CLEAR ORDEM
 MOVE ST@CODIGO@ENTIDADE      TO ORDEM.COD_ENTIDADE
 MOVE ST@EXERCICIO@FINANCEIRO TO ORDEM.EXERCICIO
 MOVE '9999999999'            TO ORDEM.N_BORDERO
 FIND LT ORDEM BY INDEX.6
 [ FOUND] INDICATE FOUND AS ORDEM.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
 [ FOUND] INDICATE FOUND AS ORDEM.EXERCICIO    EQ ST@EXERCICIO@FINANCEIRO
 [ FOUND] MOVE ORDEM.N_BORDERO TO IT@OP@BORDERO
 
 CLEAR ORDEMRP
 MOVE ST@CODIGO@ENTIDADE      TO ORDEMRP.COD_ENTIDADE
 MOVE ST@EXERCICIO@FINANCEIRO TO ORDEMRP.EXERCICIO
 MOVE '9999999999'            TO ORDEMRP.N_BORDERO
 FIND LT ORDEMRP BY INDEX.6
 [ FOUND] INDICATE FOUND AS ORDEMRP.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
 [ FOUND] INDICATE FOUND AS ORDEMRP.EXERCICIO    EQ ST@EXERCICIO@FINANCEIRO
 [ FOUND] IF ORDEMRP.N_BORDERO GT IT@OP@BORDERO BEGIN
           MOVE ORDEMRP.N_BORDERO TO IT@OP@BORDERO
          END 
 
 CLEAR ORDEMEX
 MOVE ST@CODIGO@ENTIDADE      TO ORDEMEX.COD_ENTIDADE
 MOVE ST@EXERCICIO@FINANCEIRO TO ORDEMEX.EXERCICIO
 MOVE '9999999999'            TO ORDEMEX.N_BORDERO
 FIND LT ORDEMEX BY INDEX.6
 [ FOUND] INDICATE FOUND AS ORDEMEX.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
 [ FOUND] INDICATE FOUND AS ORDEMEX.EXERCICIO    EQ ST@EXERCICIO@FINANCEIRO
 [ FOUND] IF ORDEMEX.N_BORDERO GT IT@OP@BORDERO BEGIN
           MOVE ORDEMEX.N_BORDERO TO IT@OP@BORDERO
          END 
 
 CLEAR ORDEMPC
 MOVE ST@CODIGO@ENTIDADE      TO ORDEMPC.COD_ENTIDADE
 MOVE ST@EXERCICIO@FINANCEIRO TO ORDEMPC.EXERCICIO
 MOVE '9999999999'            TO ORDEMPC.N_BORDERO
 FIND LT ORDEMPC BY INDEX.6
 [ FOUND] INDICATE FOUND AS ORDEMPC.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
 [ FOUND] INDICATE FOUND AS ORDEMPC.EXERCICIO    EQ ST@EXERCICIO@FINANCEIRO
 [ FOUND] IF ORDEMPC.N_BORDERO GT IT@OP@BORDERO BEGIN
           MOVE ORDEMPC.N_BORDERO TO IT@OP@BORDERO
          END
          
 CLEAR BORDERO
 MOVE ST@CODIGO@ENTIDADE TO BORDERO.COD_ENTIDADE
 REPEAT
  FIND GT BORDERO BY INDEX.1
  [ FOUND] INDICATE FOUND AS BORDERO.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
  [ FOUND] BEGIN
            IF BORDERO.N_BORDERO GT IT@OP@BORDERO BEGIN
             MOVE BORDERO.N_BORDERO TO IT@OP@BORDERO
            END
           END
 UNTIL [~FOUND]
 INCREMENT IT@OP@BORDERO
 
 CLEAR BORDERO
 MOVE ST@CODIGO@ENTIDADE TO BORDERO.COD_ENTIDADE
 MOVE ST@BANCO@BORDERO   TO BORDERO.CODIGO_BANCO
 REPEAT
  FIND GT BORDERO BY INDEX.2
  [ FOUND] INDICATE FOUND AS BORDERO.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
  [ FOUND] INDICATE FOUND AS BORDERO.CODIGO_BANCO EQ ST@BANCO@BORDERO
  [ FOUND] BEGIN
            IF ((ST@CODIGO@BORDERO EQ '') OR (ST@CODIGO@BORDERO EQ BORDERO.CODIGO_BORDERO)) BEGIN
             INDICATE ERR FALSE
             ON ERROR GOSUB CHECA_GRAVACAO
             REREAD BORDERO
             MOVE IT@OP@BORDERO TO BORDERO.N_BORDERO
             SAVERECORD BORDERO
             UNLOCK
             ON ERROR OFF
             INDICATE FOUND FALSE
            END 
           END
 UNTIL [~FOUND] 
 
 MOVE IT@OP@BORDERO TO ST@NUMERO@BORDERO
 COMZEROS ST@NUMERO@BORDERO 10
          
#ENDCOMMAND

//--controle de ultima data de movimentacao geral e nao mais por dotacao
//--devido ao projeto audesp/2012
#COMMAND OBTER_ULTIMA_DATA_MOVIMENTACAO
#IFDEF ST@DATA
#ELSE
   STRING ST@DATA 10
#ENDIF
#IFDEF DT@ULTIMO@MOVTO
#ELSE
   DATE DT@ULTIMO@MOVTO
#ENDIF

 INDICATE @ULT@DATA@GERAL! TRUE

 MOVE '01/01/' TO ST@DATA
 APPEND ST@DATA PARGERAL.EXERCICIO
 MOVE ST@DATA TO DT@ULTIMO@MOVTO

 CLEAR MOVDES
 MOVE ST@CODIGO@ENTIDADE      TO MOVDES.COD_ENTIDADE
 MOVE ST@EXERCICIO@FINANCEIRO TO MOVDES.EXERCICIO
 MOVE '31/12/2099'            TO MOVDES.ULT_DATA
 FIND LT MOVDES BY INDEX.9
 [ FOUND] INDICATE FOUND AS MOVDES.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
 [ FOUND] INDICATE FOUND AS MOVDES.EXERCICIO    EQ ST@EXERCICIO@FINANCEIRO
 [~FOUND] CLEAR MOVDES
 IF MOVDES.ULT_DATA GT DT@ULTIMO@MOVTO MOVE MOVDES.ULT_DATA TO DT@ULTIMO@MOVTO
#ENDCOMMAND

//----------------------------------------------------------------------------

#COMMAND VALIDA_DOCUMENTO
#IFDEF    ST@N@INSCRICAO
#ELSE
   STRING ST@N@INSCRICAO
#ENDIF
#IFDEF    ST@LIMPA
#ELSE
   STRING ST@LIMPA
#ENDIF
#IFDEF    IT@AUX
#ELSE
   INTEGER IT@AUX
#ENDIF

 MOVE !1 TO ST@LIMPA
 MOVE '' TO ST@N@INSCRICAO

 INDICATE @CNPJ_OK! FALSE
 INDICATE @CPF_OK!  FALSE
 
 FOR IT@AUX FROM 1 TO 18
  IF (MID(ST@LIMPA,1,IT@AUX)) IN '0123456789' APPEND ST@N@INSCRICAO (MID(ST@LIMPA,1,IT@AUX))
 LOOP
 TRIM ST@N@INSCRICAO TO ST@N@INSCRICAO

 INDICATE @CNPJ! AS (LENGTH(ST@N@INSCRICAO)) EQ 14
 INDICATE @CPF!  AS (LENGTH(ST@N@INSCRICAO)) EQ 11

 [ @CNPJ!] BEGIN
    CHECA_CGC ST@N@INSCRICAO
    [ ERR] INDICATE @CNPJ! FALSE
    [~ERR] INDICATE @CNPJ! TRUE
 END

 [ @CPF!] BEGIN
    CHECA_CPF ST@N@INSCRICAO
    [ ERR] INDICATE @CPF! FALSE
    [~ERR] INDICATE @CPF! TRUE
 END

 [ @CNPJ!] BEGIN
  VALIDA_CNPJ ST@N@INSCRICAO
  [~@CNPJ_OK!] BEGIN
                INDICATE @CNPJ! FALSE
                MOVE '' TO ST@N@INSCRICAO
               END
  END

 [ @CPF!] BEGIN
  VALIDA_CPF ST@N@INSCRICAO
  [~@CPF_OK!] BEGIN
               INDICATE @CPF! FALSE
               MOVE '' TO ST@N@INSCRICAO
              END
  END

 INDICATE @OUT! GROUP ALL [~@CNPJ! ~@CPF!]
#ENDCOMMAND

//----------------------------------------------------------------------------

#COMMAND VALIDA_CPF
 INDICATE @CPF_OK! TRUE
 IF PARGERAL.EXERCICIO GE '2011' BEGIN
              INDICATE @CPF_OK! AS !1 NE '11111111111'
  [ @CPF_OK!] INDICATE @CPF_OK! AS !1 NE '22222222222'
  [ @CPF_OK!] INDICATE @CPF_OK! AS !1 NE '33333333333'
  [ @CPF_OK!] INDICATE @CPF_OK! AS !1 NE '44444444444'
  [ @CPF_OK!] INDICATE @CPF_OK! AS !1 NE '55555555555'
  [ @CPF_OK!] INDICATE @CPF_OK! AS !1 NE '66666666666'
  [ @CPF_OK!] INDICATE @CPF_OK! AS !1 NE '77777777777'
  [ @CPF_OK!] INDICATE @CPF_OK! AS !1 NE '88888888888'
  [ @CPF_OK!] INDICATE @CPF_OK! AS !1 NE '99999999999'
  [ @CPF_OK!] INDICATE @CPF_OK! AS !1 NE '00000000000'
  END
#ENDCOMMAND

#COMMAND VALIDA_CNPJ
 INDICATE @CNPJ_OK! TRUE
 IF PARGERAL.EXERCICIO GE '2011' BEGIN
               INDICATE @CNPJ_OK! AS !1 NE '11111111111111'
  [ @CNPJ_OK!] INDICATE @CNPJ_OK! AS !1 NE '22222222222222'
  [ @CNPJ_OK!] INDICATE @CNPJ_OK! AS !1 NE '33333333333333'
  [ @CNPJ_OK!] INDICATE @CNPJ_OK! AS !1 NE '44444444444444'
  [ @CNPJ_OK!] INDICATE @CNPJ_OK! AS !1 NE '55555555555555'
  [ @CNPJ_OK!] INDICATE @CNPJ_OK! AS !1 NE '66666666666666'
  [ @CNPJ_OK!] INDICATE @CNPJ_OK! AS !1 NE '77777777777777'
  [ @CNPJ_OK!] INDICATE @CNPJ_OK! AS !1 NE '88888888888888'
  [ @CNPJ_OK!] INDICATE @CNPJ_OK! AS !1 NE '99999999999999'
  [ @CNPJ_OK!] INDICATE @CNPJ_OK! AS !1 NE '00000000000000'
  END
#ENDCOMMAND

//----------------------------------------------------------------------------

//----- NUMERICO
//----- SINTAXE : NUMERICO <JANELA> <TAMANHO_DA_JANELA>
//----- VERIFICA SE JANELA E' NUMERICA
#COMMAND SO_NUMERO
#IFDEF    ST@BYTE
#ELSE
   STRING ST@BYTE 1
#ENDIF
#IFDEF     IT@CONTADOR
#ELSE
   INTEGER IT@CONTADOR
#ENDIF
#IFDEF     IT@PONTO
#ELSE
   INTEGER IT@PONTO
#ENDIF

MOVE 0 TO IT@CONTADOR
MOVE 0 TO IT@PONTO

IF !1 NE '' BEGIN
             REPEAT
              REMOVE ' ' FROM !1
             UNTIL [~ FOUND]
             FOR IT@CONTADOR FROM 1 TO !2
              MID !1 TO ST@BYTE 1 IT@CONTADOR
              INDICATE @NUMERICO! AS ST@BYTE IN '0123456789'
              IF ST@BYTE EQ '.' INCREMENT IT@PONTO
              [~ @NUMERICO!] BEGIN
                              ADVERTE 'ESTE CAMPO DEVE SER NUM┌RICO'
                              CLEARFORM !1
                              MOVE !2 TO IT@CONTADOR
                              GOTO !3
                             END
             LOOP
            END
#ENDCOMMAND

//----------------------------------------------------------------------------
//--
//-- !1 = entidade do pargeral
//-- !2 = entidade selecionada
//-- !3 = mes selecionado
//-- !4 = ano selecionado
//--
#COMMAND IMPRIME_RODAPE_BALANCO
 #IFDEF    ST@NOTA@BALANCO
 #ELSE
    STRING ST@NOTA@BALANCO 255
 #ENDIF
 #IFDEF    DT@DDMMAA
 #ELSE
    DATE   DT@DDMMAA
 #ENDIF
 #IFDEF    ST@H
 #ELSE
    STRING ST@H
 #ENDIF
 #IFDEF    ST@M
 #ELSE
    STRING ST@M
 #ENDIF
 #IFDEF    ST@S
 #ELSE
    STRING ST@S
 #ENDIF
 #IFDEF    ST@NOME@MES
 #ELSE
    STRING ST@NOME@MES
 #ENDIF
 #IFDEF    ST@RODAPE@BALANCO
 #ELSE
    STRING ST@RODAPE@BALANCO 255
 #ENDIF
 #IFDEF    ST@MES
 #ELSE
    STRING ST@MES
 #ENDIF
 
 SYSDATA DT@DDMMAA ST@H ST@M ST@S
 
 TRIM ST@H TO ST@H
 TRIM ST@M TO ST@M
 TRIM ST@S TO ST@S
 COMZEROS ST@H 2
 COMZEROS ST@M 2
 COMZEROS ST@S 2
 
 MES MONTH (MID(DT@DDMMAA,2,4)) TO ST@NOME@MES
 
 INDICATE @PROPRIO! AS !1 EQ !2
 
 MOVE 'Demonstrativo gerado pelo Sistema Integrado de Financas Publicas Municipais - CN-SIFPM,' TO ST@RODAPE@BALANCO
 APPEND ST@RODAPE@BALANCO ' em ' (MID(DT@DDMMAA,2,1)) ' de ' (TRIM(ST@NOME@MES)) ' de ' (MID(DT@DDMMAA,4,7)) ', as ' ST@H 'h' ST@M '.'
 WRITELN ST@RODAPE@BALANCO

 [~@PROPRIO!] BEGIN
               CLEAR ENTIDADE
               CONSTRAINT_SET 1
               CONSTRAIN ENTIDADE.EXERCICIO EQ ST@EXERCICIO@FINANCEIRO
               IF !2 NE '' CONSTRAIN ENTIDADE.CODIGO   EQ !2
               ELSE        CONSTRAIN ENTIDADE.CODIGO   NE !1
               CONSTRAINED_FIND FIRST ENTIDADE BY INDEX.1
               WHILE [FOUND]
                
                BLANKFORM IMPRIME_NOTA
                MOVE 'Os dados da entidade: ' TO ST@RODAPE@BALANCO
                APPEND ST@RODAPE@BALANCO ' ' ENTIDADE.DESCRICAO ' foram extraidos do sistema: '

                IF ENTIDADE.CN_SIFPM EQ 'S' APPEND ST@RODAPE@BALANCO 'Sistema Integrado de Financas Publicas Municipais - CN-SIFPM'
                ELSE                        APPEND ST@RODAPE@BALANCO ENTIDADE.SISTEMA
                
                APPEND ST@RODAPE@BALANCO ' em ' (MID(DT@DDMMAA,2,1)) ' de ' (TRIM(ST@NOME@MES)) ' de ' (MID(DT@DDMMAA,4,7)) ', as ' ST@H 'h' ST@M '.'
                
                WRITELN ST@RODAPE@BALANCO

                CONSTRAINED_FIND NEXT
                END
               CONSTRAINT_SET 1 CLEAR
              END

 //--indicador referente ao balanco.inc
 IF ((!2 EQ !1) OR (!2 EQ '')) BEGIN
                                [~@MES_ARMAZENADO!] BEGIN
                                                     MOVE 'Anexo gerado com mes nao armazenado no TCE:' TO ST@RODAPE@BALANCO
                                                     
                                                     MOVE '' TO ST@MES
                                                     
                                                     CLEAR ENCERRA
                                                     MOVE ST@CODIGO@ENTIDADE TO ENCERRA.COD_ENTIDADE
                                                     MOVE PARGERAL.EXERCICIO TO ENCERRA.ANO
                                                     REPEAT
                                                      FIND GT ENCERRA BY INDEX.1
                                                      [ FOUND] INDICATE FOUND AS ENCERRA.COD_ENTIDADE EQ ST@CODIGO@ENTIDADE
                                                      [ FOUND] INDICATE FOUND AS ENCERRA.ANO          EQ PARGERAL.EXERCICIO
                                                      [ FOUND] INDICATE FOUND AS ENCERRA.MES          LE '13'
                                                      [ FOUND] BEGIN
                                                                IF ((PARGERAL.ESTADO EQ 'SP') AND (ENCERRA.ID_CONTABIL  EQ '')) MOVE ENCERRA.MES TO ST@MES
                                                                IF ((PARGERAL.ESTADO EQ 'MG') AND (ENCERRA.ID_BALANCETE EQ '')) MOVE ENCERRA.MES TO ST@MES
                                                                IF ST@MES NE '' INDICATE FOUND FALSE
                                                               END
                                                     UNTIL [~FOUND]
                                                     
                                                     APPEND ST@RODAPE@BALANCO ' ' ST@MES '/' !4
                                                     
                                                     CLEAR ENTIDADE
                                                     MOVE ST@EXERCICIO@FINANCEIRO TO ENTIDADE.EXERCICIO
                                                     MOVE PARGERAL.COD_ENTIDADE   TO ENTIDADE.CODIGO
                                                     FIND EQ ENTIDADE BY INDEX.1
                                                     [~FOUND] CLEAR ENTIDADE
                                                     
                                                     IF !2 EQ '' BEGIN
                                                                  APPEND ST@RODAPE@BALANCO ' Entidade: ' ENTIDADE.CODIGO ' ' ENTIDADE.DESCRICAO
                                                                 END
                                                     
                                                     WRITELN ST@RODAPE@BALANCO
                                                    END
                               END
#ENDCOMMAND

//----------------------------------------------------------------------------
//--
//-- !1 - numero arquivo prn
//-- !2 - modulo (ppa, ldo, loa, exe) - OUT (outros pm itapeva)
//-- !3 - ano
//-- !4 - nome do relatorio (anexo-1, quadro-3)
//-- !5 - periodo (m-mensal b-bimestral t-trimestral q-quadrimestral s-semestral a-anual)
//-- !6 - mes, quadrimestre, bimestre, etc
//-- !7 - nome antigo do arquivo .txt
//-- !8 - complemento nome antigo
//--
#COMMAND COPIA_RELATORIO_CONTAS_PUBLICAS
 #IFDEF    ST@DIRETORIO@SAIDA
 #ELSE
    STRING ST@DIRETORIO@SAIDA 255
 #ENDIF
 #IFDEF    ST@COMANDO
 #ELSE
    STRING ST@COMANDO 255
 #ENDIF
 #IFDEF    ST@ARQUIVO@SAIDA
 #ELSE
    STRING ST@ARQUIVO@SAIDA 255
 #ENDIF
 #IFDEF    ST@PORTAL@CONTASPUBLICAS
 #ELSE
    STRING ST@PORTAL@CONTASPUBLICAS 1
 #ENDIF
 #IFDEF    ST@PASTA@RELATORIOS@CONTASPUBLICAS
 #ELSE
    STRING ST@PASTA@RELATORIOS@CONTASPUBLICAS 255
 #ENDIF
 #IFDEF    ST@PASTA@RELATORIOS@OUTROS
 #ELSE
    STRING ST@PASTA@RELATORIOS@OUTROS 255
 #ENDIF
 #IFDEF    ST@OBTER@TAMANHO@PRN
 #ELSE
    STRING ST@OBTER@TAMANHO@PRN 255
 #ENDIF
 #IFDEF    ST@LINHA@PRN
 #ELSE
    STRING ST@LINHA@PRN 255
 #ENDIF
 #IFDEF    ST@COPIA@OUTROS
 #ELSE
    STRING ST@COPIA@OUTROS 1
 #ENDIF

 #IFDEF    ST@P6
 #ELSE
    STRING ST@P6
 #ENDIF
 #IFDEF    ST@P8
 #ELSE
    STRING ST@P8
 #ENDIF
 #IFDEF    ST@ORIENTACAO
 #ELSE
    STRING ST@ORIENTACAO 1
 #ENDIF
 
 #IFDEF     IT@NOME@ANTIGO
 #ELSE
    INTEGER IT@NOME@ANTIGO
 #ENDIF
 #IFDEF     IT@NOME@NOVO
 #ELSE
    INTEGER IT@NOME@NOVO
 #ENDIF
 #IFDEF     IT@DIRETORIO@NOVO
 #ELSE
    INTEGER IT@DIRETORIO@NOVO
 #ENDIF
 #IFDEF     IT@TAMANHO@PRN
 #ELSE
    INTEGER IT@TAMANHO@PRN
 #ENDIF
 
 MOVEALL '' TO ST@P6              ST@P8
 MOVEALL '' TO ST@DIRETORIO@SAIDA ST@ARQUIVO@SAIDA ST@PORTAL@CONTASPUBLICAS ST@PASTA@RELATORIOS@CONTASPUBLICAS ST@COPIA@OUTROS ST@PASTA@RELATORIOS@OUTROS
 
 MOVEALL 0 TO IT@NOME@ANTIGO IT@NOME@NOVO IT@DIRETORIO@NOVO
 
 MOVE !6 TO ST@P6
 MOVE !8 TO ST@P8
 
 TRIM ST@P6 TO ST@P6
 TRIM ST@P8 TO ST@P8
 
 VERSAO
 
 MOVE (OBTER_CONFIGURACAO('portal_cp',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))               TO ST@PORTAL@CONTASPUBLICAS
 MOVE (OBTER_CONFIGURACAO('outros_relatorios_cp',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))    TO ST@COPIA@OUTROS
 MOVE (OBTER_CONFIGURACAO('pasta_relatorios_cp',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))     TO ST@PASTA@RELATORIOS@CONTASPUBLICAS
 MOVE (OBTER_CONFIGURACAO('pasta_relatorios_outros',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO)) TO ST@PASTA@RELATORIOS@OUTROS
 
 TRIM ST@PASTA@RELATORIOS@CONTASPUBLICAS TO ST@PASTA@RELATORIOS@CONTASPUBLICAS
 TRIM ST@PASTA@RELATORIOS@OUTROS         TO ST@PASTA@RELATORIOS@OUTROS
 
 IF (RIGHT(ST@PASTA@RELATORIOS@CONTASPUBLICAS,1))    NE '/' APPEND ST@PASTA@RELATORIOS@CONTASPUBLICAS '/'
 IF (RIGHT(ST@PASTA@RELATORIOS@OUTROS,1)) NE '/' APPEND ST@PASTA@RELATORIOS@OUTROS '/'
 
 IF ST@PORTAL@CONTASPUBLICAS IN 'SsAa' MOVE 10 TO IT@NOME@NOVO
 IF ST@PORTAL@CONTASPUBLICAS EQ ''     MOVE 10 TO IT@NOME@ANTIGO
 IF ST@PORTAL@CONTASPUBLICAS IN 'NnAa' MOVE 10 TO IT@NOME@ANTIGO
 IF !7                       EQ ''     MOVE  0 TO IT@NOME@ANTIGO
 
 MOVE 0 TO IT@NOME@ANTIGO //--nao tem mais necessidade
 
 UPPERCASE ST@PORTAL@CONTASPUBLICAS
 
 //--obrigatorio portal_cp = S e obrigarorio ter usuario escolhido no menuuser
 IF ((ST@PORTAL@CONTASPUBLICAS EQ 'S') AND (IT@PUBLICA NE 0)) BEGIN
    
    IF ST@PASTA@RELATORIOS@CONTASPUBLICAS EQ '' BEGIN
                                                 ADVERTE 'PASTA DESTINO DOS RELATORIOS NAO CONFIGURADA, ENTRE EM CONTATO COM O SUPORTE DE SISTEMAS DA CONAM'
                                                END
    
    MOVE ST@PASTA@RELATORIOS@CONTASPUBLICAS TO ST@DIRETORIO@SAIDA
    
    [~LINUX!] BEGIN
               MOVE 'COPY ARQ' TO ST@COMANDO
               IF IT@DIRETORIO@NOVO EQ 0 APPEND ST@COMANDO ST@NUMERO '.PRN ' ST@DIRETORIO@SAIDA '\TEMP\'
               ELSE                      APPEND ST@COMANDO ST@NUMERO '.PRN ' ST@DIRETORIO@SAIDA
              END

    [ LINUX!] BEGIN
               MOVE 'cp arq' TO ST@COMANDO
               APPEND ST@COMANDO ST@CODIGO@ENTIDADE ST@EXERCICIO@FINANCEIRO
               IF IT@DIRETORIO@NOVO EQ 0 BEGIN
                                          IF IT@QTDE@ENTIDADES GT 1 APPEND ST@COMANDO ST@NUMERO '.prn ' ST@DIRETORIO@SAIDA
                                          ELSE                      APPEND ST@COMANDO ST@NUMERO '.prn ' ST@DIRETORIO@SAIDA
                                         END
               ELSE APPEND ST@COMANDO ST@NUMERO '.prn ' ST@DIRETORIO@SAIDA
              END
    
    IF !2 NE 'OUT' BEGIN
                    IF ST@PASTA@RELATORIOS@CONTASPUBLICAS NE '' BEGIN
                                                                 //--caso mes for 13 volta pra 12
                                                                 IF ST@P6 EQ '13' MOVE '12' TO ST@P6
                                                                 IF ST@P8 EQ '13' MOVE '12' TO ST@P8
                                                                 
                                                                 IF IT@NOME@NOVO NE 0 BEGIN
                                                                                       MOVE ST@COMANDO TO ST@ARQUIVO@SAIDA
                                                                                       APPEND ST@ARQUIVO@SAIDA 'cp_' !2 '_' !3 '_' !5
                                                                                       IF !5 IN 'Aa' APPEND ST@ARQUIVO@SAIDA '_xx_' !4
                                                                                       ELSE          APPEND ST@ARQUIVO@SAIDA '_' ST@P6 '_' !4
                                                                                       APPEND ST@ARQUIVO@SAIDA '.txt'
                                                                                       RUNPROGRAM WAIT ST@ARQUIVO@SAIDA
                                                                                      END

                                                                 IF IT@NOME@ANTIGO NE 0 BEGIN
                                                                                         MOVE ST@COMANDO TO ST@ARQUIVO@SAIDA
                                                                                         APPEND ST@ARQUIVO@SAIDA !7 ST@P8 '.txt'
                                                                                         RUNPROGRAM WAIT ST@ARQUIVO@SAIDA
                                                                                        END
                                                                END
                   END
    
    IF !2 EQ 'OUT' BEGIN
                    IF ST@PASTA@RELATORIOS@OUTROS NE '' BEGIN
                                                         MOVE 'cp arq' TO ST@COMANDO
                                                         APPEND ST@COMANDO ST@CODIGO@ENTIDADE ST@EXERCICIO@FINANCEIRO ST@NUMERO '.prn '
                                                         
                                                         IF ST@COPIA@OUTROS EQ 'S' BEGIN
                                                                                    OBTER_TAMANHO_ARQUIVO_PRN !1
                                                                                    MOVE (TRIM(COLUNREL.ORIENTACAO)) TO ST@ORIENTACAO
                                                                                    
                                                                                    MOVE ST@PASTA@RELATORIOS@OUTROS TO ST@ARQUIVO@SAIDA
                                                                                    APPEND ST@ARQUIVO@SAIDA 'cp_' !2 '_' ST@ORIENTACAO '_' COLUNREL.FONTE '_' !3 '_' !5 '_' ST@P6 '_' !4 '.txt'
                                                                                    APPEND ST@COMANDO ' ' ST@ARQUIVO@SAIDA
                                                                                    RUNPROGRAM WAIT ST@COMANDO
                                                                                    CLOSE COLUNREL
                                                                                   END
                                                        END
                   END
 END
#ENDCOMMAND

//----------------------------------------------------------------------------
//-- define modelo do demonstrativo :1-Audesp e 2-STN (excluindo 3.3.90.47.12)
//-- !1 - exercicio corrente
#COMMAND DEFINE_MODELO_PASEP_AUDESP
 #IFDEF    ST@EXERCICIO@PASEP@AUDESP
 #ELSE
    STRING ST@EXERCICIO@PASEP@AUDESP  4
 #ENDIF
 #IFDEF    ST@LINHA1@PASEP@AUDESP
 #ELSE
    STRING ST@LINHA1@PASEP@AUDESP    71 
 #ENDIF
 #IFDEF    ST@LINHA2@PASEP@AUDESP
 #ELSE
    STRING ST@LINHA2@PASEP@AUDESP    71
 #ENDIF
 
 MOVEALL '' TO ST@EXERCICIO@PASEP@AUDESP ST@LINHA1@PASEP@AUDESP ST@LINHA2@PASEP@AUDESP
 
 MOVE !1    TO ST@EXERCICIO@PASEP@AUDESP
 INDICATE @REGRA@PASEP@AUDESP! FALSE
 
 IF ST@EXERCICIO@PASEP@AUDESP LE '2017' BEGIN
  MOVE 'Informe o modelo do demonstrativo <1> AUDESP                           ' TO ST@LINHA1@PASEP@AUDESP
  MOVE '                                  <2> STN (excluindo contr.PIS/PASEP) :' TO ST@LINHA2@PASEP@AUDESP
 END
#ENDCOMMAND

//-- busca regra das economicas divergentes
//-- !1 - exercicio corrente
#COMMAND VERIFICA_REGRA_PASEP_AUDESP
 #IFDEF    ST@ECONOMICA@PASEP@AUDESP
 #ELSE
    STRING ST@ECONOMICA@PASEP@AUDESP 12
 #ENDIF
 #IFDEF     IT@TIPO@PASEP@AUDESP
 #ELSE
    INTEGER IT@TIPO@PASEP@AUDESP
 #ENDIF
 MOVE  0 TO IT@TIPO@PASEP@AUDESP
 MOVE '' TO ST@ECONOMICA@PASEP@AUDESP
 
 MOVE !1 TO IT@TIPO@PASEP@AUDESP
 
 INDICATE @REGRA@PASEP@AUDESP! FALSE
 INDICATE @NOTA@PASEP@AUDESP!  FALSE
 
 INDICATE @REGRA@PASEP@AUDESP! AS IT@TIPO@PASEP@AUDESP EQ '2'
 
 MOVE '3.3.90.47.12' TO ST@ECONOMICA@PASEP@AUDESP
 
#ENDCOMMAND

//-- imprime a nota padr└o CONAM ----
#COMMAND IMPRIME_NOTA_PASEP_AUDESP
#IFDEF ST@NOTA@EXPLICATIVA
#ELSE
   STRING ST@NOTA@EXPLICATIVA 150
#ENDIF
 BLANKFORM IMPRIME_NOTA_EXPLICATIVA
 MOVE 'Nota explicativa:' TO ST@NOTA@EXPLICATIVA 
 PRINT ST@NOTA@EXPLICATIVA TO IMPRIME_NOTA_EXPLICATIVA.1
 MOVE 'Relatorio elaborado de acordo com a Deliberacao TC-A-023996/026/15 do TCESP, tendo esta municipalidade ja adequado sua execucao orcamentaria' TO ST@NOTA@EXPLICATIVA 
 PRINT ST@NOTA@EXPLICATIVA TO IMPRIME_NOTA_EXPLICATIVA.2
 MOVE 'no exercicio de 2016 a presente deliberacao.' TO ST@NOTA@EXPLICATIVA 
 PRINT ST@NOTA@EXPLICATIVA TO IMPRIME_NOTA_EXPLICATIVA.3
 OUTPUT IMPRIME_NOTA_EXPLICATIVA
#ENDCOMMAND
 
//----------------------------------------------------------------------------
//-- define versao de demonstrativos RREO e RGF: Homologacao e Oficial(Cliente)
//-- <tipo_quadro> <n_anexo> <exercicio> <mes> <data_de_geracao>
#COMMAND VERIFICA_VERSAO_STN
 #IFDEF     IT@VERSAO@STN
 #ELSE
    INTEGER IT@VERSAO@STN
 #ENDIF
 #IFDEF     IT@VERSAO@STN@OFICIAL
 #ELSE
    INTEGER IT@VERSAO@STN@OFICIAL
 #ENDIF
 #IFDEF     ST@VERSAO@STN@HOMOLOGACAO
 #ELSE
    STRING  ST@VERSAO@STN@HOMOLOGACAO 3
 #ENDIF
 #IFDEF     IT@EXERCICIO@STN
 #ELSE
    INTEGER IT@EXERCICIO@STN
 #ENDIF
 #IFDEF     ST@VERSAO@STN
 #ELSE
    STRING  ST@VERSAO@STN  25
 #ENDIF
 #IFDEF     ST@TIPO@STN
 #ELSE
    STRING  ST@TIPO@STN  4
 #ENDIF
 #IFDEF     IT@ANEXO@STN
 #ELSE
    INTEGER IT@ANEXO@STN 
 #ENDIF
 #IFDEF     IT@MES@STN
 #ELSE
    INTEGER IT@MES@STN 
 #ENDIF
 #IFDEF     DT@DATA@STN
 #ELSE
    DATE    DT@DATA@STN 
 #ENDIF
 #IFDEF     ST@AUX@STN
 #ELSE
    STRING  ST@AUX@STN  3
 #ENDIF
 MOVEALL '' TO ST@TIPO@STN   ST@VERSAO@STN@HOMOLOGACAO ST@VERSAO@STN  
 MOVEALL 0  TO IT@VERSAO@STN IT@VERSAO@STN@OFICIAL     IT@MES@STN    IT@EXERCICIO@STN 
 
 MOVE !1      TO ST@TIPO@STN
 MOVE !2      TO IT@ANEXO@STN
 MOVE !3      TO IT@EXERCICIO@STN
 MOVE !4      TO IT@MES@STN
 MOVE !5      TO DT@DATA@STN
 MOVE 'CONAM' TO ST@VERSAO@STN
 
 IF IT@EXERCICIO@STN EQ '2017' BEGIN
  IF IT@MES@STN LE 4 BEGIN
   IF ST@TIPO@STN EQ 'RREO' BEGIN
    IF IT@ANEXO@STN EQ 6 MOVE 2 TO IT@VERSAO@STN
    ELSE IF IT@ANEXO@STN EQ 5 BEGIN
     IF IT@MES@STN  LT 4 MOVE 3 TO IT@VERSAO@STN
     ELSE BEGIN
      MOVE 4 TO IT@VERSAO@STN
      MOVE 1 TO IT@VERSAO@STN@OFICIAL
     END 
    END 
    ELSE BEGIN //--- (1-7)
     IF IT@MES@STN  LT 4 MOVE 1 TO IT@VERSAO@STN
     ELSE BEGIN
           IF IT@ANEXO@STN EQ 12 MOVE 1 TO IT@VERSAO@STN
      ELSE IF IT@ANEXO@STN EQ 3  MOVE 1 TO IT@VERSAO@STN
      ELSE                       MOVE 4 TO IT@VERSAO@STN
     END 
    END 
   END
   IF ST@TIPO@STN EQ 'RGF' BEGIN
    MOVE 4 TO IT@VERSAO@STN
   END
   APPEND ST@VERSAO@STN ' ' IT@VERSAO@STN '.' IT@VERSAO@STN@OFICIAL '-' IT@EXERCICIO@STN
  END
  ELSE BEGIN
   IF ST@TIPO@STN EQ 'RREO' BEGIN
    MOVE '5'   TO IT@VERSAO@STN 
         IF IT@ANEXO@STN EQ 6  MOVE '002' TO ST@VERSAO@STN@HOMOLOGACAO //--- (28/06/2017) ---
    ELSE IF IT@ANEXO@STN EQ 3  MOVE '003' TO ST@VERSAO@STN@HOMOLOGACAO //--- (20/07/2017) --- deducao de rec.patrim ---
    ELSE IF IT@ANEXO@STN EQ 11 MOVE '002' TO ST@VERSAO@STN@HOMOLOGACAO //--- (22/11/2017) --- descricao coluna (j) ---
    ELSE IF IT@ANEXO@STN EQ 14 MOVE '003' TO ST@VERSAO@STN@HOMOLOGACAO //--- (22/11/2017) --- rec.despesa prev ---
    ELSE IF IT@ANEXO@STN EQ 1  MOVE '002' TO ST@VERSAO@STN@HOMOLOGACAO //--- (24/07/2017) --- amort. divida - 841 a 844 ---
    ELSE IF IT@ANEXO@STN EQ 4  MOVE '004' TO ST@VERSAO@STN@HOMOLOGACAO //--- (25/09/2017) --- outras receitas (1.7.3) ---
    ELSE IF IT@ANEXO@STN EQ 8 BEGIN
     MOVE '1'   TO IT@VERSAO@STN@OFICIAL
     MOVE '004' TO ST@VERSAO@STN@HOMOLOGACAO //--- (25/07/2017) ---
    END
    ELSE                       MOVE '001' TO ST@VERSAO@STN@HOMOLOGACAO
   END
   IF ST@TIPO@STN EQ 'RGF' BEGIN
    MOVE '5'   TO IT@VERSAO@STN 
         IF IT@ANEXO@STN EQ 1 MOVE '005' TO ST@VERSAO@STN@HOMOLOGACAO //--- (21/08/2017) - sfpm-871 ---
    ELSE IF IT@ANEXO@STN EQ 2 MOVE '005' TO ST@VERSAO@STN@HOMOLOGACAO //--- (18/09/2017) - sfpm-820 ---
    ELSE IF IT@ANEXO@STN EQ 3 MOVE '003' TO ST@VERSAO@STN@HOMOLOGACAO //--- (18/08/2017) - sfpm-821 ---
    ELSE IF IT@ANEXO@STN EQ 4 MOVE '005' TO ST@VERSAO@STN@HOMOLOGACAO //--- (27/09/2017) - sfpm-822 ---
    ELSE IF IT@ANEXO@STN EQ 6 MOVE '004' TO ST@VERSAO@STN@HOMOLOGACAO //--- (22/11/2017) - sfpm-823 ---
    ELSE                      MOVE '001' TO ST@VERSAO@STN@HOMOLOGACAO
   END
   
   APPEND ST@VERSAO@STN '-' ST@TIPO@STN IT@ANEXO@STN '-' IT@EXERCICIO@STN '-' IT@VERSAO@STN '.' IT@VERSAO@STN@OFICIAL
   TRIM ST@VERSAO@STN TO ST@VERSAO@STN
   IF ST@USUARIO IN 'CONAM#NOSSA' BEGIN
    APPEND ST@VERSAO@STN '.' ST@VERSAO@STN@HOMOLOGACAO
   END 
  END
 END 
 ELSE IF IT@EXERCICIO@STN LT '2017' BEGIN
  IF ST@TIPO@STN EQ 'RGF' BEGIN
   MOVE 2 TO IT@VERSAO@STN
  END
  APPEND ST@VERSAO@STN ' ' IT@VERSAO@STN '.' IT@VERSAO@STN@OFICIAL '-' IT@EXERCICIO@STN
 END
 ELSE BEGIN
  IF ST@TIPO@STN EQ 'RREO' BEGIN
   MOVE '5'   TO IT@VERSAO@STN 
        IF IT@ANEXO@STN EQ 6  MOVE '002' TO ST@VERSAO@STN@HOMOLOGACAO //--- (28/06/2017) ---
   ELSE IF IT@ANEXO@STN EQ 3  MOVE '003' TO ST@VERSAO@STN@HOMOLOGACAO //--- (20/07/2017) --- deducao de rec.patrim ---
   ELSE IF IT@ANEXO@STN EQ 11 MOVE '002' TO ST@VERSAO@STN@HOMOLOGACAO //--- (22/11/2017) --- descricao coluna (j) ---
   ELSE IF IT@ANEXO@STN EQ 14 MOVE '003' TO ST@VERSAO@STN@HOMOLOGACAO //--- (22/11/2017) --- rec.despesa prev ---
   ELSE IF IT@ANEXO@STN EQ 1  MOVE '002' TO ST@VERSAO@STN@HOMOLOGACAO //--- (24/07/2017) --- amort. divida - 841 a 844 ---
   ELSE IF IT@ANEXO@STN EQ 4  MOVE '004' TO ST@VERSAO@STN@HOMOLOGACAO //--- (25/09/2017) --- outras receitas (1.7.3) ---
   ELSE IF IT@ANEXO@STN EQ 8 BEGIN
    MOVE '1'   TO IT@VERSAO@STN@OFICIAL
    MOVE '004' TO ST@VERSAO@STN@HOMOLOGACAO //--- (25/07/2017) ---
   END
   ELSE                       MOVE '001' TO ST@VERSAO@STN@HOMOLOGACAO
  END
  IF ST@TIPO@STN EQ 'RGF' BEGIN
   MOVE '5'   TO IT@VERSAO@STN 
        IF IT@ANEXO@STN EQ 1 MOVE '005' TO ST@VERSAO@STN@HOMOLOGACAO //--- (21/08/2017) - sfpm-871 ---
   ELSE IF IT@ANEXO@STN EQ 2 MOVE '005' TO ST@VERSAO@STN@HOMOLOGACAO //--- (18/09/2017) - sfpm-820 ---
   ELSE IF IT@ANEXO@STN EQ 3 MOVE '003' TO ST@VERSAO@STN@HOMOLOGACAO //--- (18/08/2017) - sfpm-821 ---
   ELSE IF IT@ANEXO@STN EQ 4 MOVE '005' TO ST@VERSAO@STN@HOMOLOGACAO //--- (27/09/2017) - sfpm-822 ---
   ELSE IF IT@ANEXO@STN EQ 6 MOVE '003' TO ST@VERSAO@STN@HOMOLOGACAO //--- (15/09/2017) - sfpm-823 ---
   ELSE                      MOVE '001' TO ST@VERSAO@STN@HOMOLOGACAO
  END
  
  APPEND ST@VERSAO@STN '-' ST@TIPO@STN IT@ANEXO@STN '-' IT@EXERCICIO@STN '-' IT@VERSAO@STN '.' IT@VERSAO@STN@OFICIAL 
  TRIM ST@VERSAO@STN TO ST@VERSAO@STN
  IF ST@USUARIO IN 'CONAM#NOSSA' BEGIN
   APPEND ST@VERSAO@STN '.' ST@VERSAO@STN@HOMOLOGACAO
  END 
 END 
#ENDCOMMAND
//----------------------------------------------------------------------------

//--
//--utilizado para abrir arquivos em outros diretorios "open as"
//--
#COMMAND ABRE
 #IFDEF    ST@ABRE
 #ELSE
    STRING ST@ABRE 255
 #ENDIF
 #IFDEF    ST@BARRA
 #ELSE
    STRING ST@BARRA 1
 #ENDIF

 VERSAO
 [ LINUX!] BEGIN
            MOVE '/' TO ST@BARRA
           END
 [~LINUX!] BEGIN
            MOVE '\' TO ST@BARRA
           END

 MOVE (TRIM(!1)) TO ST@ABRE
 APPEND ST@ABRE ST@BARRA !2
 LOWERCASE ST@ABRE TO ST@ABRE
 OPEN ST@ABRE AS !3
#ENDCOMMAND

#COMMAND SYSOPER
 //--- SYSOPER - Identifica o sistema operacional atraves da barra
 //--- MARCOS  - 29.05.2003
 //--- '/'     - linux! true
 //--- '\'     - linux! false

 #IFDEF ST@SYSOPER
 #ELSE
   STRING ST@SYSOPER
 #ENDIF

 MOVE '' TO ST@SYSOPER
 INDICATE LINUX! FALSE

 MOVE ( SysConf( SYSCONF_DIR_SEPARATOR )) TO ST@SYSOPER

 INDICATE LINUX! AS ST@SYSOPER EQ '/'
#ENDCOMMAND

//--
//--verifica se um arquivo existe em um diretorio
//--
#COMMAND VERIFICA_EXISTENCIA_ARQUIVO
 #IFDEF    ST@VERIFICA@ARQUIVO
 #ELSE
    STRING ST@VERIFICA@ARQUIVO 255
 #ENDIF
 VERSAO

 INDICATE @TEM! TRUE
 MOVE !1 TO ST@VERIFICA@ARQUIVO
 [ LINUX!] APPEND ST@VERIFICA@ARQUIVO '/' !2
 [~LINUX!] APPEND ST@VERIFICA@ARQUIVO '\' !2
 DIRECT_INPUT ST@VERIFICA@ARQUIVO
 [ SEQEOF] INDICATE @TEM! FALSE
#ENDCOMMAND

//----------------------------------------------------------------------------

//--
//-- retorna codigo numerico
//--
#COMMAND LIMPA_CODIGO
#IFDEF    ST@LIMPA
#ELSE
   STRING ST@LIMPA
#ENDIF
#IFDEF    ST@CODIGO@AUXILIAR
#ELSE
   STRING ST@CODIGO@AUXILIAR 255
#ENDIF
#IFDEF    IT@AUX
#ELSE
   INTEGER IT@AUX
#ENDIF

 MOVE !1 TO ST@LIMPA
 MOVE '' TO ST@CODIGO@AUXILIAR
 MOVE 0  TO IT@AUX

 FOR IT@AUX FROM 1 TO !3
  IF (MID(ST@LIMPA,1,IT@AUX)) IN '0123456789' APPEND ST@CODIGO@AUXILIAR (MID(ST@LIMPA,1,IT@AUX))
 LOOP

 TRIM ST@CODIGO@AUXILIAR TO ST@CODIGO@AUXILIAR

 MOVE ST@CODIGO@AUXILIAR TO !2
#ENDCOMMAND

//--
//-- retorna codigo asc
//--
#COMMAND LIMPA_CODIGO_ASC
#IFDEF    ST@LIMPA
#ELSE
   STRING ST@LIMPA
#ENDIF
#IFDEF    ST@CODIGO@AUXILIAR
#ELSE
   STRING ST@CODIGO@AUXILIAR 255
#ENDIF
#IFDEF    IT@AUX
#ELSE
   INTEGER IT@AUX
#ENDIF

 MOVE !1 TO ST@LIMPA
 MOVE '' TO ST@CODIGO@AUXILIAR
 MOVE 0  TO IT@AUX

 FOR IT@AUX FROM 1 TO !3
  IF (MID(ST@LIMPA,1,IT@AUX)) IN '0123456789'                 APPEND ST@CODIGO@AUXILIAR (MID(ST@LIMPA,1,IT@AUX))
  IF (MID(ST@LIMPA,1,IT@AUX)) IN 'ABCDEFGHIJKLMNOPQRSTUVXZWY' APPEND ST@CODIGO@AUXILIAR (MID(ST@LIMPA,1,IT@AUX))
  IF (MID(ST@LIMPA,1,IT@AUX)) IN 'abcdefghijklmnopqrstuvxzwy' APPEND ST@CODIGO@AUXILIAR (MID(ST@LIMPA,1,IT@AUX))
 LOOP
 TRIM ST@CODIGO@AUXILIAR TO ST@CODIGO@AUXILIAR

 MOVE ST@CODIGO@AUXILIAR TO !2
#ENDCOMMAND

//---- VERIFICA_CODIGO --- PARA CAMPOS DE CADASTRO DO AUDESP
//---- !1=CAMPO !2=TAMANHO !3=LABEL PARA RETORNO !4=TIPO DE DADOS DEFINIDOS NO COMANDO
//---- !4 = 1 = {'0123456789abcdefghijklmnopqrstuvwxyz-ABCDEFGHIJKLMNOPQRSTUVWXYZ-'}
//----
//----
#COMMAND VERIFICA_CODIGO
#IFDEF    ST@BYTE
#ELSE
   STRING ST@BYTE
#ENDIF
#IFDEF     IT@CONTADOR
#ELSE
   INTEGER IT@CONTADOR
#ENDIF
#IFDEF     IT@TRACO
#ELSE
   INTEGER IT@TRACO
#ENDIF
#IFDEF     IT@BARRA
#ELSE
   INTEGER IT@BARRA
#ENDIF

MOVE 0 TO IT@CONTADOR
MOVE 0 TO IT@TRACO
MOVE 0 TO IT@BARRA

IF !1 NE '' BEGIN
             FOR IT@CONTADOR FROM 1 TO !2
              INDICATE @VALIDO! FALSE
              MID !1 TO ST@BYTE 1 IT@CONTADOR
              IF !4 EQ '1' INDICATE @VALIDO! AS ST@BYTE IN '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-'
              IF !4 EQ '2' INDICATE @VALIDO! AS ST@BYTE IN '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
              
              IF ST@BYTE EQ '-' INCREMENT IT@TRACO
              IF ST@BYTE EQ '/' INCREMENT IT@BARRA
              
              [~@VALIDO!] BEGIN
                           ADVERTE 'CARACTER INVALIDO PARA O CAMPO'
                           //CLEARFORM !1
                           MOVE !2 TO IT@CONTADOR
                           GOTO !3
                          END
             LOOP
            END
#ENDCOMMAND

//----------------------------------------------------------------------------

#COMMAND VERIFICA_MES_XML
 //!1 = mes solicitado
 //!2 = tipo de pacote

#IFDEF    ST@MES@AUXILIAR
#ELSE
   STRING ST@MES@AUXILIAR 2
#ENDIF
#IFDEF    ST@MES@AUXILIAR@CONSOLIDADO
#ELSE
   STRING ST@MES@AUXILIAR@CONSOLIDADO 2
#ENDIF
#IFDEF    ST@MES@DESCRICAO
#ELSE
   STRING ST@MES@DESCRICAO
#ENDIF

 MOVE '' TO ST@MES@DESCRICAO 
 MOVE 'M┬S ' TO ST@MES@DESCRICAO
 APPEND ST@MES@DESCRICAO !1 
 APPEND ST@MES@DESCRICAO ' AINDA ESTA ABERTO, IMPOSS║VEL PROCESSAR SOLICITA─▌O.'

 CLEAR ENCERRA
 MOVE ST@CODIGO@ENTIDADE TO ENCERRA.COD_ENTIDADE
 MOVE PARGERAL.EXERCICIO TO ENCERRA.ANO
 MOVE !1                 TO ENCERRA.MES
 FIND EQ ENCERRA BY INDEX.1
 IF ENCERRA.DEFINITIVO EQ '' BEGIN
  IF ENCERRA.STATUS EQ '' BEGIN
   IF (!2 EQ 'STN') BEGIN
    ADVERTE ST@MES@DESCRICAO 
    GOTO LB_CONTINUA
    ABORT
   END 
   ELSE BEGIN
    ADVERTE 'M┬S SOLICITADO AINDA ESTA ABERTO, IMPOSS║VEL PROCESSAR SOLICITA─▌O'
    GOTO INICIO
    END 
   END
  ELSE BEGIN
   IF (!2 EQ '') BEGIN
    ADVERTE 'M┬S SOLICITADO EST═ EM ABERTO, O RESULTADO DOS RELAT╒RIOS PODER═ SOFRER ALTERA─■ES.'
    GOTO LB_CONTINUA
    END
   ELSE IF (!2 EQ 'STN') BEGIN
    ADVERTE ST@MES@DESCRICAO 
    GOTO LB_CONTINUA
    ABORT
   END 
   ELSE BEGIN
    ADVERTE 'M┬S SOLICITADO NAO FOI FECHADO DEFINITIVO, IMPOSS║VEL PROCESSAR SOLICITA─▌O'
    GOTO INICIO
    END
   END
  END
 ELSE BEGIN
  IF ENCERRA.STATUS EQ '' BEGIN
   ADVERTE 'PROBLEMAS NO ARQUIVO DE ENCERRAMENTO'
   GOTO INICIO
   END
  END

 //--verifica se mes solicitado j═ foi enviado ao tce
 IF ((!2 EQ 'CAD') AND (ENCERRA.ENVIOU_CADASTRO NE '')) BEGIN
  ADVERTE 'ATEN─▌O, CADASTRO DO M┬S SOLICITADO J═ ENVIADO AO TCE'
  GOTO INICIO
  END
 IF ((!2 EQ 'BAL') AND (ENCERRA.ENVIOU_CONTABIL NE '')) BEGIN
  ADVERTE 'ATEN─▌O, BALAN─O E CONTAS CORRENTES ISOLADO DO M┬S SOLICITADO J═ ENVIADO AO TCE'
  GOTO INICIO
  END
 IF ((!2 EQ 'APP') AND (ENCERRA.ENVIOU_APP NE '')) BEGIN
  ADVERTE 'ATEN─▌O, ALTERA─▌O DAS PE─AS DE PLANEJAMENTO DO M┬S SOLICITADO J═ ENVIADO AO TCE'
  GOTO INICIO
  END
 IF ((!2 EQ 'CBM') AND (ENCERRA.ENVIOU_CONCILIA NE '')) BEGIN
  ADVERTE 'ATEN─▌O, CONCILIA─▌O BANC═RIA DO M┬S SOLICITADO J═ ENVIADO AO TCE'
  GOTO INICIO
  END

 //--verifica se mes anterior ao solicitado j═ foi fechado e enviado ao tce
 IF !1 GT '01' BEGIN
  CALC (!1 - 1) TO ST@MES@AUXILIAR
  COMZEROS ST@MES@AUXILIAR 2

  CLEAR ENCERRA
  MOVE ST@CODIGO@ENTIDADE TO ENCERRA.COD_ENTIDADE
  MOVE PARGERAL.EXERCICIO TO ENCERRA.ANO
  MOVE ST@MES@AUXILIAR    TO ENCERRA.MES
  FIND EQ ENCERRA BY INDEX.1
  [~FOUND] BEGIN
            ADVERTE 'PROBLEMAS NO ARQUIVO DE ENCERRAMENTO DE M┬S'
            GOTO INICIO
           END

  IF ENCERRA.DEFINITIVO EQ '' BEGIN
   IF (!2 EQ '') BEGIN
    ADVERTE 'M┬S SOLICITADO EST═ EM ABERTO, O RESULTADO DOS RELAT╒RIOS PODER═ SOFRER ALTERA─■ES.'
    GOTO LB_CONTINUA
    END
   ELSE IF (!2 EQ 'STN') BEGIN
    ADVERTE ST@MES@DESCRICAO 
    GOTO LB_CONTINUA
    ABORT
    END 
   ELSE BEGIN
    ADVERTE 'M┬S ANTERIOR AO SOLICITADO EST═ ABERTO, IMPOSS║VEL GERA─▌O DOS ARQUIVOS XML'
    GOTO INICIO
    END
   END
  ELSE BEGIN
   IF ENCERRA.STATUS EQ '' BEGIN
    ADVERTE 'PROBLEMAS NO ARQUIVO DE ENCERRAMENTO'
    GOTO INICIO
    END
   END

  IF ((!2 EQ 'CAD') AND (ENCERRA.ENVIOU_CADASTRO EQ '')) BEGIN
   ADVERTE 'ATEN─▌O, CADASTRO DO M┬S ANTERIOR N▌O ENVIADO AO TCE - ATUALIZE INFORMA─■ES NO M╒DULO DE FECHAMENTO (INF. PACOTES TCE-SP)'
   GOTO INICIO
   END
  IF ((!2 EQ 'BAL') AND (ENCERRA.ENVIOU_CONTABIL EQ '')) BEGIN
   ADVERTE 'ATEN─▌O, BALAN─O E CONTAS CORRENTES ISOLADO DO M┬S ANTERIOR N▌O ENVIADO AO TCE - ATUALIZE INFORMA─■ES NO M╒DULO DE FECHAMENTO (INF. PACOTES TCE-SP)'
   GOTO INICIO
   END
  IF ((!2 EQ 'APP') AND (ENCERRA.ENVIOU_APP EQ '')) BEGIN
   ADVERTE 'ATEN─▌O, ALTERA─▌O DAS PE─AS DE PLANEJAMENTO DO M┬S ANTERIOR N▌O ENVIADO AO TCE - ATUALIZE INFORMA─■ES NO M╒DULO DE FECHAMENTO (INF. PACOTES TCE-SP)'
   GOTO INICIO
   END
  IF ((!2 EQ 'CBM') AND (ENCERRA.ENVIOU_CONCILIA EQ '')) BEGIN
   ADVERTE 'ATEN─▌O, CONCILIACAO BANCARIA DO M┬S ANTERIOR N▌O ENVIADO AO TCE - ATUALIZE INFORMA─■ES NO M╒DULO DE FECHAMENTO (INF. PACOTES TCE-SP)'
   GOTO INICIO
   END
  END

 //--verifica se mes posterior j═ esta fechado ( isolado )
 IF !1 LT '12' BEGIN
  CALC (!1 + 1) TO ST@MES@AUXILIAR
  COMZEROS ST@MES@AUXILIAR 2

  CLEAR ENCERRA
  MOVE ST@CODIGO@ENTIDADE TO ENCERRA.COD_ENTIDADE
  MOVE PARGERAL.EXERCICIO TO ENCERRA.ANO
  MOVE ST@MES@AUXILIAR    TO ENCERRA.MES
  FIND EQ ENCERRA BY INDEX.1
  [~FOUND] BEGIN
            ADVERTE 'PROBLEMAS NO ARQUIVO DE ENCERRAMENTO DE M┬S'
            GOTO INICIO
           END

  //--mes de janeiro permite gerar os xmls com mes de fevereiro fechado mas nao enviado
  IF !1 EQ '01' BEGIN
   IF ((ENCERRA.STATUS NE '') AND (!2 NE '') AND (!2 NE 'CBM') AND (!2 NE 'STN') AND (ENCERRA.ID_CONTABIL NE '')) BEGIN
    ADVERTE 'M┬S POSTERIOR AO SOLICITADO J═ EST═ FECHADO E ENVIADO, IMPOSS║VEL GERA─▌O DOS ARQUIVOS XML'
    GOTO INICIO
    END
   END
  ELSE BEGIN
   IF ((ENCERRA.STATUS NE '') AND (!2 NE '') AND (!2 NE 'CBM') AND (!2 NE 'STN')) BEGIN
    ADVERTE 'M┬S POSTERIOR AO SOLICITADO J═ EST═ FECHADO, IMPOSS║VEL GERA─▌O DOS ARQUIVOS XML'
    GOTO INICIO
    END
   END
  END
#ENDCOMMAND

//----------------------------------------------------------------------------

#COMMAND TIRA_ACENTO
#IFDEF    ST@DESCRICAO@AUX 255
#ELSE
   STRING ST@DESCRICAO@AUX 255
#ENDIF

 MOVE !1 TO ST@DESCRICAO@AUX

 REPEAT
  REPLACE "А" IN ST@DESCRICAO@AUX WITH "a"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "Ц" IN ST@DESCRICAO@AUX WITH "a"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "Ю" IN ST@DESCRICAO@AUX WITH "a"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "Б" IN ST@DESCRICAO@AUX WITH "a"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "а" IN ST@DESCRICAO@AUX WITH "A"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "ц" IN ST@DESCRICAO@AUX WITH "A"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "ю" IN ST@DESCRICAO@AUX WITH "A"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "б" IN ST@DESCRICAO@AUX WITH "A"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "И" IN ST@DESCRICAO@AUX WITH "e"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "Й" IN ST@DESCRICAO@AUX WITH "e"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "и" IN ST@DESCRICAO@AUX WITH "E"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "й" IN ST@DESCRICAO@AUX WITH "E"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "М" IN ST@DESCRICAO@AUX WITH "i"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "м" IN ST@DESCRICAO@AUX WITH "I"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "С" IN ST@DESCRICAO@AUX WITH "o"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "У" IN ST@DESCRICAO@AUX WITH "o"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "Т" IN ST@DESCRICAO@AUX WITH "o"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "с" IN ST@DESCRICAO@AUX WITH "O"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "у" IN ST@DESCRICAO@AUX WITH "O"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "т" IN ST@DESCRICAO@AUX WITH "O"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "З" IN ST@DESCRICAO@AUX WITH "u"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "Э" IN ST@DESCRICAO@AUX WITH "u"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "з" IN ST@DESCRICAO@AUX WITH "u"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "э" IN ST@DESCRICAO@AUX WITH "U"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "Г" IN ST@DESCRICAO@AUX WITH "c"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "г" IN ST@DESCRICAO@AUX WITH "C"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "√" IN ST@DESCRICAO@AUX WITH "-"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "╘" IN ST@DESCRICAO@AUX WITH ""
 UNTIL [~FOUND]
 REPEAT
  REPLACE "╝" IN ST@DESCRICAO@AUX WITH ""
 UNTIL [~FOUND]
 REPEAT
  REPLACE "╨" IN ST@DESCRICAO@AUX WITH "o"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "?" IN ST@DESCRICAO@AUX WITH "a"
 UNTIL [~FOUND]

 MOVE ST@DESCRICAO@AUX TO !2
#ENDCOMMAND

#COMMAND RETIRA_ACENTO
#IFDEF    ST@DESCRICAO@AUX
#ELSE
   STRING ST@DESCRICAO@AUX 255
#ENDIF

 MOVE !1 TO ST@DESCRICAO@AUX

 REPEAT
  REPLACE "╣" IN ST@DESCRICAO@AUX WITH "A"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "═" IN ST@DESCRICAO@AUX WITH "a"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "╤" IN ST@DESCRICAO@AUX WITH "A" 
 UNTIL [~FOUND]
 REPEAT
  REPLACE "┐" IN ST@DESCRICAO@AUX WITH "a" 
 UNTIL [~FOUND]
 REPEAT
  REPLACE "г" IN ST@DESCRICAO@AUX WITH "A" 
 UNTIL [~FOUND]
 REPEAT
  REPLACE "ф" IN ST@DESCRICAO@AUX WITH "a" 
 UNTIL [~FOUND]
 REPEAT
  REPLACE "┘" IN ST@DESCRICAO@AUX WITH "a" 
 UNTIL [~FOUND]
 REPEAT
  REPLACE "╥" IN ST@DESCRICAO@AUX WITH "A" 
 UNTIL [~FOUND]
 REPEAT
  REPLACE "└" IN ST@DESCRICAO@AUX WITH "a"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "├" IN ST@DESCRICAO@AUX WITH "a"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "▐" IN ST@DESCRICAO@AUX WITH "A"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "▌" IN ST@DESCRICAO@AUX WITH "A"
 UNTIL [~FOUND]

 REPEAT
  REPLACE "р" IN ST@DESCRICAO@AUX WITH "E" 
 UNTIL [~FOUND]
 REPEAT
  REPLACE "┬" IN ST@DESCRICAO@AUX WITH "e" 
 UNTIL [~FOUND]
 REPEAT
  REPLACE "░" IN ST@DESCRICAO@AUX WITH "E"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "┌" IN ST@DESCRICAO@AUX WITH "e"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "┴" IN ST@DESCRICAO@AUX WITH "e"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "┼" IN ST@DESCRICAO@AUX WITH "e"
 UNTIL [~FOUND]

 REPEAT
  REPLACE "║" IN ST@DESCRICAO@AUX WITH "i" 
 UNTIL [~FOUND]
 REPEAT
  REPLACE "ж" IN ST@DESCRICAO@AUX WITH "I"
 UNTIL [~FOUND]

 REPEAT
  REPLACE "Ю" IN ST@DESCRICAO@AUX WITH "O"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "╒" IN ST@DESCRICAO@AUX WITH "o"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "Б" IN ST@DESCRICAO@AUX WITH "O" 
 UNTIL [~FOUND]
 REPEAT
  REPLACE "⌠" IN ST@DESCRICAO@AUX WITH "o" 
 UNTIL [~FOUND]
 REPEAT
  REPLACE "Е" IN ST@DESCRICAO@AUX WITH "O" 
 UNTIL [~FOUND]
 REPEAT
  REPLACE "≥" IN ST@DESCRICAO@AUX WITH "O" 
 UNTIL [~FOUND]
 REPEAT
  REPLACE "■" IN ST@DESCRICAO@AUX WITH "o" 
 UNTIL [~FOUND]
 REPEAT
  REPLACE "⌠" IN ST@DESCRICAO@AUX WITH "o" 
 UNTIL [~FOUND]
 REPEAT
  REPLACE "Д" IN ST@DESCRICAO@AUX WITH "o" 
 UNTIL [~FOUND]

 REPEAT
  REPLACE "И" IN ST@DESCRICAO@AUX WITH "U"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "ё" IN ST@DESCRICAO@AUX WITH "u"
 UNTIL [~FOUND]
 REPEAT
  REPLACE " " IN ST@DESCRICAO@AUX WITH "U" 
 UNTIL [~FOUND]
 REPEAT
  REPLACE "│" IN ST@DESCRICAO@AUX WITH "u" 
 UNTIL [~FOUND]

 REPEAT
  REPLACE "─" IN ST@DESCRICAO@AUX WITH "C" 
 UNTIL [~FOUND]
 REPEAT
  REPLACE "┤" IN ST@DESCRICAO@AUX WITH "c"
 UNTIL [~FOUND]

 REPEAT
  REPLACE "|" IN ST@DESCRICAO@AUX WITH "a"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "Ё" IN ST@DESCRICAO@AUX WITH "a"
 UNTIL [~FOUND]
 REPEAT
  REPLACE "╨" IN ST@DESCRICAO@AUX WITH "a"
 UNTIL [~FOUND]
 MOVE ST@DESCRICAO@AUX TO !2
#ENDCOMMAND

//----------------------------------------------------------------------------

FUNCTION CALCULA_GRAU_RECEITA GLOBAL STRING ST@CODIGO@RECEITA STRING ST@ANO RETURNS INTEGER 
  LOCAL INTEGER IT@GRAU
  
  MOVE 0 TO IT@GRAU
  
  IF ST@ANO LE '2017' BEGIN
                       IF (MID(ST@CODIGO@RECEITA,1,1))  NE '0'   MOVE 1 TO IT@GRAU
                       IF (MID(ST@CODIGO@RECEITA,1,3))  NE '0'   MOVE 2 TO IT@GRAU
                       IF (MID(ST@CODIGO@RECEITA,1,5))  NE '0'   MOVE 3 TO IT@GRAU
                       IF (MID(ST@CODIGO@RECEITA,1,7))  NE '0'   MOVE 4 TO IT@GRAU
                       IF (MID(ST@CODIGO@RECEITA,2,9))  NE '00'  MOVE 5 TO IT@GRAU
                       IF (MID(ST@CODIGO@RECEITA,2,12)) NE '00'  MOVE 6 TO IT@GRAU
                       IF (MID(ST@CODIGO@RECEITA,3,15)) NE '000' MOVE 7 TO IT@GRAU
                      END
  ELSE BEGIN
        IF (MID(ST@CODIGO@RECEITA,1,1))  NE '0'    MOVE 1 TO IT@GRAU
        IF (MID(ST@CODIGO@RECEITA,1,3))  NE '0'    MOVE 2 TO IT@GRAU
        IF (MID(ST@CODIGO@RECEITA,1,5))  NE '0'    MOVE 3 TO IT@GRAU
        IF (MID(ST@CODIGO@RECEITA,1,7))  NE '0'    MOVE 4 TO IT@GRAU
        IF (MID(ST@CODIGO@RECEITA,2,9))  NE '00'   MOVE 5 TO IT@GRAU
        IF (MID(ST@CODIGO@RECEITA,1,12)) NE '0'    MOVE 6 TO IT@GRAU
        IF (MID(ST@CODIGO@RECEITA,1,14)) NE '0'    MOVE 7 TO IT@GRAU
        IF (MID(ST@CODIGO@RECEITA,4,16)) NE '0000' MOVE 8 TO IT@GRAU
       END
  
  FUNCTION_RETURN IT@GRAU
END_FUNCTION

FUNCTION CALCULA_GRAU_DESPESA GLOBAL STRING ST@CODIGO@DESPESA STRING ST@ANO RETURNS INTEGER 
  LOCAL INTEGER IT@GRAU
  
  MOVE 0 TO IT@GRAU
  
  IF (MID(ST@CODIGO@DESPESA,1,1))   NE '0'   MOVE 1 TO IT@GRAU
  IF (MID(ST@CODIGO@DESPESA,1,3))   NE '0'   MOVE 2 TO IT@GRAU
  IF (MID(ST@CODIGO@DESPESA,2,5))   NE '00'  MOVE 3 TO IT@GRAU
  IF (MID(ST@CODIGO@DESPESA,2,8))   NE '00'  MOVE 4 TO IT@GRAU
  IF (MID(ST@CODIGO@DESPESA,2,11))  NE '00'  MOVE 5 TO IT@GRAU
  
  FUNCTION_RETURN IT@GRAU
END_FUNCTION

FUNCTION OBTER_CODIGO_ANTERIOR_RECEITA GLOBAL STRING ST@CODIGO@RECEITA STRING ST@ANO INTEGER IT@GRAU RETURNS STRING
  LOCAL STRING ST@CODIGO@ANTERIOR
  
  MOVE '' TO ST@CODIGO@ANTERIOR
  
  TRIM ST@CODIGO@RECEITA TO ST@CODIGO@RECEITA
  
  IF ST@ANO LE '2017' BEGIN
                            IF IT@GRAU EQ '7' APPEND ST@CODIGO@ANTERIOR (MID(ST@CODIGO@RECEITA,13,1)) '.000'
                       ELSE IF IT@GRAU EQ '6' APPEND ST@CODIGO@ANTERIOR (MID(ST@CODIGO@RECEITA,10,1)) '.00.000'
                       ELSE IF IT@GRAU EQ '5' APPEND ST@CODIGO@ANTERIOR (MID(ST@CODIGO@RECEITA,7,1))  '.00.00.000'
                       ELSE IF IT@GRAU EQ '4' APPEND ST@CODIGO@ANTERIOR (MID(ST@CODIGO@RECEITA,5,1))  '.0.00.00.000'
                       ELSE IF IT@GRAU EQ '3' APPEND ST@CODIGO@ANTERIOR (MID(ST@CODIGO@RECEITA,3,1))  '.0.0.00.00.000'
                       ELSE IF IT@GRAU EQ '2' APPEND ST@CODIGO@ANTERIOR (MID(ST@CODIGO@RECEITA,1,1))  '.0.0.0.00.00.000'
                      END
  ELSE BEGIN
             IF IT@GRAU EQ '8' APPEND ST@CODIGO@ANTERIOR (MID(ST@CODIGO@RECEITA,14,1)) '.0000'
        ELSE IF IT@GRAU EQ '7' APPEND ST@CODIGO@ANTERIOR (MID(ST@CODIGO@RECEITA,12,1)) '.0.0000'
        ELSE IF IT@GRAU EQ '6' APPEND ST@CODIGO@ANTERIOR (MID(ST@CODIGO@RECEITA,10,1)) '.0.0.0000'
        ELSE IF IT@GRAU EQ '5' APPEND ST@CODIGO@ANTERIOR (MID(ST@CODIGO@RECEITA,7,1))  '.00.0.0.0000'
        ELSE IF IT@GRAU EQ '4' APPEND ST@CODIGO@ANTERIOR (MID(ST@CODIGO@RECEITA,5,1))  '.0.00.0.0.0000'
        ELSE IF IT@GRAU EQ '3' APPEND ST@CODIGO@ANTERIOR (MID(ST@CODIGO@RECEITA,3,1))  '.0.0.00.0.0.0000'
        ELSE IF IT@GRAU EQ '2' APPEND ST@CODIGO@ANTERIOR (MID(ST@CODIGO@RECEITA,1,1))  '.0.0.0.00.0.0.0000'
       END
  
  FUNCTION_RETURN ST@CODIGO@ANTERIOR
END_FUNCTION

FUNCTION OBTER_CODIGO_INICIAL_RECEITA GLOBAL STRING ST@CODIGO@RECEITA STRING ST@ANO INTEGER IT@GRAU RETURNS STRING
  LOCAL STRING ST@CODIGO@INICIAL
  
  MOVE '' TO ST@CODIGO@INICIAL
  
  TRIM ST@CODIGO@RECEITA TO ST@CODIGO@RECEITA
  
  IF ST@ANO LE '2017' BEGIN
                            IF IT@GRAU EQ '7' APPEND ST@CODIGO@INICIAL (MID(ST@CODIGO@RECEITA,17,1))
                       ELSE IF IT@GRAU EQ '6' APPEND ST@CODIGO@INICIAL (MID(ST@CODIGO@RECEITA,13,1)) '.000'
                       ELSE IF IT@GRAU EQ '5' APPEND ST@CODIGO@INICIAL (MID(ST@CODIGO@RECEITA,10,1)) '.00.000'
                       ELSE IF IT@GRAU EQ '4' APPEND ST@CODIGO@INICIAL (MID(ST@CODIGO@RECEITA,7,1))  '.00.00.000'
                       ELSE IF IT@GRAU EQ '3' APPEND ST@CODIGO@INICIAL (MID(ST@CODIGO@RECEITA,5,1))  '.0.00.00.000'
                       ELSE IF IT@GRAU EQ '2' APPEND ST@CODIGO@INICIAL (MID(ST@CODIGO@RECEITA,3,1))  '.0.0.00.00.000'
                       ELSE IF IT@GRAU EQ '1' APPEND ST@CODIGO@INICIAL (MID(ST@CODIGO@RECEITA,1,1))  '.0.0.0.00.00.000'
                      END
  ELSE BEGIN
             IF IT@GRAU EQ '8' APPEND ST@CODIGO@INICIAL (MID(ST@CODIGO@RECEITA,19,1))
        ELSE IF IT@GRAU EQ '7' APPEND ST@CODIGO@INICIAL (MID(ST@CODIGO@RECEITA,14,1)) '.0000'
        ELSE IF IT@GRAU EQ '6' APPEND ST@CODIGO@INICIAL (MID(ST@CODIGO@RECEITA,12,1)) '.0.0000'
        ELSE IF IT@GRAU EQ '5' APPEND ST@CODIGO@INICIAL (MID(ST@CODIGO@RECEITA,10,1)) '.0.0.0000'
        ELSE IF IT@GRAU EQ '4' APPEND ST@CODIGO@INICIAL (MID(ST@CODIGO@RECEITA,7,1))  '.00.0.0.0000'
        ELSE IF IT@GRAU EQ '3' APPEND ST@CODIGO@INICIAL (MID(ST@CODIGO@RECEITA,5,1))  '.0.00.0.0.0000'
        ELSE IF IT@GRAU EQ '2' APPEND ST@CODIGO@INICIAL (MID(ST@CODIGO@RECEITA,3,1))  '.0.0.00.0.0.0000'
        ELSE IF IT@GRAU EQ '1' APPEND ST@CODIGO@INICIAL (MID(ST@CODIGO@RECEITA,1,1))  '.0.0.0.00.0.0.0000'
       END
  
  FUNCTION_RETURN ST@CODIGO@INICIAL
END_FUNCTION

FUNCTION OBTER_CODIGO_FINAL_RECEITA GLOBAL STRING ST@CODIGO@RECEITA STRING ST@ANO INTEGER IT@GRAU RETURNS STRING
  LOCAL STRING ST@CODIGO@FINAL
  
  MOVE '' TO ST@CODIGO@FINAL
  
  TRIM ST@CODIGO@RECEITA TO ST@CODIGO@RECEITA
  
  IF ST@ANO LE '2017' BEGIN
                            IF IT@GRAU EQ '7' APPEND ST@CODIGO@FINAL (MID(ST@CODIGO@RECEITA,17,1))
                       ELSE IF IT@GRAU EQ '6' APPEND ST@CODIGO@FINAL (MID(ST@CODIGO@RECEITA,13,1)) '.999'
                       ELSE IF IT@GRAU EQ '5' APPEND ST@CODIGO@FINAL (MID(ST@CODIGO@RECEITA,10,1)) '.99.999'
                       ELSE IF IT@GRAU EQ '4' APPEND ST@CODIGO@FINAL (MID(ST@CODIGO@RECEITA,7,1))  '.99.99.999'
                       ELSE IF IT@GRAU EQ '3' APPEND ST@CODIGO@FINAL (MID(ST@CODIGO@RECEITA,5,1))  '.9.99.99.999'
                       ELSE IF IT@GRAU EQ '2' APPEND ST@CODIGO@FINAL (MID(ST@CODIGO@RECEITA,3,1))  '.9.9.99.99.999'
                       ELSE IF IT@GRAU EQ '1' APPEND ST@CODIGO@FINAL (MID(ST@CODIGO@RECEITA,1,1))  '.9.9.9.99.99.999'
                      END
  ELSE BEGIN
             IF IT@GRAU EQ '8' APPEND ST@CODIGO@FINAL (MID(ST@CODIGO@RECEITA,19,1))
        ELSE IF IT@GRAU EQ '7' APPEND ST@CODIGO@FINAL (MID(ST@CODIGO@RECEITA,14,1)) '.9999'
        ELSE IF IT@GRAU EQ '6' APPEND ST@CODIGO@FINAL (MID(ST@CODIGO@RECEITA,12,1)) '.9.9999'
        ELSE IF IT@GRAU EQ '5' APPEND ST@CODIGO@FINAL (MID(ST@CODIGO@RECEITA,10,1)) '.9.9.9999'
        ELSE IF IT@GRAU EQ '4' APPEND ST@CODIGO@FINAL (MID(ST@CODIGO@RECEITA,7,1))  '.99.9.9.9999'
        ELSE IF IT@GRAU EQ '3' APPEND ST@CODIGO@FINAL (MID(ST@CODIGO@RECEITA,5,1))  '.9.99.9.9.9999'
        ELSE IF IT@GRAU EQ '2' APPEND ST@CODIGO@FINAL (MID(ST@CODIGO@RECEITA,3,1))  '.9.9.99.9.9.9999'
        ELSE IF IT@GRAU EQ '1' APPEND ST@CODIGO@FINAL (MID(ST@CODIGO@RECEITA,1,1))  '.9.9.9.99.9.9.9999'
       END
  
  FUNCTION_RETURN ST@CODIGO@FINAL
END_FUNCTION

FUNCTION OBTER_CODIGO_PADRAO_RECEITA GLOBAL STRING ST@CODIGO@RECEITA STRING ST@ANO RETURNS STRING
  LOCAL STRING ST@CODIGO@PADRAO
  
  MOVE '' TO ST@CODIGO@PADRAO

  IF ST@ANO LE '2017' BEGIN
                       MOVE (MID(ST@CODIGO@RECEITA,13,1)) TO ST@CODIGO@PADRAO
                       APPEND ST@CODIGO@PADRAO '.000'
                      END
  ELSE BEGIN
        MOVE (MID(ST@CODIGO@RECEITA,14,1)) TO ST@CODIGO@PADRAO
        APPEND ST@CODIGO@PADRAO '.0000'
       END
  
  FUNCTION_RETURN ST@CODIGO@PADRAO
END_FUNCTION

FUNCTION OBTER_CODIGO_PADRAO_RECEITA_FINAL GLOBAL STRING ST@CODIGO@RECEITA STRING ST@ANO RETURNS STRING
  LOCAL STRING ST@CODIGO@PADRAO
  
  MOVE '' TO ST@CODIGO@PADRAO

  IF ST@ANO LE '2017' BEGIN
                       MOVE (MID(ST@CODIGO@RECEITA,13,1)) TO ST@CODIGO@PADRAO
                       APPEND ST@CODIGO@PADRAO '.999'
                      END
  ELSE BEGIN
        MOVE (MID(ST@CODIGO@RECEITA,14,1)) TO ST@CODIGO@PADRAO
        APPEND ST@CODIGO@PADRAO '.9999'
       END
  
  FUNCTION_RETURN ST@CODIGO@PADRAO
END_FUNCTION

FUNCTION OBTER_CODIGO_RECEITA_CONTACOR GLOBAL STRING ST@DADOS STRING ST@ANO RETURNS STRING
  LOCAL STRING ST@CODIGO@RECEITA
  
  MOVE '' TO ST@CODIGO@RECEITA
  
  IF ST@ANO LE '2017' BEGIN
                       MOVE (MID(ST@DADOS,16,20)) TO ST@CODIGO@RECEITA
                       APPEND ST@CODIGO@RECEITA '0'
                      END
  ELSE BEGIN
        MOVE (MID(ST@DADOS,14,20)) TO ST@CODIGO@RECEITA
        APPEND ST@CODIGO@RECEITA '.0000'
       END
  
  FUNCTION_RETURN ST@CODIGO@RECEITA
END_FUNCTION

//--fonte mais codigo de aplicacao para o movfonte.n_fonte
FUNCTION FONTE_MOVFONTE GLOBAL STRING ST@FONTE STRING ST@CODIGO@APLICACAO RETURNS STRING
  LOCAL STRING ST@FONTE@MOVFONTE
  
  MOVE   ''                TO ST@FONTE@MOVFONTE
  TRIM   ST@FONTE          TO ST@FONTE
  MOVE   (PAD(ST@FONTE,3)) TO ST@FONTE@MOVFONTE
  APPEND ST@FONTE@MOVFONTE    ST@CODIGO@APLICACAO
  
  FUNCTION_RETURN ST@FONTE@MOVFONTE
END_FUNCTION

FUNCTION OBTER_CODIGO_PRN GLOBAL STRING ST@CODIGO@AUX STRING ST@ANO RETURNS STRING
  LOCAL STRING ST@CODIGO@PRN
  INDICATE @NOVO_PRN! FALSE
  
  IF ST@ANO LE '2018' BEGIN
                       MOVE '99999' TO ST@CODIGO@PRN
                      END
  ELSE BEGIN
        INDICATE @NOVO_PRN! AS ST@CODIGO@AUX EQ '10'
        
             IF (TRIM(ST@CODIGO@AUX)) EQ '10' MOVE '9999999999' TO ST@CODIGO@PRN
        ELSE IF (TRIM(ST@CODIGO@AUX)) EQ '5'  MOVE '99999'      TO ST@CODIGO@PRN
       END
       
  FUNCTION_RETURN ST@CODIGO@PRN
END_FUNCTION

//--
//-- no consigna.dat e gravado RE(receita extra) IN(inscricao extra) SA(saldo anterior)
//-- SA nao tem n-movimento IN n-movimento asc 5   RE n-movimento = id-movdrece number
//--
FUNCTION OBTER_N_MOVIMENTO_CONSIGNA GLOBAL STRING ST@TIPO@MOVIMENTO STRING ST@NUMERO@MOVIMENTO RETURNS STRING
  LOCAL STRING  ST@N@MOVIMENTO
  LOCAL INTEGER IT@N@MOVIMENTO
  
  MOVE '' TO ST@N@MOVIMENTO
  MOVE '' TO IT@N@MOVIMENTO
  
  MOVE ST@NUMERO@MOVIMENTO TO IT@N@MOVIMENTO
  MOVE IT@N@MOVIMENTO      TO ST@N@MOVIMENTO
  
       IF ST@TIPO@MOVIMENTO IN 'IN-DE-CA' COMZEROS   ST@N@MOVIMENTO 5
  ELSE IF ST@TIPO@MOVIMENTO EQ 'SA'       MOVE '' TO ST@N@MOVIMENTO
  
  FUNCTION_RETURN ST@N@MOVIMENTO
END_FUNCTION

//--
//-- !1 = codigo a ser alterado ou excluido
//-- !2 = codigo posterior cadastrado
//-- !3 = grau da receita a ser alterada ou excluida
//-- !4 = label caso retorne erro
//-- !5 = exercicio logado ou ano da LOA
//-- !6 = pesquisa! se for pesquisa aborta
//--
#COMMAND VERIFICA_CODIGO_POSTERIOR_RECEITA
#IFDEF   IT@MID
#ELSE
 INTEGER IT@MID
#ENDIF
 
 INDICATE @OK! FALSE
 
 IF !5 LE '2017' BEGIN
                       IF !3 EQ '1' MOVE  1 TO IT@MID
                  ELSE IF !3 EQ '2' MOVE  3 TO IT@MID
                  ELSE IF !3 EQ '3' MOVE  5 TO IT@MID
                  ELSE IF !3 EQ '4' MOVE  7 TO IT@MID
                  ELSE IF !3 EQ '5' MOVE 10 TO IT@MID
                  ELSE IF !3 EQ '6' MOVE 13 TO IT@MID
                 END
 ELSE BEGIN
            IF !3 EQ '1' MOVE  1 TO IT@MID
       ELSE IF !3 EQ '2' MOVE  3 TO IT@MID
       ELSE IF !3 EQ '3' MOVE  5 TO IT@MID
       ELSE IF !3 EQ '4' MOVE  7 TO IT@MID
       ELSE IF !3 EQ '5' MOVE 10 TO IT@MID
       ELSE IF !3 EQ '6' MOVE 12 TO IT@MID
       ELSE IF !3 EQ '7' MOVE 14 TO IT@MID
       ELSE IF !3 EQ '8' MOVE 19 TO IT@MID
      END

 INDICATE @OK! AS (MID(!1,IT@MID,1)) NE (MID(!2,IT@MID,1))
 
 [~@OK!] BEGIN
          ADVERTE 'GRAU INFERIOR EXISTENTE, N▌O PODENDO SER ALTERADO OU EXCLU║DO'
          UNLOCK
          ON ERROR OFF
          
          #IF (!0=6)
           IF !6 EQ 'PESQUISA' ABORT
          #ENDIF
          
          GOTO !4
         END
#ENDCOMMAND                     

//----------------------------------------------------------------------------
//------define qual fonte de recurso esta em uso SP ou MG (loa 2018 MG)
//--
//-- !1 = exercicio
//--
#COMMAND DEFINE_FONTE_RECURSO
 INDICATE @FONTE_RECURSO_SP! FALSE
 INDICATE @FONTE_RECURSO_MG! FALSE

 [ @AUDESP_SP!] INDICATE @FONTE_RECURSO_SP! TRUE
 [     @SICOM!] BEGIN
                 IF !1 GE '2018' INDICATE @FONTE_RECURSO_MG! TRUE
                 ELSE            INDICATE @FONTE_RECURSO_SP! TRUE
                END
 
 [ @FONTE_RECURSO_SP!] MOVE 'A' TO ST@TIPO@FONTE
 [ @FONTE_RECURSO_MG!] MOVE 'S' TO ST@TIPO@FONTE
#ENDCOMMAND

//------define qual CNR esta em uso nova CNR a partir de 2018
//--
//-- !1 = exercicio
//--
#COMMAND DEFINE_CODIGO_RECEITA
 INDICATE @NOVO_CNR! FALSE
 INDICATE @NOVO_CNR! AS !1 GE '2018'
#ENDCOMMAND

//----------------------------------------------------------------------------

//------reportXend para relatorios sem a reportc (COLOCAR ENTRE FORMFEED E GRAVAPAG)
//--
//-- !1 = reccount
//--
#COMMAND FINAL_RELATORIO
 IF !1 LT 1 BEGIN
             SCREENMODE IT_COR_TITULO ON
             GOTOXY 22 02
             BEEP
             SHOW ' RELAT╒RIO N▌O IMPRESSO ! REGISTRO N▌O ENCONTRADO . TECLE <ENTER> PARA SAIR '
             INKEY ST_TECLA
            END
#ENDCOMMAND

//----------------------------------------------------------------------------

//--
//-- !1 - nome do programa
//-- !2 - tipo saida (Tela ou Relatorio)
//-- !3 - variavel saida relatorio
//--
#COMMAND BUSCA_CAMINHO_MENU
#IFDEF ST@BUSCA@MENU
#ELSE
   STRING ST@BUSCA@MENU 255
#ENDIF
#IFDEF ST@BUSCA@PROGRAMA
#ELSE
   STRING ST@BUSCA@PROGRAMA 255
#ENDIF
#IFDEF ST@BUSCA@CAMINHO
#ELSE
   STRING ST@BUSCA@CAMINHO 255
#ENDIF
#IFDEF ST@BUSCA@AUX
#ELSE
   STRING ST@BUSCA@AUX 255
#ENDIF
#IFDEF IT@BUSCA@AUX
#ELSE
   INTEGER IT@BUSCA@AUX
#ENDIF

 MOVE '' TO ST@BUSCA@MENU
 MOVE '' TO ST@BUSCA@CAMINHO
 MOVE '' TO ST@BUSCA@AUX
 MOVE !1 TO ST@BUSCA@PROGRAMA

 //--busca programa
 CLEAR MENUCOMP
 CONSTRAINT_SET 1
 CONSTRAINED_FIND FIRST MENUCOMP BY INDEX.1
 WHILE [FOUND]
  FOR FIELDINDEX FROM 0 TO 6
   IF ((MENUCOMP.P_M& EQ 'P' ) AND (MENUCOMP.PROG_MENU& EQ ST@BUSCA@PROGRAMA)) BEGIN
                                                                                APPEND ST@BUSCA@CAMINHO (FIELDINDEX + 1)
                                                                                MOVE MENUCOMP.NOME TO ST@BUSCA@MENU
                                                                                GOTO LB@BUSCA@CONTINUA
                                                                               END
  LOOP
  CONSTRAINT_SET 1
  CONSTRAINED_FIND NEXT
  END
 CONSTRAINT_SET 1 CLEAR
 
 IF ST@BUSCA@CAMINHO EQ '' GOTO LB@BUSCA@SAIDA

 //--busca pelos menus
 LB@BUSCA@CONTINUA:
 CLEAR MENUCOMP
 CONSTRAINT_SET 1
 CONSTRAINED_FIND FIRST MENUCOMP BY INDEX.1
 WHILE [FOUND]
  FOR FIELDINDEX FROM 0 TO 6
   IF ((MENUCOMP.P_M& EQ 'M' ) AND (MENUCOMP.PROG_MENU& EQ ST@BUSCA@MENU)) BEGIN
                                                                            APPEND ST@BUSCA@CAMINHO (FIELDINDEX + 1)
                                                                            MOVE MENUCOMP.NOME TO ST@BUSCA@MENU
                                                                            
                                                                            IF ST@BUSCA@MENU NE 'CONAM' GOTO LB@BUSCA@CONTINUA
                                                                            ELSE                        GOTO LB@BUSCA@SAIDA
                                                                           END
  LOOP
  CONSTRAINT_SET 1
  CONSTRAINED_FIND NEXT
  END
 CONSTRAINT_SET 1 CLEAR
 LB@BUSCA@SAIDA:

 FOR IT@BUSCA@AUX FROM 1 TO 100
  IF (MID(ST@BUSCA@CAMINHO,1,IT@BUSCA@AUX)) NE '' BEGIN
                                                   INSERT (MID(ST@BUSCA@CAMINHO,1,IT@BUSCA@AUX)) IN ST@BUSCA@AUX AT 1
                                                   IF IT@BUSCA@AUX GT 1 INSERT '-' IN ST@BUSCA@AUX AT 2
                                                  END
  ELSE MOVE 100 TO IT@BUSCA@AUX
 LOOP

 TRIM ST@BUSCA@AUX TO ST@BUSCA@CAMINHO
 
 IF !2 EQ 'T' BEGIN
               #IF (!0>2)
                MOVE ST@BUSCA@CAMINHO TO !3
               #ENDIF
              END
 ELSE BEGIN
       IF (MID(PARGERAL.AUXILIAR_2,1,36)) EQ 'S' WRITELN 'Menu Sistema: ' ST@BUSCA@CAMINHO
      END
#ENDCOMMAND

//----------------------------------------------------------------------------

//--
//-- o anterior utilizava o programa chamada.src dava problemas nos cmdlines
//--
//-- !1 = path mensageria
//-- !2 = tipo da chamada (mensagem)
//-- !3 = modulo
//-- !4 = recnum usuario
//-- !5 = nome usuario
//-- !6 = identificador da chamada ??
//-- !7 = codigo usuario
//-- !8 = codigo entidade
//--
#COMMAND CHAMADA_MENSAGEM_WEBSAFE
 MOVE !1 TO ST_PATH_MENSAGERIA
 MOVE !2 TO ST_MENSAGEM_WEBSAFE
 MOVE !3 TO ST_MODULO_WEBSAFE
 MOVE !4 TO IT_USUARIO_WEBSAFE
 MOVE !5 TO ST_NOME_USUARIO_WEBSAFE
 MOVE !6 TO ST_IDENTIFICADOR_CHAMADA_WEBSAFE
 MOVE !7 TO ST_CODIGO_USUARIO_WEBSAFE
 
 CLEAR CONFIGS
 MOVE PARGERAL.COD_ENTIDADE TO CONFIGS.COD_ENTIDADE
 MOVE PARGERAL.EXERCICIO    TO CONFIGS.EXERCICIO
 MOVE 'ENTIDADE_MENSAGERIA' TO CONFIGS.CAMPO
 FIND EQ CONFIGS BY INDEX.2
 [ FOUND] MOVE (TRIM(CONFIGS.CONTEUDO)) TO ST_ENTIDADE_MENSAGERIA
 
 IF ST_NOME_USUARIO_WEBSAFE NE '' MOVE (REPLACES('@', ST_NOME_USUARIO_WEBSAFE, ' ')) TO ST_NOME_USUARIO_WEBSAFE
 ELSE                             MOVE 'CONAM'                                       TO ST_NOME_USUARIO_WEBSAFE

 MOVE (LOWERCASE(ST_PATH_MENSAGERIA))     TO ST_PATH_MENSAGERIA
 MOVE (LOWERCASE(ST_ENTIDADE_MENSAGERIA)) TO ST_ENTIDADE_MENSAGERIA

 MOVE 'php ' TO ST_CHAMADA_WEBSAFE
 APPEND ST_CHAMADA_WEBSAFE ST_PATH_MENSAGERIA 'msgcli -f ' ST_PATH_MENSAGERIA ST_ENTIDADE_MENSAGERIA '/.env '

 MOVE 'msgeria_' TO ST_ARQUIVO_WEBSAFE
 IF ST_CODIGO_USUARIO_WEBSAFE EQ '' MOVE 'CONAM' TO ST_CODIGO_USUARIO_WEBSAFE
 APPEND ST_ARQUIVO_WEBSAFE (LOWERCASE(ST_CODIGO_USUARIO_WEBSAFE)) '_w.txt'

 IF (LOWERCASE(ST_MENSAGEM_WEBSAFE)) EQ 'mensagem:coletar'                APPEND ST_CHAMADA_WEBSAFE (LOWERCASE(ST_MENSAGEM_WEBSAFE)) ' ' (UPPERCASE(ST_MODULO_WEBSAFE))   ' ' IT_USUARIO_WEBSAFE " '" ST_NOME_USUARIO_WEBSAFE "'"  ' &> /dev/null'
 IF (LOWERCASE(ST_MENSAGEM_WEBSAFE)) EQ 'mensagem:obter_validade_cliente' APPEND ST_CHAMADA_WEBSAFE (LOWERCASE(ST_MENSAGEM_WEBSAFE)) ' ' (UPPERCASE(ST_MODULO_WEBSAFE))                                      ' '  ' > '  ST_ARQUIVO_WEBSAFE
 IF (LOWERCASE(ST_MENSAGEM_WEBSAFE)) EQ 'autenticacao:novo'               APPEND ST_CHAMADA_WEBSAFE (LOWERCASE(ST_MENSAGEM_WEBSAFE)) ' ' (UPPERCASE(ST_MODULO_WEBSAFE))                                      ' &> /dev/null '  ' > '  ST_ARQUIVO_WEBSAFE
 IF (LOWERCASE(ST_MENSAGEM_WEBSAFE)) EQ 'autenticacao:validar'            APPEND ST_CHAMADA_WEBSAFE (LOWERCASE(ST_MENSAGEM_WEBSAFE)) ' ' ST_IDENTIFICADOR_CHAMADA_WEBSAFE ' ' (UPPERCASE(ST_MODULO_WEBSAFE)) ' &> /dev/null '  ' > '  ST_ARQUIVO_WEBSAFE
 
//  clearxy 0 0
//  showln 'path      ' ST_PATH_MENSAGERIA
//  showln 'msg       ' ST_MENSAGEM_WEBSAFE
//  showln 'modulo    ' ST_MODULO_WEBSAFE
//  showln 'id usr    ' IT_USUARIO_WEBSAFE
//  showln 'nome usr  ' ST_NOME_USUARIO_WEBSAFE
//  showln 'id msg    ' ST_IDENTIFICADOR_CHAMADA_WEBSAFE
//  showln 'cod usr   ' ST_CODIGO_USUARIO_WEBSAFE
//  showln ' ' 
//  showln ST_CHAMADA_WEBSAFE
//  pause .
 
 TRIM ST_CHAMADA_WEBSAFE TO ST_CHAMADA_WEBSAFE
 RUNPROGRAM WAIT ST_CHAMADA_WEBSAFE
#ENDCOMMAND
//--

//!1 - LER RETORNO WEBSAFE
#COMMAND LER_RETORNO_WEBSAFE
 MOVE '' TO ST@LINHA@WEBSAFE
 DIRECT_INPUT CHANNEL 9 ST@ARQUIVO@WEBSAFE
 READLN CHANNEL 9 ST@LINHA@WEBSAFE
 TRIM ST@LINHA@WEBSAFE TO ST@LINHA@WEBSAFE
 REPEAT
  REMOVE '"' FROM ST@LINHA@WEBSAFE
 UNTIL [~FOUND]
 CLOSE_INPUT CHANNEL 9 ST@ARQUIVO@WEBSAFE
 ERASEFILE ST@ARQUIVO@WEBSAFE
#ENDCOMMAND

#COMMAND ATUALIZA_RODAPE_MENSAGEM
#IFDEF IT@QTDE@MENSAGENS
#ELSE
  STRING IT@QTDE@MENSAGENS 255
#ENDIF

 MOVE 0 TO IT@QTDE@MENSAGENS
 OPEN  MSGERIA
 CLEAR MSGERIA
 MOVE MENUUSER.CODIGO          TO MSGERIA.CODIGO_USUARIO
 MOVE ST_MODULO_MENSAGERIA     TO MSGERIA.MODULO
 MOVE ST_CLIENTE_MENSAGERIA    TO MSGERIA.CLIENTE
 MOVE ST_INSTALACAO_MENSAGERIA TO MSGERIA.INSTALACAO
 MOVE '1'                      TO MSGERIA.MANTER
 REPEAT
  FIND GT MSGERIA BY INDEX.3
  [ FOUND] INDICATE FOUND AS MSGERIA.CODIGO_USUARIO EQ MENUUSER.CODIGO
  [ FOUND] INDICATE FOUND AS MSGERIA.MODULO         EQ ST_MODULO_MENSAGERIA
  [ FOUND] INDICATE FOUND AS MSGERIA.CLIENTE        EQ ST_CLIENTE_MENSAGERIA
  [ FOUND] INDICATE FOUND AS MSGERIA.INSTALACAO     EQ ST_INSTALACAO_MENSAGERIA
  [ FOUND] INDICATE FOUND AS MSGERIA.MANTER         EQ '1'
  [ FOUND] INCREMENT IT@QTDE@MENSAGENS
 UNTIL [~FOUND]
 CLEAR MSGERIA
 CLOSE MSGERIA
 IF IT@QTDE@MENSAGENS GT 0 BEGIN
                            SCREENMODE 79 ON
                            MOVE IT@QTDE@MENSAGENS TO JN_QUANTIDADE_MENSAGEM_LIB
                            SCREENMODE 79 OFF
                            PAGE RODAPE_MENSAGEM_LIB
                           END
#ENDCOMMAND

//--funcao para mover string com zeros a esquerda
FUNCTION COMZEROS GLOBAL STRING ST@STRING INTEGER IT@QUANTIDADE RETURNS STRING
   TRIM     ST@STRING TO ST@STRING
   COMZEROS ST@STRING    IT@QUANTIDADE

   FUNCTION_RETURN ST@STRING
END_FUNCTION

//--funcao para mover string como inteiro
FUNCTION SEMZEROS GLOBAL STRING ST@STRING RETURNS INTEGER
   LOCAL INTEGER IT@DADO
   MOVE ST@STRING TO IT@DADO
   FUNCTION_RETURN IT@DADO
END_FUNCTION

//----------------------------------------------------------------------------

//--funcao para setar qual pasta abrir de exercicios anteriores
FUNCTION OBTER_PASTA_EXERCICIO GLOBAL STRING ST@ENTIDADE@PARAMETRO STRING ST@EXERCICIO@PARAMETRO STRING ST@EXERCICIO@ABERTURA@PASTA RETURNS STRING
   LOCAL STRING ST@RESULTADO
   LOCAL STRING ST@DIRETORIO@CORRENTE
   LOCAL STRING ST@COD@ENTIDADE@CONFIG
   LOCAL STRING ST@EXERCICIO@CONFIG
   
   MOVE '' TO ST@RESULTADO
   
   GET_CURRENT_DIRECTORY TO ST@DIRETORIO@CORRENTE
   
   //--modelo antigo
   IF '/inte' IN ST@DIRETORIO@CORRENTE BEGIN
                                        IF ST@EXERCICIO@ABERTURA@PASTA LE '2021' BEGIN
                                                                                  IF PARGERAL.EXERCICIO IN ST@DIRETORIO@CORRENTE REPLACE PARGERAL.EXERCICIO IN ST@DIRETORIO@CORRENTE WITH ST@EXERCICIO@ABERTURA@PASTA
                                                                                  ELSE                                           REPLACE '2022'             IN ST@DIRETORIO@CORRENTE WITH ST@EXERCICIO@ABERTURA@PASTA
                                                                                  MOVE ST@DIRETORIO@CORRENTE TO ST@RESULTADO
                                                                                 END
                                        ELSE MOVE ST@DIRETORIO@CORRENTE TO ST@RESULTADO
                                       END
   ELSE BEGIN
         IF ST@VERSAO@SIAFIC EQ 'VERSAO_01' BEGIN
                                             MOVE PARGERAL.COD_ENTIDADE TO ST@COD@ENTIDADE@CONFIG
                                             MOVE PARGERAL.EXERCICIO    TO ST@EXERCICIO@CONFIG
                                            END
         ELSE BEGIN
               MOVE ST@ENTIDADE@PARAMETRO  TO ST@COD@ENTIDADE@CONFIG
               MOVE ST@EXERCICIO@PARAMETRO TO ST@EXERCICIO@CONFIG
              END
         
         CLEAR CONFIGS
         MOVE ST@COD@ENTIDADE@CONFIG TO CONFIGS.COD_ENTIDADE
         MOVE ST@EXERCICIO@CONFIG    TO CONFIGS.EXERCICIO
         MOVE 'SIGLA_ENTIDADE'       TO CONFIGS.CAMPO
         FIND EQ CONFIGS BY INDEX.2
         [~FOUND] BEGIN
                   ADVERTE 'CONFIGURACAO REFERENTE A ENTIDADE NAO LOCALIZADA (SIGLA-ENTIDADE)'
                   ABORT
                  END
         
         IF '/siafic' IN ST@DIRETORIO@CORRENTE BEGIN
                                                IF ST@EXERCICIO@ABERTURA@PASTA LE '2021' BEGIN
                                                                                          MOVE (LEFT(ST@DIRETORIO@CORRENTE,((POS('/siafic',ST@DIRETORIO@CORRENTE))-1))) TO ST@RESULTADO
                                                                                          APPEND ST@RESULTADO '/' (TRIM(CONFIGS.CONTEUDO)) '/sfpm' ST@EXERCICIO@ABERTURA@PASTA
                                                                                          
//                                                                                           MOVE '/home/conam/dats/' TO ST@RESULTADO
//                                                                                           APPEND ST@RESULTADO (TRIM(CONFIGS.CONTEUDO)) '/sfpm' ST@EXERCICIO@ABERTURA@PASTA
                                                                                         END
                                                ELSE BEGIN
                                                      MOVE ST@DIRETORIO@CORRENTE TO ST@RESULTADO
                                                     END
                                               END
         ELSE BEGIN
               MOVE (LEFT(ST@DIRETORIO@CORRENTE,((POS('/sfpm',ST@DIRETORIO@CORRENTE))-1))) TO ST@RESULTADO
               APPEND ST@RESULTADO '/sfpm' ST@EXERCICIO@ABERTURA@PASTA
               
//                MOVE '/home/conam/dats/' TO ST@RESULTADO
//                APPEND ST@RESULTADO (TRIM(CONFIGS.CONTEUDO)) '/sfpm' ST@EXERCICIO@ABERTURA@PASTA
              END
        END
   
   FUNCTION_RETURN ST@RESULTADO
END_FUNCTION

//----------------------------------------------------------------------------

FUNCTION VERIFICA_EXISTENCIA_DIRETORIO GLOBAL STRING ST@DIRETORIO RETURNS STRING
   LOCAL STRING ST@NADA
   LOCAL STRING ST@RESULTADO
   
   MOVE ''           TO ST@RESULTADO
   MOVE ST@DIRETORIO TO ST@NADA
   TRIM ST@NADA      TO ST@NADA
   
   IF (RIGHT(ST@NADA,1)) NE '/' APPEND ST@NADA '/' (TRIM(ST@USUARIO)) '_teste.txt'
   ELSE                         APPEND ST@NADA     (TRIM(ST@USUARIO)) '_teste.txt'
   
   DIRECT_OUTPUT CHANNEL 9 ST@NADA
   INDICATE ERR FALSE
   ON ERROR GOSUB LB@NADA
   WRITELN CHANNEL 9 'A'
   [~ERR] BEGIN
           MOVE 'OK' TO ST@RESULTADO
          END
   
   LB@NADA:
   INDICATE ERR FALSE
   ON ERROR OFF
   
   ERASEFILE ST@NADA
   
   FUNCTION_RETURN ST@RESULTADO
END_FUNCTION

//-------------------VERIFICA SE A PM PODERA IMPORTAR DADOS DE ENTIDADE--------
//--
//-- !1 = cod da entidade selecionada para importacao
//-- !2 = ano do dado a importar
//-- !3 - label retorno erro
//--
#COMMAND VERIFICA_ENTIDADE_IMPORTACAO
#IFDEF    IT@RECNUM@PARGERAL
#ELSE
  INTEGER IT@RECNUM@PARGERAL
#ENDIF
#IFDEF    IT@MSG
#ELSE
  INTEGER IT@MSG
#ENDIF
 
 MOVE 0 TO IT@MSG
 
 MOVE PARGERAL.RECNUM TO IT@RECNUM@PARGERAL
 
 //--prefeitura verificando se a entidade ja ta unificaca
 IF !1 NE '01' BEGIN
                CLEAR PARGERAL
                MOVE !2 TO PARGERAL.EXERCICIO
                MOVE !1 TO PARGERAL.COD_ENTIDADE
                FIND EQ PARGERAL BY INDEX.1
                [ FOUND] BEGIN
                          CLEAR PARGERAL
                          MOVE IT@RECNUM@PARGERAL TO PARGERAL.RECNUM
                          FIND EQ PARGERAL BY RECNUM
                          
                          ADVERTE 'ENTIDADE SELECIONADA JA ESTA COM A BASE DE DADOS UNIFICADA COM A PREFEITURA NAO TENDO A NECESSIDADE DE IMPORTACAO E/OU EXPORTACAO DE DADOS'
                          MOVE 1 TO IT@MSG
                          
                          #IF !0=3
                           GOTO !3
                          #ENDIF
                         END
               END
 
 //--entidade verificando se ja ta unificaca com a pm
 IF !1 EQ '01' BEGIN
                CLEAR PARGERAL
                MOVE !2 TO PARGERAL.EXERCICIO
                MOVE !1 TO PARGERAL.COD_ENTIDADE
                FIND EQ PARGERAL BY INDEX.1
                [ FOUND] BEGIN
                          CLEAR PARGERAL
                          MOVE IT@RECNUM@PARGERAL TO PARGERAL.RECNUM
                          FIND EQ PARGERAL BY RECNUM
                          
                          ADVERTE 'SUA ENTIDADE JA ESTA COM A BASE DE DADOS UNIFICADA COM A PREFEITURA NAO TENDO A NECESSIDADE DE IMPORTACAO E/OU EXPORTACAO DE DADOS'
                          MOVE 1 TO IT@MSG
                          
                          #IF !0=3
                           GOTO !3
                          #ENDIF
                         END
               END
 
 CLEAR PARGERAL
 MOVE IT@RECNUM@PARGERAL TO PARGERAL.RECNUM
 FIND EQ PARGERAL BY RECNUM
#ENDCOMMAND


//----------VERIFICA SE A ENTIDADES ESTA CONSOLIDADA NA BASE DA PM-------------
//--
//-- !1 = cod da entidade
//-- !2 = exericico
//--
#COMMAND VERIFICA_ENTIDADE_SIAFIC
#IFDEF    IT@RECNUM@PARGERAL
#ELSE
  INTEGER IT@RECNUM@PARGERAL
#ENDIF
 
 MOVE PARGERAL.RECNUM TO IT@RECNUM@PARGERAL
 
 IF ST@CODIGO@ENTIDADE EQ '01' BEGIN
                                CLEAR PARGERAL
                                MOVE !1 TO PARGERAL.COD_ENTIDADE
                                MOVE !2 TO PARGERAL.EXERCICIO
                                FIND EQ PARGERAL BY INDEX.2
                                [ FOUND] 
                               END
 
 CLEAR PARGERAL
 MOVE IT@RECNUM@PARGERAL TO PARGERAL.RECNUM
 FIND EQ PARGERAL BY RECNUM
#ENDCOMMAND


//--
//-- !1 - letra
//-- !2 - indicate se exibe msg na tela
//-- !3 - label retorno erro
//--
#COMMAND OBTER_TIPO_PROCESSO
 IF !1 NE 'O' BEGIN
               CLEAR TPMODALI
               MOVE !1 TO TPMODALI.LETRA
               FIND GT TPMODALI BY INDEX.2
               [ FOUND] INDICATE FOUND AS TPMODALI.LETRA EQ !1
               [ FOUND] IF (TRIM(TPMODALI.LETRA)) IN 'R-Q-M' INDICATE FOUND FALSE
               [~FOUND] BEGIN
                         IF !2 EQ 'MSG' BEGIN
                                         ADVERTE 'TIPO DE PROCESSO NAO ENCONTRADO'
                                        END
                         MOVE '' TO !1
                         CLEAR TPMODALI
                         GOTO !3
                        END
              END
#ENDCOMMAND

#COMMAND OBTER_DESCRICAO_TIPO_PROCESSO
 CLEAR TPMODALI
 MOVE !1 TO TPMODALI.LETRA
 FIND GT TPMODALI BY INDEX.2
 [ FOUND] INDICATE FOUND AS TPMODALI.LETRA EQ !1
 [ FOUND] MOVE TPMODALI.DESCRICAO TO !2
 CLEAR TPMODALI
#ENDCOMMAND


//--
//-- !1 - ano para abrir o contacor
//-- !2 - nome para abertura contacor ou contacor@
//--
#COMMAND ABRE_CONTACOR
#IFDEF  ST@PASTA@CONTACOR
#ELSE
 STRING ST@PASTA@CONTACOR 255
#ENDIF
#IFDEF  ST@PASTA@CORRENTE
#ELSE
 STRING ST@PASTA@CORRENTE 255
#ENDIF

 //--caso ainda esteja na pasta corrente blz... ok... sussa...
 GET_CURRENT_DIRECTORY TO ST@PASTA@CORRENTE
 VERIFICA_EXISTENCIA_ARQUIVO ST@PASTA@CORRENTE 'contacor.dat'
 [ @TEM!] ABRE ST@PASTA@CORRENTE 'CONTACOR' !2
 [~@TEM!] BEGIN
           MOVE (OBTER_PASTA_EXERCICIO(ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO,!1)) TO ST@PASTA@CONTACOR
           IF !1 GE '2022' APPEND ST@PASTA@CONTACOR '/sfpm' !1
           VERIFICA_EXISTENCIA_ARQUIVO ST@PASTA@CONTACOR 'contacor.dat'
           [ @TEM!] ABRE ST@PASTA@CONTACOR 'CONTACOR' !2
          END
#ENDCOMMAND


//--
//-- !1 - ano para abrir o tbcontab
//-- !2 - nome para abertura tbcontab ou tbcontab@
//--
#COMMAND ABRE_TBCONTAB
#IFDEF  ST@PASTA@TBCONTAB
#ELSE
 STRING ST@PASTA@TBCONTAB 255
#ENDIF
#IFDEF  ST@PASTA@CORRENTE
#ELSE
 STRING ST@PASTA@CORRENTE 255
#ENDIF

 //--caso ainda esteja na pasta corrente blz... ok... sussa...
 GET_CURRENT_DIRECTORY TO ST@PASTA@CORRENTE
 VERIFICA_EXISTENCIA_ARQUIVO ST@PASTA@CORRENTE 'tbcontab.dat'
 [ @TEM!] ABRE ST@PASTA@CORRENTE 'TBCONTAB' !2
 [~@TEM!] BEGIN
           MOVE (OBTER_PASTA_EXERCICIO(ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO,!1)) TO ST@PASTA@TBCONTAB
           IF !1 GE '2022' APPEND ST@PASTA@TBCONTAB '/sfpm' !1
           VERIFICA_EXISTENCIA_ARQUIVO ST@PASTA@TBCONTAB 'tbcontab.dat'
           [ @TEM!] ABRE ST@PASTA@TBCONTAB 'TBCONTAB' !2
          END
#ENDCOMMAND


FUNCTION ARREDONDAR GLOBAL NUMBER NB@AUX NUMBER NB@DIGITOS NUMBER NB@FATOR STRING ST@ARREDONDA RETURNS NUMBER
 LOCAL NUMBER NB@RESULT
 LOCAL INTEGER IT@AUX
 
 CALC (NB@FATOR / 10) TO NB@FATOR
 
 MOVE NB@AUX TO IT@AUX
 MOVE NB@AUX TO NB@RESULT
 IF NB@DIGITOS EQ 0 CALC (NB@RESULT - IT@AUX) TO NB@RESULT
 ELSE               CALC ((NB@RESULT - IT@AUX) * (10 ^ NB@DIGITOS)) TO NB@RESULT
 MOVE NB@RESULT TO IT@AUX
 CALC (NB@RESULT - IT@AUX) TO NB@RESULT
 IF NB@RESULT GE NB@FATOR BEGIN
    IF (UPPERCASE(ST@ARREDONDA)) EQ "S" CALC (IT@AUX + 1) TO NB@RESULT
    ELSE MOVE IT@AUX TO NB@RESULT
 END
 ELSE MOVE IT@AUX TO NB@RESULT
 MOVE NB@AUX TO IT@AUX
 IF NB@DIGITOS EQ 0 CALC (IT@AUX + NB@RESULT) TO NB@RESULT
 ELSE CALC (IT@AUX + (NB@RESULT / (10 ^ NB@DIGITOS))) TO NB@RESULT
 FUNCTION_RETURN NB@RESULT
END_FUNCTION

//----------------------------------------------------------------------------

MOVE (OBTER_CONFIGURACAO('MODULO_MENSAGERIA',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))   TO ST_MODULO_MENSAGERIA
MOVE (OBTER_CONFIGURACAO('PATH_MENSAGERIA',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO))     TO ST_PATH_MENSAGERIA
MOVE (OBTER_CONFIGURACAO('ENTIDADE_MENSAGERIA',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO)) TO ST_ENTIDADE_MENSAGERIA

//--caso nao tenha / no final do PATH_MENSAGERIA do config.dat
TRIM ST_PATH_MENSAGERIA TO ST_PATH_MENSAGERIA
IF (RIGHT(ST_PATH_MENSAGERIA,1)) NE '/' APPEND ST_PATH_MENSAGERIA '/'

//--obtendo numero de instacao do cliente
MOVE ST_PATH_MENSAGERIA TO ST_LER_ENV_MENSAGERIA
APPEND ST_LER_ENV_MENSAGERIA ST_ENTIDADE_MENSAGERIA

IF ST@CODIGO@ENTIDADE NE '' BEGIN
                              // VERIFICA_EXISTENCIA_ARQUIVO ST_LER_ENV_MENSAGERIA '.env'
                              // [~@TEM!] BEGIN
                              //          CABEC ' ( Arquivo de configuracao do mensageria nao encontrado. ) ' TELA_SEGURANCA.1
                              //          PAGE TELA_SEGURANCA
                              //          GOTOXY 25 0
                              //          PAUSE .
                              //          ABORT
                              //          END
                            END

DIRECT_INPUT ST_LER_ENV_MENSAGERIA
[NOT SEQEOF] REPEAT
                READLN ST_LINHA_ENV
                IF (LEFT((UPPERCASE(ST_LINHA_ENV)), (POS('=',ST_LINHA_ENV))-1)) EQ 'INSTALACAO' BEGIN
                   MOVE (MID(ST_LINHA_ENV,255, (POS('=',ST_LINHA_ENV))+1)) TO ST_INSTALACAO_MENSAGERIA
                END
                IF (LEFT((UPPERCASE(ST_LINHA_ENV)), (POS('=',ST_LINHA_ENV))-1)) EQ 'CLIENTE' BEGIN
                   MOVE (MID(ST_LINHA_ENV,255, (POS('=',ST_LINHA_ENV))+1)) TO ST_CLIENTE_MENSAGERIA
                END
[NOT SEQEOF] LOOP

//----------------------------------------------------------------------------

IF ((IT_COR_MOLDURA EQ 0) OR (IT_COR_TARJA EQ 0) OR (IT_COR_TITULO EQ 0)) BEGIN
                                                                           MOVE 15  TO IT_COR_MOLDURA
                                                                           MOVE 31  TO IT_COR_TARJA
                                                                           MOVE 63  TO IT_COR_TITULO
                                                                          END

USE ERROR

PAGE SET FIM                  AT 21 00 COLORS IT_COR_TARJA  IT_COR_MOLDURA
PAGE SET IMPRESSORA           AT 07 20 COLORS IT_COR_TITULO IT_COR_TITULO
PAGE SET RODAPE_MENSAGEM_LIB  AT 23 00 COLORS IT_COR_TARJA  IT_COR_MOLDURA
PAGE SET TELA_SEGURANCA       AT 06 04 COLORS IT_COR_TITULO IT_COR_TITULO

//-------------------INDICA SE TEM MODULO DE SEGURANCA--------------------------------
MOVE 1  TO IT@QTDE@ENTIDADES
MOVE 0  TO IT@QTDE@REGISTROS@PARGERAL
MOVE '' TO ST@MULTI@ENTIDADE

CLEAR PARGERAL
CONSTRAINT_SET 1
CONSTRAINED_FIND FIRST PARGERAL BY INDEX.2
WHILE [FOUND]
 IF ST@MULTI@ENTIDADE EQ '' MOVE PARGERAL.COD_ENTIDADE TO ST@MULTI@ENTIDADE
 ELSE IF ST@MULTI@ENTIDADE NE PARGERAL.COD_ENTIDADE INCREMENT IT@QTDE@ENTIDADES
 CONSTRAINED_FIND NEXT
END
CONSTRAINT_SET 1 CLEAR

FILE_SIZE PARGERAL TO IT@QTDE@REGISTROS@PARGERAL

IF IT@QTDE@REGISTROS@PARGERAL GT 1 BEGIN
                                    //--obrigatorio estar com seguranca
                                    INDICATE @SEGURANCA! TRUE
                                    
                                    CLEAR PARGERAL
                                    MOVE ST@EXERCICIO@FINANCEIRO TO PARGERAL.EXERCICIO
                                    MOVE ST@CODIGO@ENTIDADE      TO PARGERAL.COD_ENTIDADE
                                    FIND EQ PARGERAL BY INDEX.1
                                   END
ELSE BEGIN
      CLEAR PARGERAL
      FIND GT PARGERAL BY RECNUM
      [ FOUND] BEGIN
                INDICATE @SEGURANCA! AS PARGERAL.MOD_SEGURANCA EQ 'SIM'
               END
     END

CLEAR MENUUSER
FIND GT MENUUSER BY RECNUM
[ FOUND] BEGIN
          [ @SEGURANCA!] BEGIN
                          IF MENUUSER.CHAVE EQ '' BEGIN
                                                   CABEC ' ( Cadastro de Operadores ) ' TELA_SEGURANCA.1
                                                   PAGE TELA_SEGURANCA
                                                   GOTOXY 25 0
                                                   PAUSE .
                                                   ABORT
                                                  END
                         END
          [~@SEGURANCA!] BEGIN
                          IF MENUUSER.CHAVE NE '' BEGIN
                                                   CABEC ' ( Cadastro de Operadores ) ' TELA_SEGURANCA.1
                                                   PAGE TELA_SEGURANCA
                                                   GOTOXY 25 0
                                                   PAUSE .
                                                   ABORT
                                                  END
                         END
         END
CLEAR MENUUSER

[~@SEGURANCA!] BEGIN
                COMBRANCOS ST@USUARIO 5

                CLEAR MENUUSER
                MOVE ST@USUARIO TO MENUUSER.CODIGO
                FIND EQ MENUUSER BY INDEX.1
                [ FOUND] BEGIN
                          MOVE MENUUSER.COR_MOLDURA TO IT_COR_MOLDURA
                          MOVE MENUUSER.COR_TITULO  TO IT_COR_TITULO
                          MOVE MENUUSER.COR_TARJA   TO IT_COR_TARJA
                         END
                [~FOUND] BEGIN
                          MOVE 15  TO IT_COR_MOLDURA
                          MOVE 31  TO IT_COR_TARJA
                          MOVE 63  TO IT_COR_TITULO
                         END
               END

//-------------------INDICA SE TEM RESERVA NOVA---------------------------------
#IFDEF     IT@RESERVA@NOVA
#ELSE
   INTEGER IT@RESERVA@NOVA
#ENDIF
MOVE 0 TO IT@RESERVA@NOVA
IF (OBTER_CONFIGURACAO('RESERVA_NOVA',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO)) IN 'Ss' MOVE 1 TO IT@RESERVA@NOVA

//-------------------INDICA SE NOVA LEI LICITACAO-------------------------------
#IFDEF     IT@NOVA@LEI@LICITACAO
#ELSE
   INTEGER IT@NOVA@LEI@LICITACAO
#ENDIF
MOVE 0 TO IT@NOVA@LEI@LICITACAO
IF (OBTER_CONFIGURACAO('NOVA_LEI_LICITACAO',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO)) IN 'Ss' MOVE 1 TO IT@NOVA@LEI@LICITACAO


//-------------------INDICA SE A PM ESTA COM AS ENTIDADES NO SIAFIC-------------
#IFDEF     IT@SIAFIC@CONSOLIDADO
#ELSE
   INTEGER IT@SIAFIC@CONSOLIDADO
#ENDIF
#IFDEF     IT@RECNUM@PARGERAL
#ELSE
  INTEGER  IT@RECNUM@PARGERAL
#ENDIF

MOVE 0 TO IT@SIAFIC@CONSOLIDADO

IF (OBTER_CONFIGURACAO('SIAFIC_CONSOLIDADO',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO)) IN 'Ss' MOVE 1 TO IT@SIAFIC@CONSOLIDADO

//--
//--rotina ainda em estudos... para verificar se todas as entidades do municipio estao com o sfpm para geracao de balancos etc
//--
IF IT@SIAFIC@CONSOLIDADO EQ 0 BEGIN
                               MOVE PARGERAL.RECNUM TO IT@RECNUM@PARGERAL
                               
                               CLEAR ENTIDADE
                               CONSTRAINT_SET 1
                               CONSTRAIN ENTIDADE.EXERCICIO EQ ST@EXERCICIO@FINANCEIRO
                               CONSTRAINED_FIND FIRST ENTIDADE BY INDEX.2
                               WHILE [FOUND]
                                IF ENTIDADE.DATA_VALIDADE EQ '' BEGIN
                                                                 CLEAR PARGERAL
                                                                 MOVE ENTIDADE.CODIGO         TO PARGERAL.COD_ENTIDADE
                                                                 MOVE ST@EXERCICIO@FINANCEIRO TO PARGERAL.EXERCICIO
                                                                 FIND EQ PARGERAL BY INDEX.2
                                                                 [~FOUND] MOVE 0 TO IT@SIAFIC@CONSOLIDADO
                                                                 CLEAR PARGERAL
                                                                END
                                CONSTRAINT_SET 1
                                CONSTRAINED_FIND NEXT
                               END
                               CONSTRAINT_SET 1 CLEAR
                               
                               CLEAR PARGERAL
                               MOVE IT@RECNUM@PARGERAL TO PARGERAL.RECNUM
                               FIND EQ PARGERAL BY RECNUM
                              END
//--

//--
//--  descomentar as linhas abaixo "valida instalacao websafe"
//--
//--valida instalacao WEBSAFE----------------------------------------------------
//--
// #IFDEF     ST@ARQUIVO@WEBSAFE
// #ELSE
//    STRING  ST@ARQUIVO@WEBSAFE 255
// #ENDIF
// #IFDEF     ST@LINHA@WEBSAFE
// #ELSE
//    STRING  ST@LINHA@WEBSAFE
// #ENDIF
// #IFDEF     ST@CODIGO@USUARIO
// #ELSE
//    STRING  ST@CODIGO@USUARIO
// #ENDIF
// #IFDEF     ST@TERMINAL@ATUAL
// #ELSE
//    STRING  ST@TERMINAL@ATUAL
// #ENDIF
// #IFDEF     ST@CHAMADA
// #ELSE
//    STRING  ST@CHAMADA
// #ENDIF
// #IFDEF     ST@LINHA@FIFO
// #ELSE
//    STRING  ST@LINHA@FIFO
// #ENDIF
// #IFDEF     IT@VALIDA@CLIENTE
// #ELSE
//    INTEGER IT@VALIDA@CLIENTE
// #ENDIF
// #IFDEF     IT@TERMINAL@OK
// #ELSE
//    INTEGER IT@TERMINAL@OK
// #ENDIF
// #IFDEF     IT@INCREMENT@ABORT
// #ELSE
//    INTEGER IT@INCREMENT@ABORT
// #ENDIF
//
// MOVEALL 0 TO IT@VALIDA@CLIENTE IT@TERMINAL@OK
//
// PAGE SET TELA_WEBSAFE_MENSAGEM   AT 06 04 COLORS IT_COR_TITULO IT_COR_TITULO
// PAGE SET TELA_WEBSAFE_AUTENTICAR AT 06 04 COLORS IT_COR_TITULO IT_COR_TITULO
// PAGE SET TELA_SISTEMA            AT  0  0 COLORS IT_COR_TARJA  IT_COR_MOLDURA
//
// AUTOPAGE TELA_SISTEMA
// NAME JN_EXERCICIO_SISTEMA_WS
// NAME JN_TARJA_SISTEMA_WS
// NAME JN_TARJA_DATA_WS JN_TARJA_TITULO_WS
//
// CLEAR MENUUSER
// MOVE ST@USUARIO TO MENUUSER.CODIGO
// FIND EQ MENUUSER BY INDEX.1
//
// //-- rodando por fora nao vem o parametro 'conam_'
// IF NOT 'conam_' IN ST@PREFEITURA BEGIN
//                                   //-- sem usuario... nao roda
//                                   IF ST@USUARIO EQ '' BEGIN
//                                                        MOVE '1' TO IT@VALIDA@CLIENTE
//
//                                                        MOVE 17  TO IT_COR_MOLDURA
//                                                        MOVE 17  TO IT_COR_TARJA
//                                                        MOVE 17  TO IT_COR_TITULO
//                                                       END
//
//                                   ELSE BEGIN
//                                         COMBRANCOS ST@USUARIO 5
//
//                                         CLEAR MENUUSER
//                                         MOVE ST@USUARIO TO MENUUSER.CODIGO
//                                         FIND EQ MENUUSER BY INDEX.1
//                                         [ FOUND] BEGIN
//                                                   MOVE MENUUSER.COR_MOLDURA TO IT_COR_MOLDURA
//                                                   MOVE MENUUSER.COR_TITULO  TO IT_COR_TITULO
//                                                   MOVE MENUUSER.COR_TARJA   TO IT_COR_TARJA
//                                                  END
//                                         [~FOUND] BEGIN
//                                                   IF ST@USUARIO NE 'CONAM' BEGIN
//                                                                             MOVE 17  TO IT_COR_MOLDURA
//                                                                             MOVE 17  TO IT_COR_TARJA
//                                                                             MOVE 17  TO IT_COR_TITULO
//                                                                            END
//                                                  END
//                                        END
//
//                                   //-- com este if por fora o cliente ainda pode conseguir rodar
//                                   //-- sem este if por fora o dfrun r nos programas "chamados" perde-se a tela anterior
//                                   //-- e tambem parte dos parametros 'chain' a quantidade de caracteres cai de 128 para 80 devido a chamada ao PHP
//                                   IF ST@USUARIO NE 'CONAM' BEGIN
//                                                             //-- se for outro terminal... nao roda
//                                                             CLOSE USERPID
//                                                             OPEN  USERPID
//
//                                                             MOVE (TERMINALATUAL('')) TO ST@TERMINAL@ATUAL
//
//                                                             CLEAR USERPID
//                                                             MOVE ST@CODIGO@ENTIDADE      TO USERPID.COD_ENTIDADE
//                                                             MOVE ST@EXERCICIO@FINANCEIRO TO USERPID.EXERCICIO
//                                                             MOVE ST@USUARIO              TO USERPID.CODIGO_USUARIO
//                                                             REPEAT
//                                                              FIND GT USERPID BY INDEX.1
//                                                               [ FOUND] INDICATE FOUND AS USERPID.COD_ENTIDADE   EQ ST@CODIGO@ENTIDADE
//                                                               [ FOUND] INDICATE FOUND AS USERPID.EXERCICIO      EQ ST@EXERCICIO@FINANCEIRO
//                                                               [ FOUND] INDICATE FOUND AS USERPID.CODIGO_USUARIO EQ ST@USUARIO
//                                                               [ FOUND] BEGIN
//                                                                         IF USERPID.TERMINAL EQ ST@TERMINAL@ATUAL BEGIN
//                                                                                                                   MOVE 1 TO IT@TERMINAL@OK
//                                                                                                                  END
//                                                                        END
//                                                             UNTIL [~FOUND]
//                                                             CLEAR USERPID
//
//                                                             IF IT@TERMINAL@OK EQ 0 MOVE 1 TO IT@VALIDA@CLIENTE
//                                                            END
//                                  END
//
// IF 'conam_' IN ST@PREFEITURA MOVE '1' TO IT@VALIDA@CLIENTE
// IF ST@PROGRAMA EQ 'MAIN' MOVE '1' TO IT@VALIDA@CLIENTE
//
// //--login.src ou main.src no acesso o sistema ainda nao tem codigo da entidade e o exercicio
// IF ST@PREFEITURA EQ '' MOVE 0 TO IT@VALIDA@CLIENTE
//
// // clearxy 10 0
// // showln st@prefeitura
// // showln IT@VALIDA@CLIENTE
// // showln st@usuario
// // showln st@codigo@entidade
// // showln st@exercicio@financeiro
// // pause .
//
// //-- ferramentas que serao chamadas pelo manut_tmp(manutencao diaria do sistema) nao devem passar pela validacao
// IF ((ST@CODIGO@ENTIDADE EQ '99') AND (ST@EXERCICIO@FINANCEIRO EQ '9999')) MOVE 0 TO IT@VALIDA@CLIENTE
//
// //-- parametro sera passado pelo main e r
// IF IT@VALIDA@CLIENTE EQ 1 BEGIN
//                            //-- sem mensageria... nao roda...st@prefeitura vazio ( login.flx ) ainda nao tem entidade e exercicio do usuario
//
//                            IF (OBTER_CONFIGURACAO('modulo_mensageria',ST@CODIGO@ENTIDADE,ST@EXERCICIO@FINANCEIRO)) EQ '' BEGIN
//                                                                                                                           KEYPROC OFF
//                                                                                                                           CLEARSCREEN
//                                                                                                                           MOVE 0 TO CURRENT_IMAGE
//                                                                                                                           BLANKFORM TELA_WEBSAFE_MENSAGEM
//                                                                                                                           MOVE (CENTER('M╒DULO DE MENSAGERIA DESABILITADO.',70))                TO TELA_WEBSAFE_MENSAGEM.1
//                                                                                                                           MOVE (CENTER('CONSULTE O SETOR DE SUPORTE DE SISTEMAS DA CONAM.',70)) TO TELA_WEBSAFE_MENSAGEM.3
//                                                                                                                           MOVE (CENTER('Pressione Qualquer Tecla para SAIR',34))                TO TELA_WEBSAFE_MENSAGEM.4
//                                                                                                                           PAGE TELA_WEBSAFE_MENSAGEM
//                                                                                                                           GOTOXY 25 0
//                                                                                                                           PAUSE .
//                                                                                                                           ABORT
//                                                                                                                          END
//
//                            REMOVE 'conam_' FROM ST@PREFEITURA
//
//                            LB_NOVA_VALIDADE:
//
//                            MOVE 'msgeria_' TO ST@ARQUIVO@WEBSAFE
//                            IF ST@USUARIO EQ '' MOVE 'CONAM'    TO ST@CODIGO@USUARIO
//                            ELSE                MOVE ST@USUARIO TO ST@CODIGO@USUARIO
//                            TRIM ST@CODIGO@USUARIO TO ST@CODIGO@USUARIO
//
//                            //--usando arquivo TXT
//                            APPEND ST@ARQUIVO@WEBSAFE (lowercase(ST@CODIGO@USUARIO)) '_w.txt'
//                            CHAMADA_MENSAGEM_WEBSAFE ST_PATH_MENSAGERIA 'mensagem:obter_validade_cliente' ST_MODULO_MENSAGERIA MENUUSER.RECNUM MENUUSER.NOME 'x' (TRIM(MENUUSER.CODIGO)) ST@CODIGO@ENTIDADE
//                            LER_RETORNO_WEBSAFE
//                            //--usando arquivo TXT fim
//
//                            IF ST@ACESSO@API EQ '' BEGIN
//                                                    KEYPROC OFF
//                                                    IF ST@LINHA@WEBSAFE NE '' BEGIN
//                                                                               IF (((LEFT(ST@LINHA@WEBSAFE,1)) NE '7') AND ((RIGHT(ST@LINHA@WEBSAFE,1)) NE '9')) BEGIN
//                                                                                                                                                                  KEYPROC OFF
//                                                                                                                                                                  CLEARSCREEN
//                                                                                                                                                                  MOVE 0 TO CURRENT_IMAGE
//                                                                                                                                                                  BLANKFORM TELA_WEBSAFE_MENSAGEM
//                                                                                                                                                                  MOVE (CENTER('SISTEMA TEMPORARIAMENTE FORA DO AR.',70))               TO TELA_WEBSAFE_MENSAGEM.1
//                                                                                                                                                                  MOVE (CENTER('CONSULTE O SETOR DE SUPORTE DE SISTEMAS DA CONAM.',70)) TO TELA_WEBSAFE_MENSAGEM.3
//                                                                                                                                                                  MOVE (CENTER('Pressione Qualquer Tecla para SAIR',34))                TO TELA_WEBSAFE_MENSAGEM.4
//                                                                                                                                                                  PAGE TELA_WEBSAFE_MENSAGEM
//                                                                                                                                                                  GOTOXY 25 0
//                                                                                                                                                                  PAUSE .
//                                                                                                                                                                  ABORT
//                                                                                                                                                                 END
//                                                                              END
//                                                    ELSE BEGIN
//                                                          INDICATE @VALIDAR_TOKEN! TRUE
//
//                                                          MOVE 15  TO IT_COR_MOLDURA
//                                                          MOVE 31  TO IT_COR_TARJA
//                                                          MOVE 63  TO IT_COR_TITULO
//
//                                                          CHAMADA_MENSAGEM_WEBSAFE ST_PATH_MENSAGERIA 'autenticacao:novo' ST_MODULO_MENSAGERIA MENUUSER.RECNUM MENUUSER.NOME 'x' (TRIM(MENUUSER.CODIGO)) ST@CODIGO@ENTIDADE
//
//                                                          LER_RETORNO_WEBSAFE
//
//                                                          IF ST@LINHA@WEBSAFE EQ '' BEGIN
//                                                                                     KEYPROC OFF
//                                                                                     CLEARSCREEN
//                                                                                     MOVE 0 TO CURRENT_IMAGE
//                                                                                     BLANKFORM TELA_WEBSAFE_MENSAGEM
//                                                                                     MOVE (CENTER('SISTEMA TEMPORARIAMENTE FORA DO AR.',70))                       TO TELA_WEBSAFE_MENSAGEM.1
//                                                                                     MOVE (CENTER('PROBLEMAS NA OBTENCAO DO TOKEN PARA LIBERACAO DO SISTEMA.',70)) TO TELA_WEBSAFE_MENSAGEM.2
//                                                                                     MOVE (CENTER('CONSULTE O SETOR DE SUPORTE DE SISTEMAS DA CONAM.',70))         TO TELA_WEBSAFE_MENSAGEM.3
//                                                                                     MOVE (CENTER('Pressione Qualquer Tecla para SAIR',34))                        TO TELA_WEBSAFE_MENSAGEM.4
//                                                                                     PAGE TELA_WEBSAFE_MENSAGEM
//                                                                                     GOTOXY 25 0
//                                                                                     PAUSE .
//                                                                                     ABORT
//                                                                                    END
//
//                                                          LB_VOLTA_CODIGO_AUTENTICACAO:
//                                                          CLEARSCREEN
//                                                          MOVE ST@LINHA@WEBSAFE TO TELA_WEBSAFE_AUTENTICAR.1
//                                                          CLEARFORM TELA_WEBSAFE_AUTENTICAR.2
//                                                          MOVE 0 TO CURRENT_IMAGE
//                                                          PAGE TELA_WEBSAFE_AUTENTICAR
//
//                                                          SCREENMODE IT_COR_TARJA ON
//                                                          CLEARFORM TELA_WEBSAFE_AUTENTICAR.2
//                                                          REPEAT
//                                                           [ @VALIDAR_TOKEN!] ACCEPT TELA_WEBSAFE_AUTENTICAR.2 {AUTOCLEAR}
//                                                           [ KEY.ESCAPE] BEGIN
//                                                                          ABORT
//                                                                         END
//                                                          UNTIL TELA_WEBSAFE_AUTENTICAR.2 NE ''
//
//                                                          INDICATE @VALIDAR_TOKEN! FALSE
//
//                                                          SCREENMODE IT_COR_TARJA OFF
//                                                          IF TELA_WEBSAFE_AUTENTICAR.2 NE '' BEGIN
//                                                                                              CHAMADA_MENSAGEM_WEBSAFE ST_PATH_MENSAGERIA 'autenticacao:validar' ST_MODULO_MENSAGERIA MENUUSER.RECNUM MENUUSER.NOME TELA_WEBSAFE_AUTENTICAR.2 (TRIM(MENUUSER.CODIGO)) ST@CODIGO@ENTIDADE
//                                                                                              SLEEP 1
//
//                                                                                              LER_RETORNO_WEBSAFE
//                                                                                              GOTO LB_NOVA_VALIDADE
//                                                                                             END
//                                                          ELSE GOTO LB_VOLTA_CODIGO_AUTENTICACAO
//                                                         END
//                                                     KEYPROC ON
//                                                   END
//
//                            SCREENMODE IT_COR_MOLDURA ON
//                            MOVE PARGERAL.EXERCICIO TO JN_EXERCICIO_SISTEMA_WS
//                            SCREENMODE IT_COR_TARJA ON
//                            MOVE (CENTER(ST@PREFEITURA,78)) TO JN_TARJA_SISTEMA_WS
//                            SYSDATA JN_TARJA_DATA_WS
//                            //--mostra nome do programa no canto superior direito na tela
//                            GOTOXY 1 70
//                            SHOW ST@PROGRAMA
//                            SCREENMODE IT_COR_TITULO ON
//                            CABEC MENUTITU.TITULO JN_TARJA_TITULO_WS
//                            SCREENMODE IT_COR_TARJA OFF
//                            SCREENMODE IT_COR_TITULO OFF
//                           END

IF 'sistema_' IN ST@PREFEITURA BEGIN
                              REMOVE 'sistema_' FROM ST@PREFEITURA
                             END
//----------------------------------------------------------------------------------

//--mostra nome do programa no canto superior direito na tela
GOTOXY 1 70
SHOW ST@PROGRAMA


//---------------- POSICIONA PARGERAL ENTIDADE/EXERCICIO ---------------------------
MOVE 0 TO IT@QTDE@REGISTROS@PARGERAL

FILE_SIZE PARGERAL TO IT@QTDE@REGISTROS@PARGERAL

// clearxy 0 0
// showln st@prefeitura
// showln st@usuario
// showln st@opcao
// showln st@programa
// showln st@exercicio@financeiro
// showln st@codigo@entidade
// showln it@qtde@registros@pargeral
// pause .

IF IT@QTDE@REGISTROS@PARGERAL GT 1 BEGIN
                                    //--primeiro acesso for pelo login nao buscar o pargeral abaixo
                                    //--todas as variaveis abaixo devem estar vazias nesse momento
                                    IF ((ST@PREFEITURA           NE '') OR;
                                        (ST@USUARIO              NE '') OR;
                                        (ST@OPCAO                NE '') OR;
                                        (ST@PROGRAMA             NE '') OR;
                                        (ST@EXERCICIO@FINANCEIRO NE '') OR;
                                        (ST@CODIGO@ENTIDADE      NE ''));
                                    BEGIN
                                     IF ST@EXERCICIO@FINANCEIRO NE '9999' BEGIN //-- 9999 vem do manut_tmp ferramenta executada a noite
                                                                           CLEAR PARGERAL
                                                                           MOVE ST@EXERCICIO@FINANCEIRO TO PARGERAL.EXERCICIO
                                                                           MOVE ST@CODIGO@ENTIDADE      TO PARGERAL.COD_ENTIDADE
                                                                           FIND EQ PARGERAL BY INDEX.1
                                                                           [~FOUND] BEGIN
                                                                                     CABEC ' ( Parametros do Sistema ) ' TELA_SEGURANCA.1
                                                                                     PAGE TELA_SEGURANCA
                                                                                     GOTOXY 25 0
                                                                                     PAUSE .
                                                                                     ABORT
                                                                                    END
                                                                          END
                                    END
                                   END
ELSE BEGIN
      IF ST@CODIGO@ENTIDADE NE 'XX' BEGIN
                                     CLEAR PARGERAL
                                     FIND GT PARGERAL BY RECNUM
                                     [~FOUND] BEGIN
                                               CABEC ' ( Parametros do Sistema ) ' TELA_SEGURANCA.1
                                               PAGE TELA_SEGURANCA
                                               GOTOXY 25 0
                                               PAUSE .
                                               ABORT
                                              END
                                    END
     END
//----------------------------------------------------------------------------------

//---------------- POSICIONA PARGERAL ENTIDADE/EXERCICIO ---------------------------
//--
//-- !1 exercicio
//--
#COMMAND POSICIONA_SALDO_CAIXA
 IF ST@VERSAO@SIAFIC EQ 'VERSAO_02' BEGIN
                                     CLEAR CAIXA
                                     MOVE ST@CODIGO@ENTIDADE TO CAIXA.COD_ENTIDADE
                                     MOVE !1                 TO CAIXA.EXERCICIO
                                     FIND EQ CAIXA BY INDEX.1
                                     [~FOUND] CLEAR CAIXA
                                    END
 ELSE BEGIN
       CLEAR CAIXA
       MOVE ST@CODIGO@ENTIDADE TO CAIXA.COD_ENTIDADE
       MOVE !1                 TO CAIXA.EXERCICIO
       FIND GT CAIXA BY RECNUM
       [~FOUND] CLEAR CAIXA
      END
#ENDCOMMAND

#COMMAND GERA_LOG
#IFDEF    ST@LOG
#ELSE
   STRING ST@LOG
#ENDIF
#IFDEF    ST@SAIDA@LOG
#ELSE
   STRING ST@SAIDA@LOG 255
#ENDIF
#IFDEF    ST@DATA@HORA
#ELSE
   STRING ST@DATA@HORA
#ENDIF
#IFDEF    ST@HORA
#ELSE
   STRING ST@HORA
#ENDIF
#IFDEF    ST@MINUTO
#ELSE
   STRING ST@MINUTO
#ENDIF
#IFDEF    ST@SEGUNDO
#ELSE
   STRING ST@SEGUNDO
#ENDIF
#IFDEF    ST@IP
#ELSE
   STRING ST@IP
#ENDIF
#IFDEF    ST@LINHA
#ELSE
   STRING ST@LINHA
#ENDIF
#IFDEF    DT@DATA
#ELSE
   DATE   DT@DATA
#ENDIF

 SYSDATE4 DT@DATA ST@HORA ST@MINUTO ST@SEGUNDO
 COMZEROS ST@HORA    2
 COMZEROS ST@MINUTO  2
 COMZEROS ST@SEGUNDO 2

 MOVE DT@DATA TO ST@DATA@HORA
 APPEND ST@DATA@HORA ' ' ST@HORA ":" ST@MINUTO ":" ST@SEGUNDO
 
 //--colocar o ip na descricao
 DIRECT_INPUT CHANNEL 9 ST@SAIDA@IP
 READLN CHANNEL 9 ST@LINHA
 MOVE ' IP ' TO ST@IP
 APPEND ST@IP (TRIM(ST@LINHA))
 CLOSE_INPUT CHANNEL 9
 //--final colocar o ip na descricao
 
 MOVE '/home/conam/tmp/sistema.log' TO ST@LOG
 
 APPEND_OUTPUT CHANNEL 9 ST@LOG 
 
 MOVE ST@USUARIO TO ST@SAIDA@LOG
 APPEND ST@SAIDA@LOG ' ' ST@IP ' ' ST@DATA@HORA ' ' !1 ' ' !2
 WRITELN CHANNEL 9 ST@SAIDA@LOG
 CLOSE_OUTPUT CHANNEL 9 
#ENDCOMMAND

//--
//--contas contabil desdobrada pela conam
//--
#IFDEF    ST@CONTA@ANALITICA@ESPECIAL
#ELSE
   STRING ST@CONTA@ANALITICA@ESPECIAL 255
#ENDIF

MOVE '' TO ST@CONTA@ANALITICA@ESPECIAL
IF PARGERAL.EXERCICIO LE '2021' APPEND ST@CONTA@ANALITICA@ESPECIAL '1.1.4.1.1.09.07.00'
ELSE                            APPEND ST@CONTA@ANALITICA@ESPECIAL '1.1.4.4.1.01.07.00-1.1.4.4.1.11.07.00-1.1.4.4.1.01.17.00-1.1.4.4.1.99.01.00'
//--

//--
//-- usuario + terminal chave para temporarios
//--
MOVE (TRIM(ST@USUARIO)) TO ST@USR@TTY
APPEND ST@USR@TTY '-' (TRIM(UPPERCASE(TERMINALATUAL(''))))
TRIM ST@USR@TTY TO ST@USR@TTY
